DELIMITER $$
CREATE PROCEDURE `amadeus_all_load_service`(
	IN `P_KEY` INT,
	OUT `P_TKT_KEY` VARCHAR(100),
	OUT `P_FOP_KEY` VARCHAR(50),
	OUT `P_FLEX_DTL` VARCHAR(50),
	OUT `P_SUCCESS` VARCHAR(50)
)
BEGIN
 DECLARE DONE BOOLEAN DEFAULT FALSE;
 DECLARE errcount INT;
 DECLARE errno INT;
 DECLARE msg TEXT;
 DECLARE p_cursor       VARCHAR(240);
 DECLARE p_cursor_1     VARCHAR(240);
 DECLARE P_TKT_NUMBER VARCHAR(240);
 DECLARE tkt_airline  VARCHAR(10);
 DECLARE air_rfnd  VARCHAR(10);
 DECLARE air_void  VARCHAR(10);
DECLARE air_htl_key   BIGINT;
DECLARE prd_code   VARCHAR(50);
DECLARE car_prd_code  VARCHAR(50);
DECLARE air_find_code VARCHAR(5);
DECLARE htl_dtl_chkr  VARCHAR(50);
DECLARE htl_key_chkr  BIGINT;
DECLARE pnr_number VARCHAR(50);
DECLARE void_fnd  VARCHAR(50);
 
DECLARE HTL_DTL_CHKR_CURSOR CURSOR FOR 
SELECT DISTINCT 'Y' FROM id_air_b WHERE SUBSTR(airb_0,1,5) = 'B-INV'
AND airb_key = p_key;

DECLARE HTL_AIR_KEY CURSOR FOR
SELECT DISTINCT 'Y' FROM id_air_u WHERE SUBSTR(airu_1,4,3) in ('HHL','HTL') AND airu_key IN 
(SELECT airt_key FROM id_air_t WHERE LENGTH(SUBSTR(airt_0,8,10)) <= 7 AND airt_key = p_key);
 
  DECLARE htl_find_cursor CURSOR FOR 
  SELECT SUBSTR(airu_1,4,3) FROM id_air_u WHERE  airu_key = p_key AND SUBSTR(airu_1,4,3) IN ('HHL','HTL');
  
    DECLARE car_find_cursor CURSOR FOR 
  SELECT SUBSTR(airu_1,4,3) FROM id_air_u WHERE  airu_key = p_key AND SUBSTR(airu_1,4,3) IN ('CCR');
 
  DECLARE air_find_cursor CURSOR FOR 
  SELECT DISTINCT 'Y' FROM id_air_t WHERE  airt_key = p_key AND length(airt_0)>=10;
 
 DECLARE pnr_number_cursor CURSOR FOR
   select 
  SUBSTR(airm_0,(INSTR(airm_0, ' ')+1), 6) pnr
    FROM id_air_m
   WHERE airm_key = p_key
     AND SUBSTR(airm_0,1,5) = 'MUC1A';
 
 DECLARE void_check_cursor CURSOR FOR  
   SELECT SUBSTR(air_2, 1, 4) void_status FROM id_air_amadeus WHERE air_key = p_key; 
   
 DECLARE refund_check_cursor CURSOR FOR
  SELECT max(SUBSTR(aira_1,1,2)) FROM id_air_a WHERE aira_key = p_key ;
 
  DECLARE CONTINUE HANDLER FOR NOT FOUND SET DONE = TRUE;
  
  DECLARE EXIT HANDLER FOR SQLEXCEPTION
  BEGIN
    GET CURRENT DIAGNOSTICS CONDITION 1
      errno = MYSQL_ERRNO, msg = MESSAGE_TEXT;
                INSERT INTO t_id_gds_loading_exception (LE_COMPANY,LE_CRS,LE_AIRLINE,LE_TICKET_NUMBER,LE_LOAD_DATE,LE_LOAD_ERROR,
    LE_LOAD_PLACE,LE_REMARK_1,LE_REMARK_2,LE_REMARK_3,LE_REMARK_4,lock_key,profile_key) 
VALUES('1','AMADEUS_CMM',tkt_airline,p_tkt_number,CURRENT_DATE,msg,p_cursor,CONCAT('Reference Key',p_key),CURRENT_TIMESTAMP,NULL,NULL,0,4);
         
  END;
  
  DECLARE EXIT HANDLER FOR 1265
  BEGIN
    GET CURRENT DIAGNOSTICS CONDITION 1
      errno = MYSQL_ERRNO, msg = MESSAGE_TEXT;
                INSERT INTO t_id_gds_loading_exception (LE_COMPANY,LE_CRS,LE_AIRLINE,LE_TICKET_NUMBER,LE_LOAD_DATE,LE_LOAD_ERROR,
    LE_LOAD_PLACE,LE_REMARK_1,LE_REMARK_2,LE_REMARK_3,LE_REMARK_4,lock_key,profile_key) 
VALUES('1','AMADEUS_CMM',tkt_airline,p_tkt_number,CURRENT_DATE,msg,p_cursor,CONCAT('Reference Key',p_key),CURRENT_TIMESTAMP,NULL,NULL,0,4);
         
  END;
  
  SET p_cursor = 'htl_find_cursor';
  OPEN  htl_find_cursor;
  FETCH htl_find_cursor INTO prd_code;
  CLOSE htl_find_cursor;
  
    SET p_cursor = 'car_find_cursor';
  OPEN  car_find_cursor;
  FETCH car_find_cursor INTO car_prd_code;
  CLOSE car_find_cursor;
  
  SET p_cursor = 'air_find_cursor';
  
  OPEN  air_find_cursor;
  FETCH air_find_cursor INTO air_find_code;
  CLOSE air_find_cursor;
  
  
  OPEN  pnr_number_cursor;
  FETCH pnr_number_cursor INTO pnr_number;
  CLOSE pnr_number_cursor;
  

  SET p_cursor = 'refund_check_cursor';
  OPEN refund_check_cursor;
  FETCH refund_check_cursor INTO air_rfnd;
  CLOSE refund_check_cursor;
  
   OPEN void_check_cursor;
  FETCH void_check_cursor INTO void_fnd;
  CLOSE void_check_cursor;
  
  SET p_cursor = 'HTL_AIR_KEY';
  OPEN  HTL_AIR_KEY;
  FETCH HTL_AIR_KEY INTO htl_key_chkr;
  CLOSE HTL_AIR_KEY; 
  
  SET p_cursor = 'HTL_DTL_CHKR_CURSOR';
  OPEN  HTL_DTL_CHKR_CURSOR;
  FETCH HTL_DTL_CHKR_CURSOR INTO htl_dtl_chkr;
  CLOSE HTL_DTL_CHKR_CURSOR;  
 
  SET p_cursor = 'LOADING TIME'; 
 
IF  prd_code in ('HHL','HTL') AND IFNULL(htl_dtl_chkr,'N') = 'Y' THEN
BEGIN
 DECLARE DONE 				BOOLEAN DEFAULT FALSE;
 DECLARE BDF 				INT DEFAULT 0;
 DECLARE errcount 		INT;
 DECLARE errno 			INT;
 DECLARE msg 				TEXT;
 DECLARE p_cursor       VARCHAR(240);
 DECLARE p_cursor_1     VARCHAR(240);DECLARE tkt_void_status VARCHAR(2);
 DECLARE ticket_check_cursor_tkt VARCHAR(25); 
 DECLARE v_tmp_tfind		VARCHAR(2); 
 DECLARE p_service_type VARCHAR(240);
 DECLARE p_service_name 	   VARCHAR(240);
 DECLARE p_tkt_number VARCHAR(15);
 DECLARE sec_tkt_number 	VARCHAR(240);
 DECLARE p_air_serial 		BIGINT;
 DECLARE book_clerk          VARCHAR(10);
 DECLARE exp_tkt_clerk     VARCHAR(10);
 DECLARE ticket_clerk        VARCHAR(10);
 DECLARE ticket_clerk_branch VARCHAR(25);
 DECLARE v_brnch_name		VARCHAR(240);
 DECLARE v_id_value varchar(24);
  DECLARE ib_value varchar(24);
 DECLARE book_clerk_key      BIGINT;
 DECLARE src_key      BIGINT;
 DECLARE vno_agent_key BIGINT;
 DECLARE Country_key      BIGINT;
 DECLARE country_name   VARCHAR(25);
 DECLARE v_country_name VARCHAR(25);
 DECLARE v_chain_key  BIGINT;
 DECLARE cntry_key      BIGINT;
 DECLARE c_key   BIGINT;
 DECLARE final_key      BIGINT;
 DECLARE ticket_clerk_key    BIGINT;
 DECLARE tmp_class           VARCHAR(10); 
 DECLARE tkt_class			VARCHAR(10);
 DECLARE dkt_value			VARCHAR(25);
 DECLARE srv_fee_chk        VARCHAR(10);

 DECLARE tkt_location  		VARCHAR(10);
 DECLARE tkt_date      		DATETIME;
 DECLARE tvl_date      		DATETIME;
 DECLARE tkt_airline  		VARCHAR(10);
 DECLARE s_airline 			VARCHAR(10);
 DECLARE tkt_air_release	VARCHAR(10);
 DECLARE rsn_code_key      BIGINT;
 DECLARE rsn_code       	    VARCHAR(200);
   
 DECLARE rc_cr_dt				VARCHAR(10);
 DECLARE htl_anum              BIGINT;
 DECLARE htl_anum1             BIGINT;
 DECLARE tkt_exch_doc_number 	VARCHAR(25) DEFAULT  NULL;
 DECLARE pub_fare           	DOUBLE;
 DECLARE sell_fare      		DOUBLE;
 DECLARE ex_rate            	DOUBLE  DEFAULT  1;
 DECLARE tkt_currency       	VARCHAR(10);
 DECLARE tmp_sell_fare      	DOUBLE  DEFAULT  0;
 DECLARE tmp_ex_rate        	DOUBLE  DEFAULT  1;
 DECLARE tmp_currency       	VARCHAR(10);
 DECLARE base_currency      	VARCHAR(10);
 DECLARE tkt_fare_mode      	VARCHAR(5);
 DECLARE v_pub_fare          	DOUBLE;
 DECLARE v_ex_rate           	DOUBLE  DEFAULT  1;
 DECLARE v_tkt_currency      	VARCHAR(10);
 DECLARE exch_rate          	DOUBLE  DEFAULT  1;
 DECLARE v_issue_mode	      VARCHAR(1);
 DECLARE tkt_curr_key			BIGINT;
 DECLARE tkt_prd_key				BIGINT;
 DECLARE issue_mode_key			BIGINT;
 DECLARE fd_local_amt			DOUBLE;
 DECLARE m_cntry_key     INT;
 DECLARE air_rls_key			INT;
 DECLARE dkt_key_no			BIGINT;
 DECLARE dkt_sum_key			BIGINT;
 DECLARE dkt_num_key			BIGINT;
 DECLARE dkt_acc_status		VARCHAR(25); 
 DECLARE tkt_key				BIGINT;
 DECLARE tkt_srv_key			BIGINT;
 DECLARE tkt_tax_key			BIGINT;
 DECLARE dkt_hotel_cnt       BIGINT;
 DECLARE tkt_fopd_key		BIGINT;
 DECLARE prd_type				VARCHAR(10);
 DECLARE tmp_iata_code		VARCHAR(25);
 DECLARE t_iata_agent		VARCHAR(25);
 DECLARE t_iata_location	VARCHAR(25);
 DECLARE t_agent_key			BIGINT;
 DECLARE src_agent_key		BIGINT;
 DECLARE t_location_key		BIGINT;
 DECLARE t_location_code	VARCHAR(25);
 DECLARE t_location_name	VARCHAR(25);
 DECLARE v_brnch_code		VARCHAR(25);
 DECLARE v_htl_chain        VARCHAR(4);
 DECLARE htl_chn        VARCHAR(2);
 DECLARE v_deal_code		   VARCHAR(25);
 DECLARE pnr_number			VARCHAR(25);
 DECLARE ama_branch			VARCHAR(25);
 DECLARE fop_def_key			BIGINT;
 DECLARE htl_booking_curr   VARCHAR(40);
 DECLARE v_conf_tkt_number_chk VARCHAR(10);
 DECLARE default_msg    VARCHAR(240);
DECLARE htl_adrss_1            VARCHAR(200);
DECLARE htl_tel_num            VARCHAR(200);
DECLARE htl_fax_num            VARCHAR(200);
DECLARE htl_email              VARCHAR(200);

 DECLARE tax1   		VARCHAR(10);
 DECLARE tax2   		VARCHAR(10);
 DECLARE tax3   		VARCHAR(10);
 DECLARE tax4   		VARCHAR(10);
 DECLARE tax5   		VARCHAR(10);
 DECLARE tax6   		VARCHAR(10);
 DECLARE tax7   		VARCHAR(10);
 DECLARE tax8   		VARCHAR(10);
 DECLARE tax9   		VARCHAR(10);
 DECLARE tax10  		VARCHAR(10);
 DECLARE tax11  		VARCHAR(10);
 DECLARE tax12  		VARCHAR(10);
 DECLARE tax13  		VARCHAR(10);
 DECLARE tax14   		VARCHAR(10);
 DECLARE tax15   		VARCHAR(10);
 DECLARE tax16   		VARCHAR(10);
 DECLARE tax17   		VARCHAR(10);
 DECLARE tax18   		VARCHAR(10);
 DECLARE tax19   		VARCHAR(10);
 DECLARE tax20  		VARCHAR(10);
 DECLARE tax45  		VARCHAR(10);
 DECLARE taxa1  		DOUBLE  DEFAULT  0;
 DECLARE taxa2  		DOUBLE  DEFAULT  0;
 DECLARE taxa3  		DOUBLE  DEFAULT  0;
 DECLARE taxa4  		DOUBLE  DEFAULT  0;
 DECLARE taxa5  		DOUBLE  DEFAULT  0;
 DECLARE taxa6  		DOUBLE  DEFAULT  0;
 DECLARE taxa7  		DOUBLE  DEFAULT  0;
 DECLARE taxa8  		DOUBLE  DEFAULT  0;
 DECLARE taxa9  		DOUBLE  DEFAULT  0;
 DECLARE taxa10 		DOUBLE  DEFAULT  0;
 DECLARE taxa11 		DOUBLE  DEFAULT  0;
 DECLARE taxa12 		DOUBLE  DEFAULT  0;
 DECLARE taxa13 		DOUBLE  DEFAULT  0;
 DECLARE taxa14  		DOUBLE  DEFAULT  0;
 DECLARE taxa15  		DOUBLE  DEFAULT  0;
 DECLARE taxa16  		DOUBLE  DEFAULT  0;
 DECLARE taxa17  		DOUBLE  DEFAULT  0;
 DECLARE taxa18  		DOUBLE  DEFAULT  0;
 DECLARE taxa19  		DOUBLE  DEFAULT  0;
 DECLARE taxa20 		DOUBLE  DEFAULT  0;
 DECLARE taxa45 		DOUBLE  DEFAULT  0;
 DECLARE tax_d       DOUBLE;
 DECLARE tax_1       DOUBLE;
 DECLARE tax_2       DOUBLE;
 DECLARE tax_code   	VARCHAR(10);
 DECLARE tax_amount 	DOUBLE DEFAULT 0;
 DECLARE tax_find    VARCHAR(1);
 DECLARE tax_cnt		INT;
 DECLARE tot_tax     DOUBLE;
 DECLARE tax_key		BIGINT;
 DECLARE tkt_destination_tax  DOUBLE;

 DECLARE sale_exec          	VARCHAR(10);
 DECLARE cust_code          	VARCHAR(10);
 DECLARE walk_cust_code     	VARCHAR(30);
 DECLARE addi_selling       	DOUBLE  DEFAULT  0;
 DECLARE addi_collection    	DOUBLE  DEFAULT  0;
 DECLARE disc_amt           	DOUBLE  DEFAULT  0;
 DECLARE orc_amt            	DOUBLE  DEFAULT  0;
 DECLARE spl_disc           	DOUBLE  DEFAULT  0;

 DECLARE cash_amount  		DOUBLE;
 DECLARE sett_mode      	VARCHAR(1);
 DECLARE lpo               VARCHAR(24);
 DECLARE corporate 			VARCHAR(20);
 DECLARE pnrnumber 			VARCHAR(40);
 DECLARE servicefees 		DOUBLE DEFAULT 0;
 DECLARE ticket_clerk_check  VARCHAR(10);
 DECLARE book_clerk_check   VARCHAR(10);
DECLARE  ticket_clerk_code   VARCHAR(20);
 DECLARE book_clerk_code  VARCHAR(20);
 DECLARE lpo_date 			DATETIME;
 DECLARE cust_amt          DOUBLE  DEFAULT  0;
 DECLARE tkt_card_find     VARCHAR(2);
 DECLARE tkt_card_type  	VARCHAR(10);
 DECLARE tkt_card_number 	VARCHAR(50);
 DECLARE tkt_card_num_x		VARCHAR(50);
 DECLARE tkt_card_amount 	DOUBLE;
 DECLARE amex_app_code 		VARCHAR(30);
 DECLARE expiry_date 		VARCHAR(30);
 DECLARE emd_tkt_ind 		VARCHAR(5);
 DECLARE tkt_pax           VARCHAR(75);
 DECLARE tkt_pax_name      VARCHAR(75);
 DECLARE tkt_dkt_pax       VARCHAR(75);
 DECLARE trans_amount 		DOUBLE;
 DECLARE collect_amount 	DECIMAL(18,4);
 DECLARE definition_code	VARCHAR(100);	
 DECLARE card_key				BIGINT;
 DECLARE card_type			VARCHAR(75);
 DECLARE card_name			VARCHAR(75);
 DECLARE card_an_key			BIGINT;
 DECLARE card_an_code		VARCHAR(75);
 DECLARE card_an_name		VARCHAR(75);
 DECLARE card_srv_fee		DOUBLE;
 DECLARE card_lodge_status	VARCHAR(75);
 DECLARE card_lodge_num		VARCHAR(75);
 DECLARE card_exp_dt			DATE;
 DECLARE htl_adrss         VARCHAR(400);

 DECLARE tkt_dept_date		DATETIME;
 DECLARE tkt_arr_date  		DATETIME;
 DECLARE s_arr_key			INT;
 DECLARE s_dst_key			INT;
 DECLARE s_cls_key			INT;
 DECLARE s_air_key			INT;
 DECLARE s_coupon				INT;
 DECLARE conj_flg				INT;

 DECLARE DKT_NUM   			VARCHAR(4000);
 DECLARE DKT_STATUS    		VARCHAR(4000);
 DECLARE DKT_TEXT      		VARCHAR(4000);
 DECLARE dkt_type_value		VARCHAR(400);
 DECLARE dkt_type_key		BIGINT;

 DECLARE v_applied_on_code				VARCHAR(2);
 DECLARE v_applied_on_value			VARCHAR(240);
 DECLARE v_inter_domestic_key			INT;
 DECLARE v_product_type					INT;
 DECLARE v_package_normal_key			INT;
 DECLARE v_output_input_type_key		INT;
 DECLARE v_percentage					DOUBLE;
 DECLARE v_applicable_on				DATE;
 DECLARE v_applied_on_key				INT;
 DECLARE v_vat_code						VARCHAR(2000);
 DECLARE v_vat_description					VARCHAR(2000);
 DECLARE v_inclusive_exclusive_key		INT;
 DECLARE v_inclusive_exclusive_code		VARCHAR(2000);
 DECLARE v_inclusive_exclusive_value	VARCHAR(2000);
 DECLARE v_collection_type_key		INT;
 DECLARE v_collection_code		VARCHAR(2000);
 DECLARE v_io_type_code			VARCHAR(2000);
 DECLARE v_io_type_value		VARCHAR(2000);
 DECLARE vat_applied_on			VARCHAR(240);

 DECLARE vat_on_amt				DOUBLE;
 DECLARE vat_amt					DOUBLE;
 DECLARE canc_amt					DOUBLE;
 DECLARE comm_amt					DOUBLE;
 DECLARE tot_vat_amt				DOUBLE;
 DECLARE v_tax_k7_amt   		DECIMAL(16,2);
 DECLARE v_k7_tax_amt  			DECIMAL(16,2);
 DECLARE v_k7_srv_amt   		DECIMAL(16,2);
 DECLARE v_tax_k7_code  		VARCHAR(24);
 DECLARE property_code    VARCHAR(20);

 DECLARE tax_vat_code				VARCHAR(2000);
 DECLARE tax_vat_description		VARCHAR(2000);
 DECLARE tax_inclusive_exclusive_code	VARCHAR(2000);
 DECLARE tax_collection_code		VARCHAR(2000);
 DECLARE tax_io_type_code			VARCHAR(2000);
 DECLARE tax_vat_percentage		DOUBLE;
 DECLARE tax_vat_amt					DOUBLE;
 DECLARE tax_appliedon_code		VARCHAR(20);
 DECLARE tax_appliedon_value		VARCHAR(240);
 DECLARE tax_applicable_on					VARCHAR(2000);

 DECLARE srv_vat_code			VARCHAR(2000);
 DECLARE srv_vat_description	VARCHAR(2000);
 DECLARE srv_inclusive_exclusive_code	VARCHAR(2000);
 DECLARE srv_collection_code	VARCHAR(2000);
 DECLARE srv_io_type_code		VARCHAR(2000);
 DECLARE srv_vat_percentage	DOUBLE;
 DECLARE srv_vat_amt				DOUBLE;
 DECLARE srv_appliedon_code	VARCHAR(20);
 DECLARE srv_appliedon_value	VARCHAR(240);
 DECLARE srv_vat_applicable	VARCHAR(2000);

 DECLARE vat_in_out				VARCHAR(2);
 DECLARE vat_tot_amount			DOUBLE;

 DECLARE fop_value				VARCHAR(25);
 DECLARE fop_settle_key 		BIGINT;
 DECLARE cust_exempt_status 	VARCHAR(2);
 DECLARE cust_key	 				VARCHAR(60);
 DECLARE walk_cust_key 			VARCHAR(60);
 DECLARE v_locint_f  			VARCHAR(2);
 DECLARE v_locint_t		  		VARCHAR(2);
 DECLARE inter_domestic  		VARCHAR(2);
 DECLARE inter_domestic_key	BIGINT;
 DECLARE service_type_key		BIGINT;
 DECLARE procss_typ	  			VARCHAR(24);
 DECLARE procss_typ_key			BIGINT;
 DECLARE prcss_code	  			VARCHAR(2);
 DECLARE passenger_age_key		BIGINT;
 DECLARE passenger_age_type	VARCHAR(4);
 DECLARE passenger_age_code	VARCHAR(4);
 DECLARE room_basis         VARCHAR(50);
 DECLARE room_basis_key     BIGINT;

 DECLARE service_id				BIGINT;
 DECLARE service_key				BIGINT;
 DECLARE service_code			VARCHAR(240);
 DECLARE service_name 			VARCHAR(240);
 DECLARE discount_amount		DECIMAL(18,4);
 DECLARE charge_mode				VARCHAR(240);
 DECLARE charge_on				VARCHAR(240);
 DECLARE charge_amount			DECIMAL(18,4);
 DECLARE charge_adult_amount	DECIMAL(18,4);
 DECLARE charge_child_amount	DECIMAL(18,4);
 DECLARE charge_infant_amount	DECIMAL(18,4);
 DECLARE serv_amount				DECIMAL(18,4);
 DECLARE file_serv_amnt			VARCHAR(240);
 DECLARE file_serv_amount		DECIMAL(18,4);
 DECLARE total_serv_amount		DECIMAL(18,4);
 DECLARE srv_fee_code			VARCHAR(240);
 DECLARE srv_file_code			VARCHAR(240);
DECLARE c_code     VARCHAR(50);
 DECLARE cust_serv 				VARCHAR(5);
 DECLARE bk_pcc		   		VARCHAR(10);    
 DECLARE iss_pcc	  				VARCHAR(10);    
 DECLARE pcc_loc 					VARCHAR(10);    
 DECLARE t_iss_bk 				VARCHAR(5);
 DECLARE loc_iata_pcc 			VARCHAR(5);
  DECLARE value_key             VARCHAR(50);
 DECLARE value_code             VARCHAR(50);
 DECLARE country_code_key      VARCHAR(75);

 DECLARE p_udid_code				VARCHAR(240);
 DECLARE p_udid_value			VARCHAR(240);
 DECLARE ud_def_key				BIGINT;
 DECLARE ud_mode_key				BIGINT;
 DECLARE ud_order					BIGINT;
 DECLARE am_udid_value			VARCHAR(240);
 DECLARE am_udid_abbreviation	VARCHAR(240);
 DECLARE dynamic_udid_key		BIGINT;
 DECLARE user_created_key		BIGINT;
 DECLARE user_profile_key		BIGINT;
 DECLARE user_comp_profile_key BIGINT;
 DECLARE tkt_comm					DOUBLE;
 DECLARE tkt_comm_amt			DECIMAL(18,4);

 DECLARE  company_code 			VARCHAR(10);
 DECLARE  base_curr_code 		VARCHAR(10);
 DECLARE  base_curr_key 		BIGINT(10);
 DECLARE  base_decimal  		BIGINT(10);

 DECLARE  air_void				VARCHAR(10);
 DECLARE  air_rfnd				VARCHAR(10);

 DECLARE f_vat BIGINT;
 DECLARE x_vat BIGINT;
 DECLARE c_vat BIGINT;
 DECLARE d_vat BIGINT;
 DECLARE o_vat BIGINT;
 DECLARE t_vat BIGINT;

 DECLARE v_no_of_rooms BIGINT;
 DECLARE v_check_in_date DATETIME;
 DECLARE v_check_out_date DATETIME;
 DECLARE v_room_type VARCHAR(10);
 DECLARE v_rate_plan VARCHAR(10);
 DECLARE v_room_rate_curr_code VARCHAR(10);
 DECLARE v_agent_curr_code VARCHAR(10);
 DECLARE v_room_rate_per_night DECIMAL(18,4);
 DECLARE   toatal_l_rate      DECIMAL(18,4);
DECLARE rm_curr_chk VARCHAR(10);
DECLAre rm_rate_chk  varchar(10);
 
 DECLARE v_no_of_nights BIGINT;
 DECLARE v_rate_type_code VARCHAR(10);
 DECLARE v_conf_number VARCHAR(100);
 DECLARE v_guarantee_method VARCHAR(250);
 DECLARE v_hotel_name VARCHAR(250);
 DECLARE htl_pbox_num   VARCHAR(75);
 DECLARE v_hotel_city VARCHAR(250);
 DECLARE v_city_code_key BIGINT;
 DECLARE v_room_type_key BIGINT;
 DECLARE v_hotel_code_key BIGINT;
 DECLARE v_hotel_chain_key BIGINT;
 DECLARE v_conf_number_chk VARCHAR(100);
 DECLARE p_serial_key    BIGINT;
 DECLARE   total_f_rate       varchar (10);
 DECLARE excep_conf_num     VARCHAR(20);
 DECLARE   mob_number         varchar (25);
 DECLARE   art_serial         BIGINT;
 
 DECLARE excep_conf_number_cursor CURSOR FOR   
  select LTRIM(RTRIM(SUBSTR(airu_25,4))) conf_number
  from id_air_u where airu_key=p_key and ltrim(rtrim(substr(airu_1,4,3))) in ('HHL','HTL')
  order by airu_serial;


 DECLARE hotel_car_header CURSOR FOR   
  select 'LODGING' v_service,ltrim(rtrim(substr(airu_1,4,3))) hc_typ,LTRIM(RTRIM(SUBSTR(airu_25,4))) conf_number,
  LTRIM(RTRIM(replace(SUBSTR(airu_1,1,3),0,''))) p_serial_key,

LTRIM(RTRIM(airu_serial)) art
  from id_air_u where airu_key=p_key and ltrim(rtrim(substr(airu_1,4,3))) in ('HHL','HTL')
  order by airu_serial;

DECLARE hotel_details CURSOR FOR     
SELECT 
STR_TO_DATE(CONCAT(LTRIM(RTRIM(SUBSTR(airu_2,6,5))),(DATE_FORMAT(SYSDATE(),'%y'))),'%d%b%y' )check_in_date,
STR_TO_DATE(CONCAT(LTRIM(RTRIM(SUBSTR(airu_3,1,5))),(DATE_FORMAT(SYSDATE(),'%y'))),'%d%b%y' )check_out_date,
LTRIM(RTRIM(SUBSTR(airu_6,2,3))) room_type,
LTRIM(RTRIM(SUBSTR(airu_6,5,3))) rate_plan,
LTRIM(RTRIM(SUBSTR(airu_8,1,3))) room_rate_curr_code,


SUBSTR(SUBSTR(airu_9 ,instr(airu_9,"+")+1),7,INSTR(SUBSTR(SUBSTR(airu_9 ,instr(airu_9,"+")+1),7),"+")-1)+1 no_of_nights,                    
case when LTRIM(RTRIM(SUBSTR(airu_20,1,3))) = 'DLY' then 'Daily' else 'Total' end rate_type_code,
LTRIM(RTRIM(SUBSTR(airu_33,3))) guarantee_method,
LTRIM(RTRIM(SUBSTR(airu_42,1))) hotel_name,
LTRIM(RTRIM(SUBSTR(airu_45,1))) hotel_city,
LTRIM(RTRIM(SUBSTR(airu_1,8,2))) htl_chn,
LTRIM(RTRIM(airu_48)) country_name,
IFNULL(LTRIM(RTRIM(airu_4)),'NULL')  c_code,
LTRIM(RTRIM(airu_22)) property_code,
LTRIM(TRIM(airu_43)) adss,
LTRIM(RTRIM(airu_49)) pbox,
LTRIM(TRIM(airu_44)) adss1,
LTRIM(TRIM(airu_50)) tel,
LTRIM(TRIM(airu_51)) fax,
LTRIM(TRIM(airu_52)) email
FROM id_air_u
WHERE airu_key = p_key
and substr(airu_1,4,3) in ('HHL','HTL')
AND airu_serial = art_serial;

DECLARE Remarks_currency_cursor CURSOR FOR 
SELECT SUBSTR(airr_0,9,3) FROM id_air_r 
WHERE airr_key = p_key 
AND substr(airr_0,1,7) = 'RM*RATE' 
AND substr(airr_0,9,3)
IN (SELECT CURRENCY_CODE 
FROM T_ID_CURRENCY_MASTER);

DECLARE Remarks_rate_cursor CURSOR for
SELECT substr(airr_0,9) FROM id_air_r WHERE airr_key = p_key AND substr(airr_0,1,7) = 'RM*RATE';

DECLARE Remarks_rate_curr_cursor CURSOR for
SELECT SUBSTR(airr_0,12) FROM id_air_r WHERE airr_key = p_key AND substr(airr_0,1,7) = 'RM*RATE';

DECLARE Remarks_rate_chk_cursor CURSOR for
SELECT DISTINCT 'Y' from id_air_r WHERE airr_key = p_key AND substr(airr_0,1,7) = 'RM*RATE';

DECLARE Remarks_currency_chk_cursor CURSOR FOR 
SELECT DISTINCT 'Y' FROM id_air_r 
WHERE airr_key = p_key
AND substr(airr_0,1,7) = 'RM*RATE' 
AND substr(airr_0,9,3)
IN (SELECT CURRENCY_CODE 
FROM T_ID_CURRENCY_MASTER);

DECLARE Remarks_count_cursor CURSOR for
SELECT SUBSTR(airr_0,9) FROM id_air_r WHERE airr_key = p_key AND substr(airr_0,1,7) = 'RM*UNIT';

DECLARE u_rate_cursor CURSOR for
SELECT 
SUBSTR(airu_9 ,1,instr(airu_9,"+")-1) room_rate_per_night
FROM id_air_u
WHERE airu_key = p_key
and substr(airu_1,4,3) in ('HHL','HTL')
AND airu_serial = art_serial;

DECLARE u_curr_code_cursor CURSOR for
SELECT 
LTRIM(RTRIM(SUBSTR(airu_8,4,3))) agent_curr_code
FROM id_air_u
WHERE airu_key = p_key
and substr(airu_1,4,3) in ('HHL','HTL')
AND airu_serial = art_serial;

DECLARE u_no_of_count_cursor CURSOR for
SELECT 
LPAD(LTRIM(RTRIM(SUBSTR(airu_2,3,2))), 2, '0') no_of_rooms
FROM id_air_u
WHERE airu_key = p_key
and substr(airu_1,4,3) in ('HHL','HTL')
AND airu_serial = art_serial;

DECLARE fare_amount CURSOR FOR     
  select 
  IFNULL(ltrim(rtrim(substr(airu_76,8))),trim(substr(substr(airu_6,instr(airu_6,'RATE')+5),1,instr(substr(airu_6,instr(airu_6,'RATE')+5),''))))  , 
     ifnull(ltrim(rtrim(substr(airu_81,4))),''), ltrim(rtrim(substr(airu_89,1,15)))
  from id_air_u  where  airu_key=p_key
   and  ltrim(rtrim(substr(airu_1,4,3))) IN ('HHL','HTL')
   and airu_serial = art_serial;
   
 DECLARE Remarks_room_basis_cursor CURSOR for
SELECT SUBSTR(airr_0,15) FROM id_air_r WHERE airr_key = 46811 AND substr(airr_0,1,13) = 'RM*ROOM BASIS';

DECLARE Remarks_room_basis_key_cursor CURSOR for
SELECT detail_key
FROM t_id_reference_codes_detail_view
WHERE domain_name LIKE '%HotelRoomBasis%'
AND value = room_basis;
 
 DECLARE fare_amount1 CURSOR FOR     
  select 
  (case substr(airu_9,1,instr(airu_9,'+')-1)
  when null then 0 
  else substr(airu_9,1,instr(airu_9,'+')-1) end) ,
   (case  ltrim(rtrim(substr(airu_81,4))) when null then 0
   else ltrim(rtrim(substr(airu_81,4))) end),
         ltrim(rtrim(substr(airu_89,1,15)))
  from id_air_u  where  airu_key=p_key
   and  ltrim(rtrim(substr(airu_1,4,3))) IN ('HHL','HTL','MIS','CCR')
   and airu_serial = art_serial;     



DECLARE HOTEL_CFR_NO_CHK CURSOR FOR
SELECT hvd_confirmation_number from t_id_tvl_hotel_voucher_details where hvd_confirmation_number = v_conf_number;

DECLARE city_code_key CURSOR FOR
   SELECT ifnull(city_key,'null') FROM t_id_city_master where code = c_code; 
  

DECLARE room_type_key CURSOR FOR
  SELECT rtm_key FROM t_id_tvl_room_type_master where name like concat('%',v_room_type,'%');  

DECLARE hotel_code_key CURSOR FOR
  SELECT htl_key FROM t_id_hotel_master where name like concat('%',v_hotel_name,'%'); 
  
  DECLARE hotel_chain_key CURSOR FOR
  SELECT htl_chain FROM t_id_hotel_master where name like concat('%',v_hotel_name,'%');

 DECLARE air_void_cursor CURSOR FOR 
  SELECT SUBSTR(air_2,1,4) FROM  id_air_amadeus WHERE air_key = p_key;

 DECLARE refund_exist_cursor CURSOR FOR 
  SELECT aira_1 FROM id_air_a WHERE aira_key= p_key and aira_1 is not null;

 DECLARE ama_d_date_cursor CURSOR FOR
  SELECT STR_TO_DATE(LTRIM(RTRIM(aird_2)), '%y%m%d' ) sale_date
  FROM id_air_d
  WHERE aird_key = p_key;

 DECLARE find_iata_cursor CURSOR FOR
  SELECT CASE WHEN LTRIM(RTRIM(airm_9)) = '' THEN LTRIM(RTRIM(airm_7)) ELSE LTRIM(RTRIM(airm_9)) END IATA_CODE,
  SUBSTR(airm_0,(INSTR(airm_0, ' ')+1), 6) pnr,
  IFNULL(LTRIM(RTRIM(SUBSTR(AIRM_2,1,10))),'X') booking_pcc,
  IFNULL(LTRIM(RTRIM(SUBSTR(AIRM_8,1,10))),'X') issue_pcc
    FROM id_air_m
   WHERE airm_key = p_key
     AND SUBSTR(airm_0,1,5) = 'MUC1A';
	
	DECLARE SRV_FEE_CHECK_CURSOR CURSOR FOR
SELECT 'Y' FROM id_air_r WHERE substr(airr_0,1,11)='RM*TXN FEE*'

AND airr_key = p_key;

DECLARE air_h_tvl_date_cursor CURSOR FOR
  SELECT STR_TO_DATE(CONCAT(LTRIM(RTRIM(SUBSTR(airh_5,16,5))),(DATE_FORMAT(SYSDATE(),'%y'))),'%d%b%y' ) tvl_date,
  LTRIM(RTRIM(SUBSTR(airh_5,12,2))) booking_class
  FROM id_air_h
  WHERE airh_key = p_key AND airh_5 NOT IN ('VOID')
    AND airh_serial = 1;
	
	DECLARE air_r_ticket_clerk_cursor CURSOR FOR
     SELECT (RTRIM(SUBSTR(airr_0,7,6))) ticket_clerk
  FROM id_air_r
  WHERE airr_key = p_key  AND (RTRIM(SUBSTR(airr_0,1,5)))= 'RM*TA';  

	DECLARE air_r_book_clerk_cursor CURSOR FOR
     SELECT (RTRIM(SUBSTR(airr_0,7,6))) book_clerk
  FROM id_air_r
  WHERE airr_key = p_key  AND (RTRIM(SUBSTR(airr_0,1,5)))= 'RM*BA';  


 DECLARE ama_c_clerk_cursor CURSOR FOR
     SELECT LTRIM(RTRIM(SUBSTR(airc_0, 13,2))) book_clerk,LTRIM(RTRIM(SUBSTR(airc_0, 22,2))) ticket_clerk
  FROM id_air_c
  WHERE airc_key = p_key  AND (  LTRIM(RTRIM(SUBSTR(airc_0, 22,2))) !='')
  UNION ALL
     SELECT LTRIM(RTRIM(SUBSTR(airc_0, 9,2))) book_clerk,LTRIM(RTRIM(SUBSTR(airc_0, 14,2))) ticket_clerk
  FROM id_air_c
  WHERE airc_key = p_key  AND (  LTRIM(RTRIM(SUBSTR(airc_0, 22,2))) ='');  

 DECLARE pcc_clerk_key_cursor CURSOR FOR
  SELECT B.exec_user_key,B.exec_allocated_branch FROM t_id_reference_codes_detail_view A,v_id_executive_master B  WHERE A.domain_name='PCC_USER_CODE' AND LTRIM(RTRIM(A.CODE)) = pcc_loc
  AND LTRIM(RTRIM(A.VALUE)) = LTRIM(RTRIM(B.exec_user_code)) ;

 DECLARE book_clerk_key_cursor CURSOR FOR
  SELECT exec_user_key FROM t_id_executive_master WHERE exec_remarks = LTRIM(RTRIM(book_clerk));

 DECLARE ticket_clerk_key_cursor CURSOR FOR 
  SELECT exec_user_key,exec_allocated_branch FROM t_id_executive_master WHERE exec_remarks = LTRIM(RTRIM(ticket_clerk));

DECLARE  class_cursor CURSOR FOR
 SELECT clsm_key
 FROM   t_id_tvl_class_master
 WHERE  LTRIM(RTRIM(CODE)) = LTRIM(RTRIM(tkt_class));

DECLARE ticket_status_details CURSOR FOR  
  SELECT hvd_voucher_status FROM t_id_tvl_hotel_voucher_details 
   WHERE hvd_confirmation_number = v_conf_number AND hvd_voucher_status = 'V';

DECLARE  exch_doc_cursor CURSOR FOR
 SELECT LTRIM(RTRIM(SUBSTR(airf_0, 7,10))) exch_doc_number
    FROM id_air_f
   WHERE airf_key = p_key
     AND SUBSTR(airf_0,1,2) = 'FO'
     AND LENGTH(LTRIM(RTRIM(SUBSTR(airf_0, 7,10)))) = 10;

DECLARE ama_k_fare_cursor CURSOR FOR   
   SELECT DISTINCT 
  CASE LTRIM(RTRIM(airk_1))
   WHEN  NULL THEN CAST(LTRIM(RTRIM(SUBSTR(airk_0, 7) )) AS DECIMAL(20,4))
   WHEN  '' THEN CAST(LTRIM(RTRIM(SUBSTR(airk_0, 7) )) AS DECIMAL(20,4))
   ELSE CAST(LTRIM(RTRIM(SUBSTR(airk_1,4) )) AS DECIMAL(20,4)) END AS pub_fare,
  CAST(IFNULL(ROUND(LTRIM(RTRIM(airk_13)),4),1) AS DECIMAL(20,4)) ex_rate,
  CASE LTRIM(RTRIM(airk_1))
   WHEN NULL THEN LTRIM(RTRIM(SUBSTR(airk_0,4,3)))
   WHEN '' THEN LTRIM(RTRIM(SUBSTR(airk_0,4,3)))
   ELSE LTRIM(RTRIM(SUBSTR(airk_1,1,3))) END AS currency,'K-F'
 FROM id_air_k
  WHERE airk_key = p_key
  AND (SUBSTR(airk_0,1,3) = 'K-F')
  UNION ALL
  SELECT DISTINCT 
   CASE LTRIM(RTRIM(airk_1))
    WHEN NULL THEN CAST(LTRIM(RTRIM(SUBSTR(airk_0, 8) )) AS DECIMAL(20,4))
    WHEN '' THEN CAST(LTRIM(RTRIM(SUBSTR(airk_0, 8) )) AS DECIMAL(20,4))
    ELSE CAST(LTRIM(RTRIM(SUBSTR(airk_1,4) )) AS DECIMAL(20,4)) END AS pub_fare,
   CAST(IFNULL(ROUND(LTRIM(RTRIM(airk_13)),4),1)AS DECIMAL(20,4)) ex_rate,
   CASE LTRIM(RTRIM(airk_1))
    WHEN NULL THEN LTRIM(RTRIM(SUBSTR(airk_0,5,3)))
    WHEN '' THEN LTRIM(RTRIM(SUBSTR(airk_0,5,3)))
    ELSE LTRIM(RTRIM(SUBSTR(airk_1,1,3))) END AS currency,'KS-'
     FROM id_air_k
  WHERE airk_key = p_key
  AND (SUBSTR(airk_0,1,3) = 'KS-')
  UNION ALL
  SELECT DISTINCT 
   CASE LTRIM(RTRIM(airk_1))
    WHEN NULL THEN CAST(LTRIM(RTRIM(SUBSTR(airk_0, 7) )) AS DECIMAL(20,4))
    WHEN '' THEN CAST(LTRIM(RTRIM(SUBSTR(airk_0, 7) )) AS DECIMAL(20,4))
     ELSE CAST(LTRIM(RTRIM(SUBSTR(airk_1,4) )) AS DECIMAL(20,4)) END AS pub_fare,
   CAST(IFNULL(ROUND(LTRIM(RTRIM(airk_13)),4),1)AS DECIMAL(20,4)) ex_rate,
   CASE LTRIM(RTRIM(airk_1)) 
    WHEN NULL THEN LTRIM(RTRIM(SUBSTR(airk_0,4,3)))
    WHEN '' THEN LTRIM(RTRIM(SUBSTR(airk_0,4,3)))
    ELSE LTRIM(RTRIM(SUBSTR(airk_1,1,3))) END AS currency,'K-I'
   FROM id_air_k
   WHERE airk_key = p_key
   AND (SUBSTR(airk_0,1,3) = 'K-I')
   UNION ALL
   SELECT DISTINCT CAST(IFNULL(LTRIM(RTRIM(SUBSTR(airk_12,4))),0)AS DECIMAL(20,4)) pub_fare,
     CAST(IFNULL(ROUND(LTRIM(RTRIM(airk_13)),4),1)AS DECIMAL(20,4)) ex_rate,
     LTRIM(RTRIM(SUBSTR(airk_12,1,3))) currency,'K-R'
     FROM id_air_k
   WHERE airk_key = p_key
   AND (SUBSTR(airk_0,1,3) = 'K-Y')
   UNION ALL
   SELECT DISTINCT CAST(IFNULL(LTRIM(RTRIM(SUBSTR(airk_12,4))),0)AS DECIMAL(20,4)) pub_fare,
     CAST(IFNULL(ROUND(LTRIM(RTRIM(airk_13)),4),1)AS DECIMAL(20,4)) ex_rate,
     LTRIM(RTRIM(SUBSTR(airk_12,1,3))) currency,'K-R'
     FROM id_air_k
   WHERE airk_key = p_key
   AND (SUBSTR(airk_0,1,3) = 'K-R')
   ORDER BY pub_fare ASC;

  DECLARE reissue_fare_cursor CURSOR FOR  
  SELECT DISTINCT CAST(IFNULL(LTRIM(RTRIM(SUBSTR(airk_12,4))),0)AS DECIMAL(20,4)) pub_fare,
    CAST(IFNULL(ROUND(LTRIM(RTRIM(airk_13)),4),1)AS DECIMAL(20,4)) ex_rate,
   LTRIM(RTRIM(SUBSTR(airk_12,1,3))) currency,'K-R'
  FROM id_air_k
  WHERE airk_key = p_key
  AND ((SUBSTR(airk_0,1,4) = 'KS-R') OR (SUBSTR(airk_0,1,3) = 'K-R') OR (SUBSTR(airk_0,1,4) = 'KS-Y') OR (SUBSTR(airk_0,1,4) = 'KS-I'))
  ORDER BY pub_fare ASC;

DECLARE base_currency_cursor CURSOR FOR
   SELECT t_id_company_master.comp_code,t_id_company_master.comp_base_currency ,
 v_id_tvl_branch_master.currency_code, t_id_company_master.comp_decimal_size  
 FROM   t_id_company_master,v_id_tvl_branch_master
 WHERE v_id_tvl_branch_master.bm_key = t_location_key;

 
DECLARE V_CHAIN_KEY_CURSOR CURSOR FOR 
SELECT hcm_key FROM t_id_tvl_htl_car_chain_master WHERE hcm_chain_code = v_htl_chain AND hcm_hotel_car= 162;

DECLARE exchange_rate_cursor CURSOR FOR
     SELECT IFNULL(conversion_Rate,1)
     FROM v_id_exchange_rate_master
    WHERE to_currency_code    = tkt_currency
	AND from_currency_code = base_curr_code
     AND (tkt_date BETWEEN active_from AND active_to)
      AND active_status = 'A'
 ORDER BY exc_key DESC limit 1;



DECLARE air_udid_values CURSOR FOR
SELECT SUBSTR(airr_0, INSTR(airr_0, p_udid_code) + LENGTH(p_udid_code)+1) 
       FROM id_air_r 
        WHERE airr_key = p_key
          AND airr_0 LIKE CONCAT('%',p_udid_code,'/','%'); 

DECLARE air_udid_values_1 CURSOR FOR
SELECT SUBSTR(airr_0, INSTR(airr_0, p_udid_code) + LENGTH(p_udid_code)) 
       FROM id_air_r 
        WHERE airr_key = p_key
          AND airr_0 LIKE CONCAT('%',p_udid_code,'%');          

DECLARE tvl_udid_def_key CURSOR FOR
 SELECT pdis_key,pdis_mode_key,pdis_order
  FROM t_id_tvl_partner_info_setup 
   WHERE pdis_cms_key=cust_key AND pdis_code = p_udid_code ; 

 DECLARE tvl_udid_amadeus CURSOR FOR 
  SELECT rcd_value,rcd_abbreviation FROM t_id_reference_codes_detail,t_id_reference_codes_header 
      WHERE rcd_header_key = rch_header_key AND rch_domain_name='Amadeus_GDS';
	  
	   DECLARE ticket_clerk_key_check_cursor CURSOR FOR 
  SELECT 'Y' FROM t_id_executive_master WHERE exec_remarks = LTRIM(RTRIM(ticket_clerk));
  
  
 DECLARE book_clerk_key_check_cursor CURSOR FOR 
  SELECT 'Y' FROM t_id_executive_master WHERE exec_remarks = LTRIM(RTRIM(book_clerk));
  
  	DECLARE ama_tc_clerk_cursor CURSOR FOR 
	SELECT exec_remarks FROM t_id_executive_master WHERE exec_amadeus_sign_in_code = ticket_clerk_code;

 DECLARE ticket_user_key_cursor CURSOR FOR 
   SELECT user_key,user_default_profile_key FROM t_id_user_master WHERE user_key = 
	(SELECT exec_user_key FROM t_id_executive_master WHERE exec_remarks = LTRIM(RTRIM(ticket_clerk)));      

 DECLARE user_created_cursor CURSOR FOR
  SELECT user_key,user_default_profile_key FROM t_id_user_master WHERE LTRIM(TRIM(user_code)) IN (  
    SELECT rcd_abbreviation FROM t_id_reference_codes_detail,t_id_reference_codes_header 
      WHERE rcd_header_key = rch_header_key AND rch_domain_name='GDS_File_Load' AND rcd_value='AMADEUS');  

 DECLARE user_comp_profile_cursor  CURSOR FOR   
    SELECT user_default_profile_key FROM t_id_user_master WHERE LTRIM(TRIM(user_code)) IN (  
    SELECT rcd_abbreviation FROM t_id_reference_codes_detail,t_id_reference_codes_header 
      WHERE rcd_header_key = rch_header_key AND rch_domain_name='GDS_File_Load' AND rcd_value='AMADEUS');      

 DECLARE tvl_dynamic_def_key CURSOR FOR
  SELECT add_key FROM T_ID_DYNAMIC_DEFINITION WHERE add_code = am_udid_value;

DECLARE default_agent_key CURSOR FOR
SELECT value FROM t_id_reference_codes_detail_view WHERE domain_name = 'GDS_File_Load'
AND CODE = 'DEFAULT_SUPPLIER';

DECLARE default_country_key CURSOR FOR
SELECT value FROM t_id_reference_codes_detail_view WHERE domain_name = 'GDS_File_Load'
AND CODE = 'DEFAULT_COUNTRY';

 DECLARE tvl_ama_udid_def_key CURSOR FOR
  SELECT pdis_defintion_key,pdis_mode_key,pdis_order
   FROM t_id_tvl_partner_info_setup 
    WHERE pdis_cms_key=cust_key AND pdis_defintion_key = dynamic_udid_key;

 DECLARE K7_FILE_CURSOR CURSOR FOR  
  SELECT       
  CASE SUBSTR(airk_1,1,1) WHEN 'O' THEN NULL ELSE CASE SUBSTR(airk_1,14,2) WHEN 'K7' THEN  SUBSTR(airk_1,14,2)  ELSE NULL END END v_tax_k7_code,
  CASE SUBSTR(airk_1,1,1) WHEN 'O' THEN 0 ELSE CASE SUBSTR(airk_1,14,2) WHEN 'K7' THEN IFNULL(CAST(SUBSTR(airk_1,5, INSTR(SUBSTR(airk_1,5),' '))AS DECIMAL(16,2)), 0) ELSE 0  END END v_tax_k7_amt
FROM id_air_k
  WHERE AIRK_KEY = p_key AND SUBSTR(airk_1,14,2) = 'K7'
    AND (SUBSTR(AIRK_0,1,3) = 'KFT' OR SUBSTR(AIRK_0,1,3) = 'KNT' OR SUBSTR(AIRK_0,1,3) = 'KST')
UNION ALL
 SELECT       
  CASE SUBSTR(airk_2,1,1) WHEN 'O' THEN NULL ELSE CASE SUBSTR(airk_2,14,2) WHEN 'K7' THEN  SUBSTR(airk_2,14,2)  ELSE NULL END END v_tax_k7_code,
  CASE SUBSTR(airk_2,1,1) WHEN 'O' THEN 0 ELSE CASE SUBSTR(airk_2,14,2) WHEN 'K7' THEN IFNULL(CAST(SUBSTR(airk_2,5, INSTR(SUBSTR(airk_2,5),' '))AS DECIMAL(16,2)), 0) ELSE 0  END END v_tax_k7_amt
FROM id_air_k
  WHERE AIRK_KEY = p_key AND SUBSTR(airk_2,14,2) = 'K7'
    AND (SUBSTR(AIRK_0,1,3) = 'KFT' OR SUBSTR(AIRK_0,1,3) = 'KNT' OR SUBSTR(AIRK_0,1,3) = 'KST')
UNION ALL
 SELECT       
  CASE SUBSTR(airk_3,1,1) WHEN 'O' THEN NULL ELSE CASE SUBSTR(airk_3,14,2) WHEN 'K7' THEN  SUBSTR(airk_3,14,2)  ELSE NULL END END v_tax_k7_code,
  CASE SUBSTR(airk_3,1,1) WHEN 'O' THEN 0 ELSE CASE SUBSTR(airk_3,14,2) WHEN 'K7' THEN IFNULL(CAST(SUBSTR(airk_3,5, INSTR(SUBSTR(airk_3,5),' '))AS DECIMAL(16,2)), 0) ELSE 0  END END v_tax_k7_amt
FROM id_air_k
  WHERE AIRK_KEY = p_key AND SUBSTR(airk_3,14,2) = 'K7'
    AND (SUBSTR(AIRK_0,1,3) = 'KFT' OR SUBSTR(AIRK_0,1,3) = 'KNT' OR SUBSTR(AIRK_0,1,3) = 'KST')
UNION ALL
 SELECT       
  CASE SUBSTR(airk_4,1,1) WHEN 'O' THEN NULL ELSE CASE SUBSTR(airk_4,14,2) WHEN 'K7' THEN  SUBSTR(airk_4,14,2)  ELSE NULL END END v_tax_k7_code,
  CASE SUBSTR(airk_4,1,1) WHEN 'O' THEN 0 ELSE CASE SUBSTR(airk_4,14,2) WHEN 'K7' THEN IFNULL(CAST(SUBSTR(airk_4,5, INSTR(SUBSTR(airk_4,5),' '))AS DECIMAL(16,2)), 0) ELSE 0  END END v_tax_k7_amt
FROM id_air_k
  WHERE AIRK_KEY = p_key AND SUBSTR(airk_4,14,2) = 'K7'
    AND (SUBSTR(AIRK_0,1,3) = 'KFT' OR SUBSTR(AIRK_0,1,3) = 'KNT' OR SUBSTR(AIRK_0,1,3) = 'KST')    
UNION ALL
SELECT  DISTINCT     
  CASE SUBSTR(airk_5,1,1) WHEN 'O' THEN NULL ELSE CASE SUBSTR(airk_5,14,2) WHEN 'K7' THEN  SUBSTR(airk_5,14,2)  ELSE NULL END END v_tax_k7_code,
  CASE SUBSTR(airk_5,1,1) WHEN 'O' THEN 0 ELSE CASE SUBSTR(airk_5,14,2) WHEN 'K7' THEN IFNULL(CAST(SUBSTR(airk_5,5, INSTR(SUBSTR(airk_5,5),' '))AS DECIMAL(16,2)), 0) ELSE 0  END END v_tax_k7_amt
FROM id_air_k
  WHERE AIRK_KEY = p_key AND SUBSTR(airk_5,14,2) = 'K7'
    AND (SUBSTR(AIRK_0,1,3) = 'KFT' OR SUBSTR(AIRK_0,1,3) = 'KNT' OR SUBSTR(AIRK_0,1,3) = 'KST')
UNION ALL
 SELECT       
  CASE SUBSTR(airk_6,1,1) WHEN 'O' THEN NULL ELSE CASE SUBSTR(airk_6,14,2) WHEN 'K7' THEN  SUBSTR(airk_6,14,2)  ELSE NULL END END v_tax_k7_code,
  CASE SUBSTR(airk_6,1,1) WHEN 'O' THEN 0 ELSE CASE SUBSTR(airk_6,14,2) WHEN 'K7' THEN IFNULL(CAST(SUBSTR(airk_6,5, INSTR(SUBSTR(airk_6,5),' '))AS DECIMAL(16,2)), 0) ELSE 0  END END v_tax_k7_amt
FROM id_air_k
  WHERE AIRK_KEY = p_key AND SUBSTR(airk_6,14,2) = 'K7'
    AND (SUBSTR(AIRK_0,1,3) = 'KFT' OR SUBSTR(AIRK_0,1,3) = 'KNT' OR SUBSTR(AIRK_0,1,3) = 'KST')
UNION ALL
 SELECT       
  CASE SUBSTR(airk_7,1,1) WHEN 'O' THEN NULL ELSE CASE SUBSTR(airk_7,14,2) WHEN 'K7' THEN  SUBSTR(airk_7,14,2)  ELSE NULL END END v_tax_k7_code,
  CASE SUBSTR(airk_7,1,1) WHEN 'O' THEN 0 ELSE CASE SUBSTR(airk_7,14,2) WHEN 'K7' THEN IFNULL(CAST(SUBSTR(airk_7,5, INSTR(SUBSTR(airk_7,5),' '))AS DECIMAL(16,2)), 0) ELSE 0  END END v_tax_k7_amt
FROM id_air_k
  WHERE AIRK_KEY = p_key AND SUBSTR(airk_7,14,2) = 'K7'
    AND (SUBSTR(AIRK_0,1,3) = 'KFT' OR SUBSTR(AIRK_0,1,3) = 'KNT' OR SUBSTR(AIRK_0,1,3) = 'KST')
UNION ALL
SELECT       
  CASE SUBSTR(airk_8,1,1) WHEN 'O' THEN NULL ELSE CASE SUBSTR(airk_8,14,2) WHEN 'K7' THEN  SUBSTR(airk_8,14,2)  ELSE NULL END END v_tax_k7_code,
  CASE SUBSTR(airk_8,1,1) WHEN 'O' THEN 0 ELSE CASE SUBSTR(airk_8,14,2) WHEN 'K7' THEN IFNULL(CAST(SUBSTR(airk_8,5, INSTR(SUBSTR(airk_8,5),' '))AS DECIMAL(16,2)), 0) ELSE 0  END END v_tax_k7_amt
FROM id_air_k
  WHERE AIRK_KEY = p_key AND SUBSTR(airk_8,14,2) = 'K7'
    AND (SUBSTR(AIRK_0,1,3) = 'KFT' OR SUBSTR(AIRK_0,1,3) = 'KNT' OR SUBSTR(AIRK_0,1,3) = 'KST')
UNION ALL
SELECT       
  CASE SUBSTR(airk_9,1,1) WHEN 'O' THEN NULL ELSE CASE SUBSTR(airk_9,14,2) WHEN 'K7' THEN  SUBSTR(airk_9,14,2)  ELSE NULL END END v_tax_k7_code,
  CASE SUBSTR(airk_9,1,1) WHEN 'O' THEN 0 ELSE CASE SUBSTR(airk_9,14,2) WHEN 'K7' THEN IFNULL(CAST(SUBSTR(airk_9,5, INSTR(SUBSTR(airk_9,5),' '))AS DECIMAL(16,2)), 0) ELSE 0  END END v_tax_k7_amt
FROM id_air_k
  WHERE AIRK_KEY = p_key AND SUBSTR(airk_9,14,2) = 'K7'
    AND (SUBSTR(AIRK_0,1,3) = 'KFT' OR SUBSTR(AIRK_0,1,3) = 'KNT' OR SUBSTR(AIRK_0,1,3) = 'KST')
UNION ALL
SELECT       
  CASE SUBSTR(airk_10,1,1) WHEN 'O' THEN NULL ELSE CASE SUBSTR(airk_10,14,2) WHEN 'K7' THEN  SUBSTR(airk_10,14,2)  ELSE NULL END END v_tax_k7_code,
  CASE SUBSTR(airk_10,1,1) WHEN 'O' THEN 0 ELSE CASE SUBSTR(airk_10,14,2) WHEN 'K7' THEN IFNULL(CAST(SUBSTR(airk_10,5, INSTR(SUBSTR(airk_10,5),' '))AS DECIMAL(16,2)), 0) ELSE 0  END END v_tax_k7_amt
FROM id_air_k
  WHERE AIRK_KEY = p_key AND SUBSTR(airk_10,14,2) = 'K7'
    AND (SUBSTR(AIRK_0,1,3) = 'KFT' OR SUBSTR(AIRK_0,1,3) = 'KNT' OR SUBSTR(AIRK_0,1,3) = 'KST')
UNION ALL
SELECT       
  CASE SUBSTR(airk_11,1,1) WHEN 'O' THEN NULL ELSE CASE SUBSTR(airk_11,14,2) WHEN 'K7' THEN  SUBSTR(airk_11,14,2)  ELSE NULL END END v_tax_k7_code,
  CASE SUBSTR(airk_11,1,1) WHEN 'O' THEN 0 ELSE CASE SUBSTR(airk_11,14,2) WHEN 'K7' THEN IFNULL(CAST(SUBSTR(airk_11,5, INSTR(SUBSTR(airk_11,5),' '))AS DECIMAL(16,2)), 0) ELSE 0  END END v_tax_k7_amt
FROM id_air_k
  WHERE AIRK_KEY = p_key AND SUBSTR(airk_11,14,2) = 'K7'
    AND (SUBSTR(AIRK_0,1,3) = 'KFT' OR SUBSTR(AIRK_0,1,3) = 'KNT' OR SUBSTR(AIRK_0,1,3) = 'KST')
UNION ALL
 SELECT       
  CASE SUBSTR(airk_12,1,1) WHEN 'O' THEN NULL ELSE CASE SUBSTR(airk_12,14,2) WHEN 'K7' THEN  SUBSTR(airk_12,14,2)  ELSE NULL END END v_tax_k7_code,
  CASE SUBSTR(airk_12,1,1) WHEN 'O' THEN 0 ELSE CASE SUBSTR(airk_12,14,2) WHEN 'K7' THEN IFNULL(CAST(SUBSTR(airk_12,5, INSTR(SUBSTR(airk_12,5),' '))AS DECIMAL(16,2)), 0) ELSE 0  END END v_tax_k7_amt
FROM id_air_k
  WHERE AIRK_KEY = p_key AND SUBSTR(airk_12,14,2) = 'K7'
    AND (SUBSTR(AIRK_0,1,3) = 'KFT' OR SUBSTR(AIRK_0,1,3) = 'KNT' OR SUBSTR(AIRK_0,1,3) = 'KST')
UNION ALL
 SELECT       
  CASE SUBSTR(airk_13,1,1) WHEN 'O' THEN NULL ELSE CASE SUBSTR(airk_13,14,2) WHEN 'K7' THEN  SUBSTR(airk_13,14,2)  ELSE NULL END END v_tax_k7_code,
  CASE SUBSTR(airk_13,1,1) WHEN 'O' THEN 0 ELSE CASE SUBSTR(airk_13,14,2) WHEN 'K7' THEN IFNULL(CAST(SUBSTR(airk_13,5, INSTR(SUBSTR(airk_13,5),' '))AS DECIMAL(16,2)), 0) ELSE 0  END END v_tax_k7_amt
FROM id_air_k
  WHERE AIRK_KEY = p_key AND SUBSTR(airk_13,14,2) = 'K7'
    AND (SUBSTR(AIRK_0,1,3) = 'KFT' OR SUBSTR(AIRK_0,1,3) = 'KNT' OR SUBSTR(AIRK_0,1,3) = 'KST')
UNION ALL
 SELECT       
  CASE SUBSTR(airk_14,1,1) WHEN 'O' THEN NULL ELSE CASE SUBSTR(airk_14,14,2) WHEN 'K7' THEN  SUBSTR(airk_14,14,2)  ELSE NULL END END v_tax_k7_code,
  CASE SUBSTR(airk_14,1,1) WHEN 'O' THEN 0 ELSE CASE SUBSTR(airk_14,14,2) WHEN 'K7' THEN IFNULL(CAST(SUBSTR(airk_14,5, INSTR(SUBSTR(airk_14,5),' '))AS DECIMAL(16,2)), 0) ELSE 0  END END v_tax_k7_amt
FROM id_air_k
  WHERE AIRK_KEY = p_key AND SUBSTR(airk_14,14,2) = 'K7'
    AND (SUBSTR(AIRK_0,1,3) = 'KFT' OR SUBSTR(AIRK_0,1,3) = 'KNT' OR SUBSTR(AIRK_0,1,3) = 'KST')
UNION ALL
 SELECT       
  CASE SUBSTR(airk_15,1,1) WHEN 'O' THEN NULL ELSE CASE SUBSTR(airk_15,14,2) WHEN 'K7' THEN  SUBSTR(airk_15,14,2)  ELSE NULL END END v_tax_k7_code,
  CASE SUBSTR(airk_15,1,1) WHEN 'O' THEN 0 ELSE CASE SUBSTR(airk_15,14,2) WHEN 'K7' THEN IFNULL(CAST(SUBSTR(airk_15,5, INSTR(SUBSTR(airk_15,5),' '))AS DECIMAL(16,2)), 0) ELSE 0  END END v_tax_k7_amt
FROM id_air_k
  WHERE AIRK_KEY = p_key AND SUBSTR(airk_15,14,2) = 'K7'
    AND (SUBSTR(AIRK_0,1,3) = 'KFT' OR SUBSTR(AIRK_0,1,3) = 'KNT' OR SUBSTR(AIRK_0,1,3) = 'KST');   

DECLARE K7_FILE_EMD_CURSOR CURSOR FOR
 SELECT  DISTINCT     
  CASE SUBSTR(airk_33,3,1) WHEN 'O' THEN NULL ELSE CASE SUBSTR(airk_33,16,2) WHEN 'K7' THEN  SUBSTR(airk_33,16,2)  ELSE NULL END END v_tax_k7_code,
  CASE SUBSTR(airk_33,3,1) WHEN 'O' THEN 0 ELSE CASE SUBSTR(airk_33,16,2) WHEN 'K7' THEN IFNULL(CAST(SUBSTR(airk_33,5, INSTR(SUBSTR(airk_33,7, 9),' '))AS DECIMAL(16,2)), 0) ELSE 0  END END v_tax_k7_amt
FROM id_air_k
  WHERE AIRK_KEY = p_key AND SUBSTR(airk_33,16,2) = 'K7'  AND (SUBSTR(airk_0,1,3) = 'EMD');   

DECLARE ama_k_tax_cursor CURSOR FOR
 SELECT DISTINCT
     CASE SUBSTR(airk_1,1,1) WHEN 'O' THEN NULL ELSE CASE SUBSTR(airk_1,14,2) WHEN 'K7' THEN NULL ELSE SUBSTR(airk_1,14,2) END END tax1,CASE SUBSTR(airk_1,1,1) WHEN 'O' THEN 0 ELSE CASE SUBSTR(airk_1,14,2) WHEN 'K7' THEN 0 ELSE IFNULL(CAST(SUBSTR(airk_1,5, INSTR(SUBSTR(airk_1,5),' '))AS DECIMAL(16,2)), 0) END END taxa_1,
     CASE SUBSTR(airk_2,1,1) WHEN 'O' THEN NULL ELSE CASE SUBSTR(airk_2,14,2) WHEN 'K7' THEN NULL ELSE SUBSTR(airk_2,14,2) END END tax2,CASE SUBSTR(airk_2,1,1) WHEN 'O' THEN 0 ELSE CASE SUBSTR(airk_2,14,2) WHEN 'K7' THEN 0 ELSE IFNULL(CAST(SUBSTR(airk_2,5, INSTR(SUBSTR(airk_2,5),' '))AS DECIMAL(16,2)), 0) END END taxa_2,
     CASE SUBSTR(airk_3,1,1) WHEN 'O' THEN NULL ELSE CASE SUBSTR(airk_3,14,2) WHEN 'K7' THEN NULL ELSE SUBSTR(airk_3,14,2) END END tax3,CASE SUBSTR(airk_3,1,1) WHEN 'O' THEN 0 ELSE CASE SUBSTR(airk_3,14,2) WHEN 'K7' THEN 0 ELSE IFNULL(CAST(SUBSTR(airk_3,5, INSTR(SUBSTR(airk_3,5),' '))AS DECIMAL(16,2)), 0) END END taxa_3,
     CASE SUBSTR(airk_4,1,1) WHEN 'O' THEN NULL ELSE CASE SUBSTR(airk_4,14,2) WHEN 'K7' THEN NULL ELSE SUBSTR(airk_4,14,2) END END tax4,CASE SUBSTR(airk_4,1,1) WHEN 'O' THEN 0 ELSE CASE SUBSTR(airk_4,14,2) WHEN 'K7' THEN 0 ELSE IFNULL(CAST(SUBSTR(airk_4,5, INSTR(SUBSTR(airk_4,5),' '))AS DECIMAL(16,2)), 0) END END taxa_4,
     CASE SUBSTR(airk_5,1,1) WHEN 'O' THEN NULL ELSE CASE SUBSTR(airk_5,14,2) WHEN 'K7' THEN NULL ELSE SUBSTR(airk_5,14,2) END END tax5,CASE SUBSTR(airk_5,1,1) WHEN 'O' THEN 0 ELSE CASE SUBSTR(airk_5,14,2) WHEN 'K7' THEN 0 ELSE IFNULL(CAST(SUBSTR(airk_5,5, INSTR(SUBSTR(airk_5,5),' '))AS DECIMAL(16,2)), 0) END END taxa_5,
     CASE SUBSTR(airk_6,1,1) WHEN 'O' THEN NULL ELSE CASE SUBSTR(airk_6,14,2) WHEN 'K7' THEN NULL ELSE SUBSTR(airk_6,14,2) END END tax6,CASE SUBSTR(airk_6,1,1) WHEN 'O' THEN 0 ELSE CASE SUBSTR(airk_6,14,2) WHEN 'K7' THEN 0 ELSE IFNULL(CAST(SUBSTR(airk_6,5, INSTR(SUBSTR(airk_6,5),' '))AS DECIMAL(16,2)), 0) END END taxa_6,
     CASE SUBSTR(airk_7,1,1) WHEN 'O' THEN NULL ELSE CASE SUBSTR(airk_7,14,2) WHEN 'K7' THEN NULL ELSE SUBSTR(airk_7,14,2) END END tax7,CASE SUBSTR(airk_7,1,1) WHEN 'O' THEN 0 ELSE CASE SUBSTR(airk_7,14,2) WHEN 'K7' THEN 0 ELSE IFNULL(CAST(SUBSTR(airk_7,5, INSTR(SUBSTR(airk_7,5),' '))AS DECIMAL(16,2)), 0) END END taxa_7,
     CASE SUBSTR(airk_8,1,1) WHEN 'O' THEN NULL ELSE CASE SUBSTR(airk_8,14,2) WHEN 'K7' THEN NULL ELSE SUBSTR(airk_8,14,2) END END tax8,CASE SUBSTR(airk_8,1,1) WHEN 'O' THEN 0 ELSE CASE SUBSTR(airk_8,14,2) WHEN 'K7' THEN 0 ELSE IFNULL(CAST(SUBSTR(airk_8,5, INSTR(SUBSTR(airk_8,5),' '))AS DECIMAL(16,2)), 0) END END taxa_8,
     CASE SUBSTR(airk_9,1,1) WHEN 'O' THEN NULL ELSE CASE SUBSTR(airk_9,14,2) WHEN 'K7' THEN NULL ELSE SUBSTR(airk_9,14,2) END END tax9,CASE SUBSTR(airk_9,1,1) WHEN 'O' THEN 0 ELSE CASE SUBSTR(airk_9,14,2) WHEN 'K7' THEN 0 ELSE IFNULL(CAST(SUBSTR(airk_9,5, INSTR(SUBSTR(airk_9,5),' '))AS DECIMAL(16,2)), 0) END END taxa_9,
     CASE SUBSTR(airk_10,1,1) WHEN 'O' THEN NULL ELSE CASE SUBSTR(airk_10,14,2) WHEN 'K7' THEN NULL ELSE SUBSTR(airk_10,14,2) END END tax10,CASE SUBSTR(airk_10,1,1) WHEN 'O' THEN 0 ELSE CASE SUBSTR(airk_10,14,2) WHEN 'K7' THEN 0 ELSE IFNULL(CAST(SUBSTR(airk_10,5, INSTR(SUBSTR(airk_10,5),' '))AS DECIMAL(16,2)), 0) END END taxa_10,
     CASE SUBSTR(airk_11,1,1) WHEN 'O' THEN NULL ELSE CASE SUBSTR(airk_11,14,2) WHEN 'K7' THEN NULL ELSE SUBSTR(airk_11,14,2) END END tax11,CASE SUBSTR(airk_11,1,1) WHEN 'O' THEN 0 ELSE CASE SUBSTR(airk_11,14,2) WHEN 'K7' THEN 0 ELSE IFNULL(CAST(SUBSTR(airk_11,5, INSTR(SUBSTR(airk_11,5),' '))AS DECIMAL(16,2)), 0) END END taxa_11,
     CASE SUBSTR(airk_12,1,1) WHEN 'O' THEN NULL ELSE CASE SUBSTR(airk_12,14,2) WHEN 'K7' THEN NULL ELSE SUBSTR(airk_12,14,2) END END tax12,CASE SUBSTR(airk_12,1,1) WHEN 'O' THEN 0 ELSE CASE SUBSTR(airk_12,14,2) WHEN 'K7' THEN 0 ELSE IFNULL(CAST(SUBSTR(airk_12,5, INSTR(SUBSTR(airk_12,5),' '))AS DECIMAL(16,2)), 0) END END taxa_12,
     CASE SUBSTR(airk_13,1,1) WHEN 'O' THEN NULL ELSE CASE SUBSTR(airk_13,14,2) WHEN 'K7' THEN NULL ELSE SUBSTR(airk_13,14,2) END END tax13,CASE SUBSTR(airk_13,1,1) WHEN 'O' THEN 0 ELSE CASE SUBSTR(airk_13,14,2) WHEN 'K7' THEN 0 ELSE IFNULL(CAST(SUBSTR(airk_13,5, INSTR(SUBSTR(airk_13,5),' '))AS DECIMAL(16,2)), 0) END END taxa_13,
     CASE SUBSTR(airk_14,1,1) WHEN 'O' THEN NULL ELSE CASE SUBSTR(airk_14,14,2) WHEN 'K7' THEN NULL ELSE SUBSTR(airk_14,14,2) END END tax14,CASE SUBSTR(airk_14,1,1) WHEN 'O' THEN 0 ELSE CASE SUBSTR(airk_14,14,2) WHEN 'K7' THEN 0 ELSE IFNULL(CAST(SUBSTR(airk_14,5, INSTR(SUBSTR(airk_14,5),' '))AS DECIMAL(16,2)), 0) END END taxa_14,
     CASE SUBSTR(airk_15,1,1) WHEN 'O' THEN NULL ELSE CASE SUBSTR(airk_15,14,2) WHEN 'K7' THEN NULL ELSE SUBSTR(airk_15,14,2) END END tax15,CASE SUBSTR(airk_15,1,1) WHEN 'O' THEN 0 ELSE CASE SUBSTR(airk_15,14,2) WHEN 'K7' THEN 0 ELSE IFNULL(CAST(SUBSTR(airk_15,5, INSTR(SUBSTR(airk_15,5),' '))AS DECIMAL(16,2)), 0) END END taxa_15,
     CASE SUBSTR(airk_16,1,1) WHEN 'O' THEN NULL ELSE CASE SUBSTR(airk_16,14,2) WHEN 'K7' THEN NULL ELSE SUBSTR(airk_16,14,2) END END tax16,CASE SUBSTR(airk_16,1,1) WHEN 'O' THEN 0 ELSE CASE SUBSTR(airk_16,14,2) WHEN 'K7' THEN 0 ELSE IFNULL(CAST(SUBSTR(airk_16,5, INSTR(SUBSTR(airk_16,5),' '))AS DECIMAL(16,2)), 0) END END taxa_16,
     CASE SUBSTR(airk_17,1,1) WHEN 'O' THEN NULL ELSE CASE SUBSTR(airk_17,14,2) WHEN 'K7' THEN NULL ELSE SUBSTR(airk_17,14,2) END END tax17,CASE SUBSTR(airk_17,1,1) WHEN 'O' THEN 0 ELSE CASE SUBSTR(airk_17,14,2) WHEN 'K7' THEN 0 ELSE IFNULL(CAST(SUBSTR(airk_17,5, INSTR(SUBSTR(airk_17,5),' '))AS DECIMAL(16,2)), 0) END END taxa_17,
     CASE SUBSTR(airk_18,1,1) WHEN 'O' THEN NULL ELSE CASE SUBSTR(airk_18,14,2) WHEN 'K7' THEN NULL ELSE SUBSTR(airk_18,14,2) END END tax18,CASE SUBSTR(airk_18,1,1) WHEN 'O' THEN 0 ELSE CASE SUBSTR(airk_18,14,2) WHEN 'K7' THEN 0 ELSE IFNULL(CAST(SUBSTR(airk_18,5, INSTR(SUBSTR(airk_18,5),' '))AS DECIMAL(16,2)), 0) END END taxa_18,
     CASE SUBSTR(airk_19,1,1) WHEN 'O' THEN NULL ELSE CASE SUBSTR(airk_19,14,2) WHEN 'K7' THEN NULL ELSE SUBSTR(airk_19,14,2) END END tax19,CASE SUBSTR(airk_19,1,1) WHEN 'O' THEN 0 ELSE CASE SUBSTR(airk_19,14,2) WHEN 'K7' THEN 0 ELSE IFNULL(CAST(SUBSTR(airk_19,5, INSTR(SUBSTR(airk_19,5),' '))AS DECIMAL(16,2)), 0) END END taxa_19,
     CASE SUBSTR(airk_20,1,1) WHEN 'O' THEN NULL ELSE CASE SUBSTR(airk_20,14,2) WHEN 'K7' THEN NULL ELSE SUBSTR(airk_20,14,2) END END tax20,CASE SUBSTR(airk_20,1,1) WHEN 'O' THEN 0 ELSE CASE SUBSTR(airk_20,14,2) WHEN 'K7' THEN 0 ELSE IFNULL(CAST(SUBSTR(airk_20,5, INSTR(SUBSTR(airk_20,5),' '))AS DECIMAL(16,2)), 0) END END taxa_20
       FROM id_air_k
  WHERE airk_key = p_key
    AND (SUBSTR(airk_0,1,3) = 'KFT' OR SUBSTR(airk_0,1,3) = 'KNT' OR SUBSTR(airk_0,1,3) = 'KST');


 DECLARE tax_code_key CURSOR FOR 
 SELECT ttax_tax_key FROM t_id_tvl_tax_master WHERE ttax_code = tax_code;   

 DECLARE air_r_customer_cursor CURSOR FOR
  SELECT LPAD(LTRIM(RTRIM(SUBSTR(airr_0,7,10))),10,0) cust_code
  FROM id_air_r
  WHERE airr_key = p_key
    AND SUBSTR(airr_0,1,5) = 'RM*CN'
	UNION ALL
  SELECT LPAD(LTRIM(RTRIM(SUBSTR(aira_0,6,10))),10,0) cust_code
  FROM id_air_a
  WHERE aira_key = p_key
    AND SUBSTR(aira_0,1,5) = 'AITAN';

DECLARE air_r_lpo_cursor CURSOR FOR
  SELECT LTRIM(RTRIM(SUBSTR(airr_0,7,15))) lpo
  FROM id_air_r
  WHERE airr_key = p_key
    AND SUBSTR(airr_0,4,3) = 'LPO';
	
DECLARE air_r_rsn_code_cursor CURSOR FOR
SELECT SUBSTR(airu_6,LENGTH(LTRIM(RTRIM(airu_6)))-2,3)
FROM id_air_u
WHERE airu_key = p_key
and substr(airu_1,4,3) in ('HHL','HTL')
AND airu_serial = art_serial;
	
 DECLARE master_rsn_key_cursor CURSOR FOR
    SELECT pfad_key FROM t_id_et_private_fare_acc_details WHERE pfad_hap_name = rsn_code;	

DECLARE air_r_sell_fare_cursor CURSOR FOR
  SELECT LTRIM(RTRIM(SUBSTR(airr_0,8))) sell_fare
  FROM id_air_r
  WHERE airr_key = p_key
    AND SUBSTR(airr_0,4,4) = 'SELL';

DECLARE air_r_coll_fare_cursor CURSOR FOR
  SELECT LTRIM(RTRIM(SUBSTR(airr_0,8))) coll_fare
  FROM id_air_r
  WHERE airr_key = p_key
    AND SUBSTR(airr_0,4,4) = 'COLL';

DECLARE air_r_sales_exec_cursor CURSOR FOR
  SELECT LTRIM(RTRIM(SUBSTR(airr_0,8,10))) sales_exec
  FROM id_air_r
  WHERE airr_key = p_key
    AND SUBSTR(airr_0,4,4) = 'EXEC';

DECLARE ama_fm_comm_cursor CURSOR FOR
  SELECT LTRIM(RTRIM(TRIM(TRAILING 'N' FROM SUBSTR(airf_0, 6)))) comm_per
  FROM id_air_f
  WHERE airf_key = p_key
    AND SUBSTR(airf_0,1,3) = 'FM*';  

DECLARE ama_fm_comm_cursor_1 CURSOR FOR
  SELECT LTRIM(RTRIM(TRIM(TRAILING 'P' FROM SUBSTR(airf_0, 3)))) comm_per
  FROM id_air_f
  WHERE airf_key = p_key
    AND SUBSTR(airf_0,1,3) != 'FM*' AND SUBSTR(airf_0,1,2) = 'FM';   

DECLARE air_udid_values_2 CURSOR FOR
SELECT SUBSTR(airr_0, INSTR(airr_0, p_udid_code) + LENGTH(p_udid_code)) 
       FROM id_air_r 
        WHERE airr_key = p_key
          AND airr_0 LIKE CONCAT('%',p_udid_code,'%')
		 AND	SUBSTR(airr_1,1,1) = 'S'
	      and SUBSTR(airr_1,2,1) = p_serial_key
           ORDER BY SUBSTR(airr_1,2,1); 

DECLARE udid_value_code_cursor CURSOR FOR
SELECT detail_key,code FROM t_id_reference_codes_detail_view
WHERE  CODE IN (
SELECT ADD_CODE FROM T_ID_DYNAMIC_DEFINITION 
WHERE ADD_LOV_SQL LIKE '%addLovSql%' AND ADD_KEY = ud_def_key);
		  
DECLARE air_udid_values_4 CURSOR FOR
SELECT SUBSTR(airr_0, INSTR(airr_0, p_udid_code) + LENGTH(p_udid_code)) 
       FROM id_air_r 
        WHERE airr_key = p_key
          AND airr_0 LIKE CONCAT('%',p_udid_code,'%');		   

DECLARE customer_check_cursor CURSOR FOR
  SELECT CUSTOMER_KEY,CODE FROM t_id_cms_master WHERE LTRIM(TRIM(CODE)) = cust_code;

 DECLARE walk_brnch_cust_cursor CURSOR FOR
  SELECT CUSTOMER_KEY,CODE FROM t_id_cms_master WHERE LTRIM(TRIM(CODE)) IN (  
    SELECT rcd_abbreviation FROM t_id_reference_codes_detail,t_id_reference_codes_header 
      WHERE rcd_header_key = rch_header_key AND rch_domain_name='Branch_Walkin_Cust' AND rcd_value = t_location_name);  

DECLARE walk_customer_cursor CURSOR FOR
  SELECT CUSTOMER_KEY,CODE FROM t_id_cms_master WHERE LTRIM(TRIM(CODE)) IN (  
    SELECT rcd_abbreviation FROM t_id_reference_codes_detail,t_id_reference_codes_header 
      WHERE rcd_header_key = rch_header_key AND rch_domain_name='GDS_File_Load' AND rcd_value='WALK_IN_CUST');    

DECLARE HOTEL_CFR_TKT_NO_CHK CURSOR FOR
SELECT DISTINCT 'Y' from t_id_tvl_hotel_voucher_details where hvd_confirmation_number = v_conf_number AND hvd_voucher_number = p_tkt_number;

DECLARE ama_fp_pay_type_cursor CURSOR FOR
select * from
(SELECT INSTR(V_REM,'CC') CNT,
   SUBSTR(V_REM, INSTR(V_REM,'CC')+2 , 2 ) CARD_TYPE,
   CASE SUBSTR(V_REM, INSTR(V_REM,'CC')+4,INSTR( SUBSTR(V_REM, INSTR(V_REM,'CC')+4),'/' ) -1 ) WHEN '+' THEN NULL ELSE SUBSTR(V_REM, INSTR(V_REM,'CC')+4,INSTR( SUBSTR(V_REM, INSTR(V_REM,'CC')+4),'/' ) -1 ) END CARD_NUMBER,
   SUBSTR(V_REM, INSTR(V_REM,'/')+1,INSTR( SUBSTR(V_REM, INSTR(V_REM,'/')+1),'/' ) -1 ) EXPIRY_DATE
   FROM 
   (SELECT CASE SIGN(LOCATE('CCC',airf_0,1)) 
   WHEN '1' THEN SUBSTR(airf_0,INSTR(airf_0,SUBSTRING_INDEX(airf_0,'CCC',-1))-3) 
   ELSE SUBSTR(airf_0,INSTR(airf_0,SUBSTRING_INDEX(airf_0,'CC',-1))-2)  END V_REM
   FROM id_air_f 
   WHERE airf_key=p_key  AND ((SUBSTR(airf_0,1,2) = 'FP' AND SUBSTR(airf_0,1,3) = 'FPO') OR (SUBSTR(airf_0,1,3) = 'MFP' AND SUBSTR(airf_0,1,4) = 'MFPO')) ) AS V_VALUE
UNION ALL
  SELECT  INSTR(airf_0,'CC') cnt, SUBSTR(airf_0, INSTR(airf_0,'CC')+2 , 2 ) card_type,
   SUBSTR(airf_0, INSTR(airf_0,'CC')+4,INSTR( SUBSTR(airf_0, INSTR(airf_0,'CC')+4),'/' ) -1 ) card_number,
   SUBSTR(airf_0, INSTR(airf_0,'/')+1,INSTR( SUBSTR(airf_0, INSTR(airf_0,'/')+1),'/' ) -1 ) expiry_date
 FROM id_air_f
  WHERE airf_key = p_key
  AND ((SUBSTR(airf_0,1,2) = 'FP' AND SUBSTR(airf_0,1,3) <> 'FPO') OR
    (SUBSTR(airf_0,1,3) = 'MFP' AND SUBSTR(airf_0,1,4) <> 'MFPO')))t
  where length(card_number) >0 and length(expiry_date) > 0
  and card_number NOT REGEXP '[:digit:]';


 DECLARE card_type_cursor CURSOR FOR   
    SELECT cc_key crd_key,CODE crd_type,NAME crd_name,cc_status crd_an_key,cc_status_code crd_an_code,cc_status_name crd_an_name,cc_service_fee_percentage crd_srv_fee,cc_own_lodge_card_status crd_lodge_status,cc_own_lodge_card_number crd_lodge_num FROM `v_id_credit_card_type_master`
  WHERE active_status='A' AND CODE = tkt_card_type;

 DECLARE fop_more_details_cursor CURSOR FOR  
  SELECT tsd_definition_key FROM `v_id_tvl_settlement_setup_dtl` WHERE tsd_setup_code = FOP_VALUE
  AND tsd_definition_code = definition_code ;  

DECLARE ama_i_pax_cursor CURSOR FOR
  SELECT LTRIM(RTRIM(REPLACE(REPLACE(REPLACE(substr(airi_1,3),'(ADT)',''),'(CHD)',''),'(INF)',''))) pax_name
  FROM id_air_i
  WHERE airi_key = p_key
  AND ( LTRIM(RTRIM(SUBSTR(airi_1, 3) )) != '')
 
   ORDER BY airi_serial;  

DECLARE ama_i_pax_dkt_cursor CURSOR FOR
  SELECT LTRIM(RTRIM(REPLACE(REPLACE(REPLACE(substr(airi_1,3),'(ADT)',''),'(CHD)',''),'(INF)',''))) pax_dkt_name
  FROM id_air_i
  WHERE airi_key = p_key 
  AND ( LTRIM(RTRIM(SUBSTR(airi_1, 3) )) != '')

  ORDER BY airi_serial;    
  

 DECLARE vat_master_cursor_main CURSOR FOR
 SELECT applied_on_code,applied_on_value,tvs_inter_domestic,tvs_product_type,tvs_package_normal,tvs_output_input_type,
  tvs_percentage,tvs_applicable_from,tvs_applied_on,tcm_code,tcm_description,tvs_inclusive_exclsive,inclusive_exclsive_code,
  inclusive_exclsive_value,tvs_collection_type,collection_code,io_type_code,io_type_value
  FROM v_id_tvl_vat_setup 
  WHERE product_code = 'HTL' AND package_code = prcss_code AND INTER_DOMESTIC_CODE=inter_domestic AND tvs_applicable_from<=CURRENT_DATE 
  AND active_status='A' AND applied_on_code NOT IN ('T','S')
  ORDER BY tvs_applicable_from DESC;

DECLARE vat_master_cursor CURSOR FOR
 SELECT tcm_code,tcm_description,inclusive_exclsive_code,collection_code,io_type_code,applied_on_value,tvs_percentage
  FROM v_id_tvl_vat_setup 
  WHERE product_code = 'HTL' AND package_code = prcss_code AND INTER_DOMESTIC_CODE=inter_domestic AND tvs_applicable_from<=CURRENT_DATE 
  AND active_status='A' AND applied_on_code IN (vat_applied_on)
  ORDER BY tvs_applicable_from DESC;

DECLARE vat_exempt_cursor_main CURSOR FOR
 SELECT applied_on_code,applied_on_value,tvs_inter_domestic,tvs_product_type,tvs_package_normal,tvs_output_input_type,
  tvs_percentage,tvs_applicable_from,tvs_applied_on,tcm_code,tcm_description,tvs_inclusive_exclsive,inclusive_exclsive_code,
  inclusive_exclsive_value,tvs_collection_type,collection_code,io_type_code,io_type_value
  FROM t_id_tvl_vat_setup_exempt 
  WHERE product_code = 'HTL' AND package_code = prcss_code AND INTER_DOMESTIC_CODE=inter_domestic AND tvs_applicable_from<=CURRENT_DATE 
  AND active_status='A' AND applied_on_code NOT IN ('T','S')
  ORDER BY tvs_applicable_from DESC;

DECLARE vat_exempt_cursor CURSOR FOR
 SELECT tcm_code,tcm_description,inclusive_exclsive_code,collection_code,io_type_code,applied_on_value,tvs_percentage
  FROM t_id_tvl_vat_setup_exempt 
  WHERE product_code = 'HTL' AND package_code = prcss_code AND INTER_DOMESTIC_CODE=inter_domestic AND tvs_applicable_from<=CURRENT_DATE 
  AND active_status='A' AND applied_on_code IN (vat_applied_on)
  ORDER BY tvs_applicable_from DESC;

DECLARE vat_in_out_cursor CURSOR FOR
 SELECT tvc_inoutput_code,SUM(tvc_amount) FROM t_id_tvl_vat_charge_details WHERE tvc_ticket_key=@TKT_KEY
 AND tvc_docket_key =  @dkt_key_no AND tvc_product_key = tkt_prd_key
 GROUP BY tvc_inoutput_code;          

  DECLARE class_master_key CURSOR FOR
  SELECT clsm_key FROM t_id_tvl_class_master WHERE LTRIM(RTRIM(CODE)) = LTRIM(RTRIM(t_sec_class));  

  DECLARE currency_key_cursor CURSOR FOR
  SELECT currency_key FROM t_id_currency_master WHERE LTRIM(RTRIM(CODE))=tkt_currency;

  DECLARE iata_agent_cursor CURSOR FOR
  SELECT VALUE FROM t_id_reference_codes_detail_view WHERE domain_name='IATA_AGENT' AND LTRIM(RTRIM(CODE))=tmp_iata_code;

DECLARE default_clerk_cursor CURSOR FOR 
SELECT value FROM t_id_reference_codes_detail_view WHERE domain_name = 'GDS_File_Load'
AND CODE = 'DEFAULT_CLERK';

  DECLARE iata_location_cursor CURSOR FOR
  SELECT VALUE FROM t_id_reference_codes_detail_view WHERE domain_name='IATA_LOCATION' AND LTRIM(RTRIM(CODE))=tmp_iata_code;

  DECLARE pax_category_cursor CURSOR FOR
  SELECT detail_key FROM t_id_reference_codes_detail_view WHERE domain_name='Pax Type' AND LTRIM(RTRIM(CODE))=passenger_age_type;

  DECLARE location_issue_book CURSOR FOR
  SELECT VALUE FROM t_id_reference_codes_detail_view WHERE domain_name='LOC_ISSUE_BOOK';  

  DECLARE air_r_source_agent_key CURSOR FOR
    SELECT LPAD(LTRIM(RTRIM(REPLACE(SUBSTR(airr_0,7,10),'/',''))),8,0) vendor_key

  FROM id_air_r
  WHERE airr_key = p_key
    AND SUBSTR(airr_0,1,6) = 'RM*VNO'
	AND	SUBSTR(airr_1,1,1) = 'S'
	and SUBSTR(airr_1,2,1) = p_serial_key
ORDER BY SUBSTR(airr_1,2,1);

  DECLARE air_r_source_agent_key_1 CURSOR FOR
    SELECT LPAD(LTRIM(RTRIM(REPLACE(SUBSTR(airr_0,7,10),'/',''))),8,0) vendor_key

  FROM id_air_r
  WHERE airr_key = p_key
    AND SUBSTR(airr_0,1,6) = 'RM*VNO'
AND airr_1 IS NULL;


	
  DECLARE air_div_source_agent_key CURSOR FOR
    SELECT LTRIM(RTRIM(SUBSTR(airr_0,8,10))) v_brnch_code
  FROM id_air_r
  WHERE airr_key = p_key
    AND SUBSTR(airr_0,1,6) = 'RM*DIV';
	
	 DECLARE air_r_branch_agent_key CURSOR FOR
	   SELECT substr(airr_0,15) v_brnch_name
	   FROM id_air_r
  WHERE airr_key = p_key
  AND  SUBSTR(airr_0,1,12) = 'RM TEAM NAME';
	
   DECLARE source_agent_key CURSOR FOR
   SELECT customer_key from t_id_cms_master where active_status = 'A' and code = vno_agent_key;
  
  

  DECLARE iata_agent_key CURSOR FOR
   SELECT B.CUSTOMER_KEY FROM t_id_reference_codes_detail_view A,t_id_cms_master B, t_id_reference_codes_detail_view C
    WHERE A.domain_name='IATA_AGENT' AND C.domain_name='AccountType' 
    AND LTRIM(RTRIM(A.CODE))=tmp_iata_code AND LTRIM(RTRIM(C.VALUE))='Supplier'
    AND LTRIM(RTRIM(A.VALUE)) = LTRIM(RTRIM(B.CODE)) AND C.profile_key='4' AND A.profile_key='4'
    AND C.profile_key = B.profile_key AND A.profile_key = B.profile_key AND A.profile_key = C.profile_key;

  DECLARE iata_location_key CURSOR FOR
    SELECT B.BM_KEY,B.code FROM t_id_reference_codes_detail_view A,t_id_tvl_branch_master B 
  WHERE A.domain_name='IATA_LOCATION' AND LTRIM(RTRIM(A.CODE))=tmp_iata_code
  AND LTRIM(RTRIM(A.VALUE)) = LTRIM(RTRIM(B.CODE)) AND A.profile_key = B.profile_key ;

  DECLARE pcc_location_key CURSOR FOR
    SELECT B.BM_KEY,B.CODE FROM t_id_reference_codes_detail_view A,t_id_tvl_branch_master B 
  WHERE A.domain_name='PCC_LOCATION' AND LTRIM(RTRIM(A.CODE)) = pcc_loc
  AND LTRIM(RTRIM(A.VALUE)) = LTRIM(RTRIM(B.CODE)) ;

  DECLARE brnch_location_key CURSOR FOR
  SELECT bm_key,CODE,NAME FROM t_id_tvl_branch_master WHERE CODE = v_brnch_code;
  
    DECLARE brnch_location_name CURSOR FOR
  SELECT bm_key,CODE,NAME FROM t_id_tvl_branch_master WHERE name like concat('%',v_brnch_name,'%');
  
    DECLARE brnch_name_location_key CURSOR FOR
  SELECT bm_key,CODE,NAME FROM t_id_tvl_branch_master WHERE NAME LIKE CONCAT ('%',v_brnch_name,'%');

  DECLARE tkt_clerk_location_key CURSOR FOR
  SELECT bm_key,CODE,NAME FROM t_id_tvl_branch_master WHERE bm_key = ticket_clerk_branch;

  DECLARE product_key_cursor CURSOR FOR
  SELECT eptm_key FROM t_id_tvl_product_type_master WHERE LTRIM(RTRIM(CODE))=prd_type;

  DECLARE fop_settlement_cursor CURSOR FOR
  SELECT tss_key FROM t_id_tvl_settlement_setup WHERE UPPER(LTRIM(RTRIM(CODE)))=(FOP_VALUE);

  DECLARE dkt_pnr_exist_cursor CURSOR FOR

  SELECT MAX(dkt_number) FROM t_id_tvl_docket_header WHERE LTRIM(RTRIM(dkt_transaction_reference))=pnr_number AND dkt_status = 'A';

  DECLARE ticket_check_cursor CURSOR FOR
  SELECT 'V' from t_id_tvl_hotel_voucher_details where hvd_confirmation_number = ticket_check_cursor_tkt;

 DECLARE dkt_head_sumry_cursor CURSOR FOR  
 SELECT dkts_key,dkt_account_status,dkt_htl_count FROM t_id_tvl_docket_header_summary WHERE  dkt_number = dkt_num; 

  DECLARE dkt_type_cursor CURSOR FOR
  SELECT VALUE FROM t_id_reference_codes_detail_view WHERE domain_name ='Branch_Doc_Type' AND CODE = dkt_value;
       

  DECLARE COUNTRY_KEY_CURSOR CURSOR FOR 
SELECT  ifnull(COUNTRY_KEY,0) FROM CNTRY_MASTER_DUMMY WHERE COUNTRY_NAME = v_country_name;


  DECLARE Docket_Type_Key CURSOR FOR  
  SELECT DOC_KEY FROM T_ID_DOCUMENT_TYPE_MASTER WHERE DOC_TYPE_CODE = LTRIM(RTRIM(dkt_type_value));

  DECLARE VAT_EXMPT_CUST_CURSOR CURSOR FOR
  SELECT 'Y' FROM t_id_tvl_vat_setup_exempt WHERE tvse_customer_key =  cust_key ;

  DECLARE inter_domestic_key_cursor CURSOR FOR
  SELECT detail_key FROM t_id_reference_codes_detail_view WHERE domain_name ='InternationalDomestic' AND CODE = inter_domestic;

  DECLARE service_type_key_cursor CURSOR FOR 
  SELECT detail_key FROM t_id_reference_codes_detail_view WHERE domain_name ='TransactionType' AND CODE = 'I';

  DECLARE process_type_cursor CURSOR FOR
  SELECT detail_key FROM t_id_reference_codes_detail_view WHERE domain_name ='ProcessType' AND UPPER(VALUE) = procss_typ;

  DECLARE issue_mode_cursor CURSOR FOR
  SELECT detail_key FROM t_id_reference_codes_detail_view WHERE domain_name ='Issue Mode' AND UPPER(CODE) = v_issue_mode;

  DECLARE GDS_File_Service_Cursor CURSOR FOR
  SELECT VALUE srv_fee,CODE srv_code FROM t_id_reference_codes_detail_view WHERE domain_name ='GDS_FILE_SRV_FEE';


 DECLARE booking_clerk_cursor CURSOR FOR
   SELECT LTRIM(RTRIM(SUBSTR(airr_0,7,6))) book_clerk
  FROM id_air_r
  WHERE airr_key = p_key
    AND SUBSTR(airr_0,1,6) = 'RM*BA/';
 
  DECLARE ticketing_clerk_cursor CURSOR FOR
 SELECT LTRIM(RTRIM(SUBSTR(airr_0,7,6))) ticket_clerk
  FROM id_air_r
  WHERE airr_key = p_key
    AND SUBSTR(airr_0,1,6) = 'RM*TA/';
	
  DECLARE default_service_fee_cursor CURSOR FOR
  SELECT ascd_serv_chg_id service_id,asc_charge_key service_key,charge_code service_code,charge_name service_name,
  ascd_discount_amt discount_amount,ascd_serv_chrg_mode_code charge_mode,ascd_chrg_apply_on_code charge_on_amount,
  ascd_serv_chrg_book charge_amount,ascd_serv_chrg_adult charge_adult_amount,ascd_serv_chrg_child charge_child_amount,
  ascd_serv_chrg_infant charge_infant_amount
  FROM `v_id_tvl_cms_air_srv_chrg_detail_rule` WHERE 
  (tkt_type_code = 'ALL' OR tkt_type = inter_domestic_key) AND 
  (airmas_code = 'ALL' OR airline_code = air_rls_key) AND 
  (class_type_code = 'A' OR class_type = tmp_class) AND 
  (tkt_date BETWEEN IFNULL(effective_from,CURRENT_DATE) AND IFNULL(effective_to,CURRENT_DATE)) AND
  cms_code IS NULL AND active_status = 'A';

  DECLARE file_service_fee_cursor CURSOR FOR
 SELECT hotel_rule_id AS service_id,hscd_key AS service_key,hscd_serv_chrg_name AS service_name from v_id_tvl_cms_hotel_srv_chrg_detail_rule
WHERE hscd_serv_chrg_name = srv_fee_code
AND active_status = 'A';

  DECLARE cust_service_fee_check CURSOR FOR
  SELECT 'Y' FROM `v_id_tvl_cms_air_srv_chrg_detail_rule` 
  WHERE cms_code = cust_code AND active_status = 'A';

  DECLARE cust_service_fee_cursor CURSOR FOR
  SELECT ascd_serv_chg_id service_id,asc_charge_key service_key,charge_code service_code,charge_name service_name,
  ascd_discount_amt discount_amount,ascd_serv_chrg_mode_code charge_mode,ascd_chrg_apply_on_code charge_on_amount,
  ascd_serv_chrg_book charge_amount,ascd_serv_chrg_adult charge_adult_amount,ascd_serv_chrg_child charge_child_amount,
  ascd_serv_chrg_infant charge_infant_amount
  FROM `v_id_tvl_cms_air_srv_chrg_detail_rule` WHERE 
  (tkt_type_code = 'ALL' OR tkt_type = inter_domestic_key) AND 
  (airmas_code = 'ALL' OR airline_code = air_rls_key) AND 
  (class_type_code = 'A' OR class_type = tmp_class) AND 
  (tkt_date BETWEEN IFNULL(effective_from,CURRENT_DATE) AND IFNULL(effective_to,CURRENT_DATE)) AND
  cms_code = cust_code AND active_status = 'A';


  
  DECLARE CONTINUE HANDLER FOR NOT FOUND SET DONE = TRUE;

  DECLARE EXIT HANDLER FOR SQLEXCEPTION
  BEGIN
    GET CURRENT DIAGNOSTICS CONDITION 1
      errno = MYSQL_ERRNO, msg = MESSAGE_TEXT;
      SET P_SUCCESS ='N';
                INSERT INTO t_id_gds_loading_exception (LE_COMPANY,LE_CRS,LE_AIRLINE,LE_TICKET_NUMBER,LE_LOAD_DATE,LE_LOAD_ERROR,
					    LE_LOAD_PLACE,LE_REMARK_1,LE_REMARK_2,LE_REMARK_3,LE_REMARK_4,lock_key,profile_key) 
				VALUES('1','AMADEUS_HTL',tkt_airline,excep_conf_num,CURRENT_DATE,msg,p_cursor,CONCAT('Reference Key',p_key),NULL,NULL,IFNULL(pnr_number,'NULL'),0,4);

  END;

  DECLARE EXIT HANDLER FOR 1265
  BEGIN
    GET CURRENT DIAGNOSTICS CONDITION 1
      errno = MYSQL_ERRNO, msg = MESSAGE_TEXT;
      SET P_SUCCESS ='N';
                INSERT INTO t_id_gds_loading_exception (LE_COMPANY,LE_CRS,LE_AIRLINE,LE_TICKET_NUMBER,LE_LOAD_DATE,LE_LOAD_ERROR,
					    LE_LOAD_PLACE,LE_REMARK_1,LE_REMARK_2,LE_REMARK_3,LE_REMARK_4,lock_key,profile_key) 
				VALUES('1','AMADEUS_HTL',tkt_airline,excep_conf_num,CURRENT_DATE,msg,p_cursor,CONCAT('Reference Key',p_key),NULL,NULL,IFNULL(pnr_number,'NULL'),0,4);

  END;

  SET P_SUCCESS ='N';
  SET BDF =0;
 
   OPEN excep_conf_number_cursor;
  FETCH excep_conf_number_cursor INTO excep_conf_num;
  CLOSE excep_conf_number_cursor;

  OPEN air_void_cursor;
  FETCH air_void_cursor INTO air_void;
  CLOSE air_void_cursor;

  OPEN refund_exist_cursor;
  FETCH refund_exist_cursor INTO air_rfnd;
  CLOSE refund_exist_cursor;

 IF IFNULL(LTRIM(RTRIM(air_void)),'NORMAL') != 'VOID' AND IFNULL(LTRIM(RTRIM(air_rfnd)),'SL') !='RF' THEN

  OPEN find_iata_cursor;
  FETCH find_iata_cursor INTO tmp_iata_code,pnr_number,bk_pcc,iss_pcc;
  CLOSE find_iata_cursor;
  
 OPEN booking_clerk_cursor;
  FETCH booking_clerk_cursor INTO book_clerk;
  CLOSE booking_clerk_cursor; 
  
  OPEN ticketing_clerk_cursor;
  FETCH ticketing_clerk_cursor INTO ticket_clerk;
  CLOSE ticketing_clerk_cursor; 
  
  
  INSERT INTO ID_KK_TEST(COL1,COL2) VALUES ('444',CONCAT('4 DIGIT TC CODE','-',ticket_clerk));

  INSERT INTO ID_KK_TEST(COL1,COL2) VALUES ('444',CONCAT('4 DIGIT BC CODE','-',book_clerk));  
  
   OPEN ticket_clerk_key_check_cursor;
  FETCH ticket_clerk_key_check_cursor INTO ticket_clerk_check;
  CLOSE ticket_clerk_key_check_cursor; 
  
  
   OPEN book_clerk_key_check_cursor;
  FETCH book_clerk_key_check_cursor INTO book_clerk_check;
  CLOSE book_clerk_key_check_cursor; 
  
  
  
  INSERT INTO ID_KK_TEST(COL1,COL2) VALUES ('4224',CONCAT('ticket_clerk_check','-',ticket_clerk_check));

  INSERT INTO ID_KK_TEST(COL1,COL2) VALUES ('4234',CONCAT('book_clerk_check','-',book_clerk_check));  
  
  IF IFNULL(ticket_clerk_check,'N')= 'N' and IFNULL(book_clerk_check,'N')= 'Y'  THEN
  SET ticket_clerk = book_clerk;
  
  INSERT INTO ID_KK_TEST(COL1,COL2) VALUES ('4235',CONCAT('BC=TC','-',ticket_clerk));
  END IF ;
  
IF IFNULL(ticket_clerk_check,'N')= 'N' and IFNULL(book_clerk_check,'N')= 'N'  THEN
  OPEN ama_c_clerk_cursor;
  FETCH ama_c_clerk_cursor INTO book_clerk_code,ticket_clerk_code;
  CLOSE ama_c_clerk_cursor;
  
  
  INSERT INTO ID_KK_TEST(COL1,COL2) VALUES ('444',CONCAT('2 DIGIT TC CODE','-',ticket_clerk_code));

  INSERT INTO ID_KK_TEST(COL1,COL2) VALUES ('444',CONCAT('2 DIGIT BC CODE','-',book_clerk_code));
  
  IF ticket_clerk_code IS NULL AND book_clerk_code IS NOT NULL THEN 
  SET ticket_clerk_code = book_clerk_code;
  END IF;
  
  OPEN ama_tc_clerk_cursor;
  FETCH ama_tc_clerk_cursor INTO ticket_clerk;
  CLOSE ama_tc_clerk_cursor;
  
  INSERT INTO ID_KK_TEST(COL1,COL2) VALUES ('444',CONCAT('EXEC REMARKS DIGIT TC CODE','-',ticket_clerk));
  END IF;
  
   OPEN book_clerk_key_cursor;
   FETCH book_clerk_key_cursor INTO book_clerk_key;
   CLOSE book_clerk_key_cursor;
  
   OPEN ticket_clerk_key_cursor;
   FETCH ticket_clerk_key_cursor INTO ticket_clerk_key,ticket_clerk_branch;
   CLOSE ticket_clerk_key_cursor;
  
  IF book_clerk_key IS NULL AND ticket_clerk_key IS NOT NULL THEN
     SET book_clerk_key = ticket_clerk_key;
  ELSEIF book_clerk_key IS NOT NULL AND ticket_clerk_key IS NULL THEN
     SET ticket_clerk_key = book_clerk_key;
  END IF;
    SET exp_tkt_clerk = ticket_clerk;
  
  INSERT INTO ID_KK_TEST(COL1,COL2) VALUES ('8855',CONCAT('ticket_clerk_key','-',ticket_clerk_key));
  
   IF IFNULL(ticket_clerk_key,'XXX') = 'XXX' THEN
  SET msg = 'Executive Master';
  SET p_cursor_1 = CONCAT('Ticketing Agent code (',exp_tkt_clerk,') missing in executive master' );
  SET default_msg = 'Ticket loaded with default Ticketing Agent code';
  SET P_SUCCESS = 'N';
   INSERT INTO t_id_gds_loading_exception (LE_COMPANY,LE_CRS,LE_AIRLINE,LE_TICKET_NUMBER,LE_LOAD_DATE,LE_LOAD_ERROR,
					    LE_LOAD_PLACE,LE_REMARK_1,LE_REMARK_2,LE_REMARK_3,LE_REMARK_4,lock_key,profile_key) 
				VALUES('1','AMADEUS_HTL',NULL,excep_conf_num,CURRENT_DATE,msg,p_cursor_1,CONCAT('Reference -',p_key),default_msg,NULL,IFNULL(pnr_number,'NULL'),0,4);

  OPEN  default_clerk_cursor;
  FETCH default_clerk_cursor INTO ticket_clerk;
  CLOSE default_clerk_cursor;
 
  INSERT INTO ID_KK_TEST(COL1,COL2) VALUES ('8865',CONCAT('FINAL default CODE','-',ticket_clerk));
END IF;
  
  
  INSERT INTO ID_KK_TEST(COL1,COL2) VALUES ('8866',CONCAT('FINAL TC CODE','-',ticket_clerk));
 

  OPEN  location_issue_book;
  FETCH location_issue_book INTO t_iss_bk;
  CLOSE location_issue_book;

  IF t_iss_bk = 'I' THEN
    SET pcc_loc =  iss_pcc; 
  ELSE 
    SET pcc_loc =  bk_pcc;
  END IF;

  OPEN pcc_clerk_key_cursor;
  FETCH pcc_clerk_key_cursor INTO ticket_clerk_key,ticket_clerk_branch;
  CLOSE pcc_clerk_key_cursor;

  IF  ticket_clerk_branch IS NULL THEN
   OPEN book_clerk_key_cursor;
   FETCH book_clerk_key_cursor INTO book_clerk_key;
   CLOSE book_clerk_key_cursor;

   OPEN ticket_clerk_key_cursor;
   FETCH ticket_clerk_key_cursor INTO ticket_clerk_key,ticket_clerk_branch;
   CLOSE ticket_clerk_key_cursor;
  END IF; 

   IF book_clerk_key IS NULL AND ticket_clerk_key IS NOT NULL THEN
     SET book_clerk_key = ticket_clerk_key;
  ELSEIF book_clerk_key IS NOT NULL AND ticket_clerk_key IS NULL THEN
     SET ticket_clerk_key = book_clerk_key;
  END IF;

  OPEN user_comp_profile_cursor;
  FETCH user_comp_profile_cursor INTO user_comp_profile_key;
  CLOSE user_comp_profile_cursor;

  OPEN ticket_user_key_cursor;
  FETCH ticket_user_key_cursor INTO user_created_key,user_profile_key;
  CLOSE ticket_user_key_cursor;

  IF user_created_key IS NULL THEN
   OPEN user_created_cursor;
   FETCH user_created_cursor INTO user_created_key,user_profile_key;
   CLOSE user_created_cursor;
  END IF;  

  SET p_cursor = ' Ticket Date';    
  OPEN ama_d_date_cursor;
  FETCH ama_d_date_cursor INTO tkt_date;
  CLOSE ama_d_date_cursor;


 SET p_cursor = concat(' tkt_date validate ', tvl_date);    

 IF tkt_date > tvl_date THEN
   SET tvl_date =  STR_TO_DATE(  CONCAT(IFNULL(DATE_FORMAT(tvl_date,'%d%b'), ''),IFNULL((DATE_FORMAT(tvl_date,'%Y') + 1), '')),'%d%b%Y');
 END IF;

  SET p_cursor = ' Error : iata_agent_code';    
  OPEN  iata_agent_cursor;
  FETCH iata_agent_cursor INTO t_iata_agent;
  CLOSE iata_agent_cursor;

   
  OPEN  air_div_source_agent_key;
  FETCH air_div_source_agent_key INTO v_brnch_code;
  CLOSE air_div_source_agent_key; 
  
  
 INSERT INTO ID_KK_TEST(COL1,COL2) VALUES ('2231',CONCAT('F_BRNCH_CODE',' ',v_brnch_code));
  
    OPEN  air_r_branch_agent_key;
  FETCH air_r_branch_agent_key INTO v_brnch_name;
  CLOSE air_r_branch_agent_key; 
   
 INSERT INTO ID_KK_TEST(COL1,COL2) VALUES ('2232',CONCAT('F_BRNCH_NAME',' ',v_brnch_name));
  
  

  OPEN  brnch_location_key;
  FETCH brnch_location_key INTO t_location_key,t_location_code,t_location_name;
  CLOSE brnch_location_key; 
  

  IF ticket_clerk_branch IS NOT NULL and t_location_key is null THEN
	 OPEN tkt_clerk_location_key;
	 FETCH tkt_clerk_location_key INTO t_location_key,t_location_code,t_location_name;
	 CLOSE tkt_clerk_location_key;
  	
	ELSE 

    OPEN  pcc_location_key;
    FETCH pcc_location_key INTO t_location_key,t_location_code;
    CLOSE pcc_location_key;
   END IF;

  OPEN exch_doc_cursor;
  FETCH exch_doc_cursor INTO tkt_exch_doc_number;
  CLOSE exch_doc_cursor; 

  SET p_cursor = ' Error : Fare Cursor';
 
 SET DONE = FALSE;

 OPEN hotel_car_header;
hotel_car_header: LOOP
FETCH hotel_car_header INTO p_service_type,p_service_name,v_conf_number,p_serial_key,art_serial;
 IF DONE THEN
  LEAVE hotel_car_header;
 END IF; 
INSERT INTO ID_KK_TEST(COL1,COL2) VALUES ('10002',CONCAT('serial key',' ',p_serial_key));
INSERT INTO ID_KK_TEST(COL1,COL2) VALUES ('10002',CONCAT('serial key',' ',p_serial_key));
 
 	 SET tkt_void_status = NULL;
    OPEN ticket_status_details;
    FETCH ticket_status_details INTO tkt_void_status;
    CLOSE ticket_status_details;

INSERT INTO ID_KK_TEST(COL1,COL2) VALUES ('52',tkt_void_status);

 IF IFNULL(tkt_void_status,'N') = 'N' THEN
 
  SET ticket_check_cursor_tkt = v_conf_number;
  SET p_cursor = 'ticket_check_cursor';
  SET DONE = FALSE;     
  SET v_tmp_tfind = NULL;
  
INSERT INTO ID_KK_TEST(COL1,COL2) VALUES ('53',ticket_check_cursor_tkt);

  OPEN ticket_check_cursor;
  FETCH ticket_check_cursor INTO v_tmp_tfind;
  IF DONE AND IFNULL(v_tmp_tfind,'N') = 'N'  THEN
    CLOSE ticket_check_cursor;
	
  OPEN  air_r_source_agent_key;
  FETCH air_r_source_agent_key INTO vno_agent_key;
  CLOSE air_r_source_agent_key; 
  
  IF IFNULL(vno_agent_key,0) = 0 THEN 
  OPEN  air_r_source_agent_key_1;
  FETCH air_r_source_agent_key_1 INTO vno_agent_key;
  CLOSE air_r_source_agent_key_1;
  END IF;
  
   IF LENGTH(vno_agent_key) != 8 THEN
   SET vno_agent_key = LPAD(vno_agent_key,8,0);
  END IF ;
  
   SET p_cursor = ' Error : source_agent_key';         
  OPEN  source_agent_key;
  FETCH source_agent_key INTO src_agent_key;
  CLOSE source_agent_key;
  
  IF IFNULL(src_agent_key,0) = 0 THEN
  
     SET msg = 'Business Partner';
	SET p_cursor_1 = CONCAT('Supplier code (',vno_agent_key,') missing in Business partner' );
   SET default_msg = 'Ticket loaded with default Supplier code';
   SET P_SUCCESS = 'N';
    INSERT INTO t_id_gds_loading_exception (LE_COMPANY,LE_CRS,LE_AIRLINE,LE_TICKET_NUMBER,LE_LOAD_DATE,LE_LOAD_ERROR,
					    LE_LOAD_PLACE,LE_REMARK_1,LE_REMARK_2,LE_REMARK_3,LE_REMARK_4,lock_key,profile_key) 
				VALUES('1','AMADEUS_HTL',NULL,v_conf_number,CURRENT_DATE,msg,p_cursor_1,CONCAT('Reference -',p_key),default_msg,NULL,IFNULL(pnr_number,'NULL'),0,4);
  
  OPEN  default_agent_key;
  FETCH default_agent_key INTO vno_agent_key;
  CLOSE default_agent_key; 
END IF;
  
 INSERT INTO ID_KK_TEST(COL1,COL2) VALUES ('1232',CONCAT('F_SRC_AGENT',' ',vno_agent_key));
 
 SET p_cursor = ' Error : source_agent_key';         
  OPEN  source_agent_key;
  FETCH source_agent_key INTO src_agent_key;
  CLOSE source_agent_key;
  
 INSERT INTO ID_KK_TEST(COL1,COL2) VALUES ('1231',CONCAT('M-SRC_AGENT',' ',src_agent_key));
 
 INSERT INTO ID_KK_TEST(COL1,COL2) VALUES ('1551',CONCAT('M-art_serial_key',' ',art_serial));   

SET p_cursor = 'Error : hotel details';
 OPEN  hotel_details;
   FETCH hotel_details INTO v_check_in_date,v_check_out_date,v_room_type,v_rate_plan,
  			   htl_booking_curr,v_no_of_nights,
  			   v_rate_type_code,v_guarantee_method,v_hotel_name,v_hotel_city,v_htl_chain,v_country_name,c_code,property_code,htl_adrss,htl_pbox_num,
			   htl_adrss_1,htl_tel_num,htl_fax_num,htl_email;
   CLOSE hotel_details; 
   
INSERT INTO ID_KK_TEST(COL1,COL2) VALUES ('30031',concat('v_hotel_name',' ',v_hotel_name));
INSERT INTO ID_KK_TEST(COL1,COL2) VALUES ('30032',concat('v_hotel_city',' ',v_hotel_city));
INSERT INTO ID_KK_TEST(COL1,COL2) VALUES ('30033',CONCAT('v_htl_chain_1',' ',v_htl_chain));
INSERT INTO ID_KK_TEST(COL1,COL2) VALUES ('30034',concat('v_country_name',' ',v_country_name));
INSERT INTO ID_KK_TEST(COL1,COL2) VALUES ('30035',concat('c_code',' ',c_code));
INSERT INTO ID_KK_TEST(COL1,COL2) VALUES ('30036',CONCAT('tkt_currency',' ',tkt_currency));

SET p_cursor = 'Error :Remarks_currency_chk_cursor';
 OPEN  Remarks_currency_chk_cursor;
  FETCH Remarks_currency_chk_cursor INTO rm_curr_chk;
  CLOSE Remarks_currency_chk_cursor;

INSERT INTO ID_KK_TEST(COL1,COL2) VALUES ('19001',concat('rm_curr_chk',' ',rm_curr_chk));  
SET p_cursor = 'Error :Remarks_rate_chk_cursor';
  OPEN  Remarks_rate_chk_cursor;
  FETCH Remarks_rate_chk_cursor INTO rm_rate_chk;
  CLOSE Remarks_rate_chk_cursor;
INSERT INTO ID_KK_TEST(COL1,COL2) VALUES ('19002',concat('rm_rate_chk',' ',rm_rate_chk));
 
 IF IFNULL(rm_rate_chk,'N') = 'Y' THEN 
  IF IFNULL(rm_curr_chk,'N') = 'Y' THEN 
SET p_cursor = 'Error :toatal_l_rate';
  OPEN  Remarks_rate_curr_cursor;
  FETCH Remarks_rate_curr_cursor INTO toatal_l_rate;
  CLOSE Remarks_rate_curr_cursor;
  ELSE
  OPEN  Remarks_rate_cursor;
  FETCH Remarks_rate_cursor INTO toatal_l_rate;
  CLOSE Remarks_rate_cursor;
  END IF;
  
  ELSE
  OPEN  u_rate_cursor;
  FETCH u_rate_cursor INTO toatal_l_rate;
  CLOSE u_rate_cursor;
  END IF;

INSERT INTO ID_KK_TEST(COL1,COL2) VALUES ('19003',concat('toatal_l_rate',' ',toatal_l_rate));
SET p_cursor = 'Error :Remarks_currency_cursor'; 
  OPEN  Remarks_currency_cursor;
  FETCH Remarks_currency_cursor INTO tkt_currency;
  CLOSE Remarks_currency_cursor; 
  
  IF IFNULL(tkt_currency,0) = 0 THEN 
  OPEN  u_curr_code_cursor;
  FETCH u_curr_code_cursor INTO tkt_currency;
  CLOSE u_curr_code_cursor;
  END IF;

INSERT INTO ID_KK_TEST(COL1,COL2) VALUES ('19004',concat('tkt_currency',' ',tkt_currency));
SET p_cursor = 'Error :Remarks_count_cursor';
  OPEN  Remarks_count_cursor;
  FETCH Remarks_count_cursor INTO v_no_of_rooms;
  CLOSE Remarks_count_cursor;
  
 IF IFNULL(v_no_of_rooms,0) = 0 THEN 
  OPEN  u_no_of_count_cursor;
  FETCH u_no_of_count_cursor INTO v_no_of_rooms;
  CLOSE u_no_of_count_cursor;
 END IF;

   IF IFNULL(v_no_of_rooms,0) = 0 THEN
	 SET v_no_of_rooms=1;
	END IF;

INSERT INTO ID_KK_TEST(COL1,COL2) VALUES ('19005',concat('v_no_of_rooms',' ',v_no_of_rooms));

  OPEN  Remarks_room_basis_cursor;
  FETCH Remarks_room_basis_cursor INTO room_basis;
  CLOSE Remarks_room_basis_cursor;

  OPEN  Remarks_room_basis_key_cursor;
  FETCH Remarks_room_basis_key_cursor INTO room_basis_key;
  CLOSE Remarks_room_basis_key_cursor;
  
  SET room_basis_key = IFNULL(room_basis_key,'10121');
  
SET p_cursor = 'V_CHAIN_KEY_CURSOR';
  OPEN  V_CHAIN_KEY_CURSOR;
  FETCH V_CHAIN_KEY_CURSOR INTO v_chain_key;
  CLOSE V_CHAIN_KEY_CURSOR; 
  
  INSERT INTO ID_KK_TEST(COL1,COL2) VALUES ('2777',CONCAT('v_chain_key',' ',v_chain_key));
   
SET v_room_rate_per_night =0;   
   IF v_tkt_currency IS NOT NULL THEN
    SET tkt_currency = v_tkt_currency;
    SET ex_rate = IFNULL(v_ex_rate,1);
  END IF;   

  SET p_cursor = ' Error : Currency Cursor';
  OPEN  base_currency_cursor;
  FETCH base_currency_cursor INTO company_code,base_curr_key,base_curr_code,base_decimal;
  CLOSE base_currency_cursor;
  
  SET p_cursor = 'ticket currency cursor';
    INSERT INTO ID_KK_TEST(COL1,COL2) VALUES ('72222',CONCAT('base_curr_code',' ',base_curr_code));
    OPEN  currency_key_cursor;
    FETCH currency_key_cursor INTO tkt_curr_key;
    CLOSE currency_key_cursor;

  SET p_cursor = 'exchange_rate_cursor';
  OPEN  exchange_rate_cursor;
  FETCH exchange_rate_cursor INTO exch_rate;
  CLOSE exchange_rate_cursor;
  
  
    INSERT INTO ID_KK_TEST(COL1,COL2) VALUES ('72222',CONCAT('exch_rate',' ',exch_rate));

 IF tkt_currency = base_curr_code THEN
    SET ex_rate      = 1;  
 ELSE
  IF tkt_currency != base_curr_code THEN
   SET ex_rate      = exch_rate;
  ELSE
   SET ex_rate      = ex_rate;  
  END IF; 
 END IF;

SET ex_rate = CAST(ex_rate AS DECIMAL(18,4));

   SET p_cursor = 'exchange_rate_cursor';
	SET v_no_of_nights=0;
	
	
IF 	v_check_out_date = v_check_in_date then 
  set v_no_of_nights = 1;
 ELSE 
	set v_no_of_nights =DATEDIFF(v_check_out_date, v_check_in_date);
 END IF;
 
  SET p_cursor = 'docket value';
    
	IF m_cntry_key = '227' THEN 
   SET dkt_value = 'Inbound';
   ELSE 
   SET dkt_value = 'Outbound';
   END IF;
 
if dkt_value = 'Inbound' THEN 
SET inter_domestic = 'I';
ELSE 
SET inter_domestic = 'D';
END IF;
 
 INSERT INTO ID_KK_TEST(COL1,COL2) VALUES ('94',total_f_rate);
 INSERT INTO ID_KK_TEST(COL1,COL2) VALUES ('95',toatal_l_rate);
  
 SET v_room_rate_per_night = round((toatal_l_rate*v_no_of_nights*v_no_of_rooms),3);
 
  SET pub_fare   = IFNULL(v_room_rate_per_night,0);
 SET sell_fare  = IFNULL(v_room_rate_per_night,0);
INSERT INTO ID_KK_TEST(COL1,COL2) VALUES ('96',pub_fare);
INSERT INTO ID_KK_TEST(COL1,COL2) VALUES ('97',sell_fare);
INSERT INTO ID_KK_TEST(COL1,COL2) VALUES ('98',v_room_rate_per_night);
 
  
   SET DONE = FALSE; 

  SET p_cursor = 'ama_fp_pay_type_cursor';
  OPEN ama_fp_pay_type_cursor;
  FETCH ama_fp_pay_type_cursor INTO tkt_card_find, tkt_card_type, tkt_card_number,expiry_date;
    IF DONE THEN
      SET tkt_card_find = 0;
      SET tkt_card_type = NULL;
      SET tkt_card_number=NULL;
      SET amex_app_code =NULL;
    END IF;
  CLOSE ama_fp_pay_type_cursor;


  IF tkt_card_find > 0 THEN
     OPEN card_type_cursor;
     FETCH card_type_cursor INTO card_key,card_type,card_name,card_an_key,card_an_code,card_an_name,card_srv_fee,card_lodge_status,card_lodge_num;
     CLOSE card_type_cursor;     
  END IF;

   IF card_an_code = 'Airline Card'  THEN
     SET procss_typ = 'UCCF';
     SET prcss_code = 'U';
    ELSE
     SET procss_typ = 'NORMAL'; 
	  SET prcss_code = 'N';  
    END IF;

  
  SET v_issue_mode := 'N';  

  IF IFNULL(tkt_exch_doc_number,'X') <> 'X' THEN
    SET pub_fare := IFNULL(pub_fare,0) - IFNULL(tkt_destination_tax,0);
    SET v_issue_mode := 'R';
    IF pub_fare < 0 THEN
      SET pub_fare := 0;
    END IF;
  END IF;

  SET sale_exec = NULL; SET lpo = NULL; SET cust_code = NULL; SET addi_selling = NULL; SET addi_collection = 0; SET disc_amt = 0;
  OPEN  air_r_sales_exec_cursor;
  FETCH air_r_sales_exec_cursor INTO sale_exec;
  CLOSE air_r_sales_exec_cursor;

  IF sale_exec IS NULL THEN
     SET sale_exec = book_clerk;
  END IF;

  OPEN air_r_lpo_cursor;
  FETCH air_r_lpo_cursor INTO lpo;
  CLOSE air_r_lpo_cursor;
  
  
  SET p_cursor = 'air_r_customer_cursor';

  OPEN air_r_customer_cursor;
  FETCH air_r_customer_cursor INTO cust_code;
  CLOSE air_r_customer_cursor;
  

  set cust_code = LPAD(cust_code,10,0);

  IF INSTR(cust_code,'/') <> 0 THEN
   IF lpo IS NULL THEN
    SET lpo = SUBSTR(cust_code,INSTR(cust_code,'/')+1);
   END IF;
    SET cust_code = SUBSTR(cust_code, 1, INSTR(cust_code, '/')-1);
 END IF;

 
  SET p_cursor = 'air_r_coll_fare_cursor'; 
    OPEN  air_r_coll_fare_cursor;
  FETCH air_r_coll_fare_cursor INTO addi_collection;
  CLOSE air_r_coll_fare_cursor;

  SET DONE = FALSE; 
  OPEN  ama_fm_comm_cursor;
  FETCH ama_fm_comm_cursor INTO tkt_comm;
  IF DONE THEN
     SET tkt_comm=0;
  END IF;
  CLOSE ama_fm_comm_cursor;

  IF tkt_comm > 0 THEN
   SET tkt_comm_amt = CONVERT( ((IFNULL(sell_fare,0) * tkt_comm ) / 100 ), DECIMAL(18,4));
  END IF;


  SET p_cursor = 'customer_check_cursor'; 
  IF cust_code IS NOT NULL THEN
   OPEN customer_check_cursor;
   FETCH customer_check_cursor INTO cust_key,cust_code;
   CLOSE customer_check_cursor;
  END IF; 

  IF cust_key IS NULL THEN
    SET cust_code = NULL;
    IF IFNULL(addi_collection ,0) != 0 THEN
      SET cash_amount = addi_collection + servicefees;
      SET disc_amt = IFNULL(addi_selling, sell_fare) + IFNULL(tkt_destination_tax, 0) - addi_collection;
      IF disc_amt < 0 THEN
         SET cash_amount = IFNULL(addi_selling, sell_fare) + IFNULL(tkt_destination_tax, 0)+servicefees;
         SET disc_amt = 0 ;
      END IF;
    ELSE
      SET cash_amount = IFNULL(sell_fare, 0) + IFNULL(tkt_destination_tax, 0)+servicefees;
    END IF;
    SET sett_mode   = '1';
    SET corporate = NULL;
    SET lpo_date = NULL;
    SET lpo = NULL;
  ELSE
    IF IFNULL(addi_collection ,0) != 0 THEN
      SET cust_amt    = addi_collection+servicefees;
      SET disc_amt    = IFNULL(addi_selling, sell_fare) + IFNULL(tkt_destination_tax, 0) - addi_collection;
      IF disc_amt < 0 THEN
         SET cust_amt = IFNULL(addi_selling, sell_fare) + IFNULL(tkt_destination_tax, 0)+servicefees;
         SET disc_amt = 0 ;
      END IF;
    ELSE
      SET cust_amt    = IFNULL(sell_fare, 0) + IFNULL(tkt_destination_tax, 0);
    END IF;
    SET lpo = IFNULL(lpo,'PENDING');
    SET lpo_date = tkt_date;
    SET sett_mode   = '2';
    SET corporate = cust_code;
  END IF;
  SET cust_exempt_status = 'N';

  IF cust_key IS NOT NULL THEN
   OPEN  vat_exmpt_cust_cursor;
   FETCH vat_exmpt_cust_cursor INTO cust_exempt_status;
   CLOSE vat_exmpt_cust_cursor;
  END IF;


  IF tkt_card_find = 0 OR LTRIM(RTRIM(card_type)) IS NULL THEN
    SET tkt_card_type   = NULL;
    SET tkt_card_number = NULL;
    SET card_exp_dt = NULL;
  ELSE  
    SET tkt_card_amount = IFNULL(sell_fare, 0) + IFNULL(tkt_destination_tax, 0);
    SET cust_amt        = 0;
    SET cash_amount     = 0;
    SET lpo = IFNULL(lpo,'PENDING');
    SET lpo_date = tkt_date;
    SET sett_mode       = '3';
    SET card_exp_dt = STR_TO_DATE(CONCAT('01',expiry_date), "%d%c%y");
  END IF;

   SET prd_type = 'HTL';    

   OPEN product_key_cursor;
   FETCH product_key_cursor INTO tkt_prd_key;
   CLOSE product_key_cursor;


  SET p_cursor = 'dkt_pnr_exist_cursor'; 
   OPEN dkt_pnr_exist_cursor;
   FETCH dkt_pnr_exist_cursor INTO dkt_num;
   CLOSE dkt_pnr_exist_cursor;
    
	INSERT INTO ID_KK_TEST(COL1,COL2) VALUES (1001,concat('dkt_pnr_exist_num','-',dkt_num));
   

   IF dkt_num is NULL then
   
  SELECT  FN_DKT_NUM(pnr_number) into dkt_num;
end if;
INSERT INTO ID_KK_TEST(COL1,COL2) VALUES (1002,concat('dkt_pnr_exist_num','-',dkt_num));


  SET p_cursor = 'FN_COUNTRY_KEY'; 
  SELECT FN_COUNTRY_KEY (v_country_name) into m_cntry_key;
  
  
 SET p_cursor = 'FN_COUNTRY_KEY11';
   
  
  if IFNULL(m_cntry_key,0) =0 then 
  SELECT FN_COUNTRY_KEY_1 (c_code) into m_cntry_key;
end if;

  if IFNULL(m_cntry_key,0) =0 then   
     SET msg = 'Country Master';
	SET p_cursor_1 = CONCAT('Country code (',v_country_name,') missing in Country master' );
   SET default_msg = 'Ticket loaded with default country code';
    SET P_SUCCESS = 'N';
    INSERT INTO t_id_gds_loading_exception (LE_COMPANY,LE_CRS,LE_AIRLINE,LE_TICKET_NUMBER,LE_LOAD_DATE,LE_LOAD_ERROR,
					    LE_LOAD_PLACE,LE_REMARK_1,LE_REMARK_2,LE_REMARK_3,LE_REMARK_4,lock_key,profile_key) 
				VALUES('1','AMADEUS_HTL',NULL,v_conf_number,CURRENT_DATE,msg,p_cursor_1,CONCAT('Reference -',p_key),default_msg,NULL,IFNULL(pnr_number,'NULL'),0,4);
  
  OPEN  default_country_key;
  FETCH default_country_key INTO m_cntry_key;
  CLOSE default_country_key; 
END IF;


INSERT INTO ID_KK_TEST(COL1,COL2) VALUES (10031,concat('m_cntry_key','-',m_cntry_key));
  SET p_cursor = 'issue_mode_cursor'; 
    OPEN  issue_mode_cursor;
	FETCH issue_mode_cursor INTO issue_mode_key;
	CLOSE issue_mode_cursor;

	SET f_vat		= 0;
	SET x_vat		= 0;
	SET c_vat		= 0;
	SET d_vat		= 0;
	SET o_vat		= 0;
  	SET t_vat		= 0;

   OPEN city_code_key;
   FETCH city_code_key INTO v_city_code_key;
   CLOSE city_code_key;
  INSERT INTO ID_KK_TEST(COL1,COL2) VALUES ('9002',CONCAT(v_city_code_key,' ',v_hotel_city));

IF v_city_code_key is null then
INSERT INTO `t_id_city_master` (`code`, `name`, `State_key`, `Country_key`, `District_key`, 
`active_from`, `active_to`, `active_status`, `profile_key`, `lock_key`) VALUES (c_code,v_hotel_city, 0, m_cntry_key,
 NULL, '2022-01-01 00:00:00', '2099-12-30 00:00:00', 'A', 4, 0);
   OPEN city_code_key;
   FETCH city_code_key INTO v_city_code_key;
   CLOSE city_code_key;
 END IF;
  

   IF m_cntry_key = '227' THEN 
   SET ib_value = 'I';
   ELSE 
   SET ib_value = 'D';
   END IF;
   
   SELECT detail_key into v_id_value FROM t_id_reference_codes_detail_view WHERE domain_name='InboundOutbound'
   and code = ib_value;
 

   OPEN  ama_i_pax_dkt_cursor;
   FETCH ama_i_pax_dkt_cursor INTO tkt_dkt_pax;
   CLOSE ama_i_pax_dkt_cursor;

	OPEN  HOTEL_CFR_NO_CHK;
    FETCH HOTEL_CFR_NO_CHK INTO v_conf_number_chk;
    CLOSE HOTEL_CFR_NO_CHK;
  
   OPEN room_type_key;
   FETCH room_type_key INTO v_room_type_key;
   CLOSE room_type_key;   
   

   OPEN hotel_code_key;
   FETCH hotel_code_key INTO v_hotel_code_key;
   CLOSE hotel_code_key;    
   
   SET p_cursor = ' Error : hotel_code_key'; 
   
   SET v_chain_key = IFNULL(v_chain_key,148);
   INSERT INTO ID_KK_TEST(COL1,COL2) VALUES ('9009',m_cntry_key);
   
   IF v_hotel_code_key IS NULL THEN
   SELECT htl_key into htl_anum1 FROM t_id_hotel_master ORDER BY 1 DESC LIMIT 1;
   SET htl_anum = LPAD(htl_anum1,6,0);
     INSERT INTO `t_id_hotel_master` (code, `name`, `htl_city`, `htl_country`, `htl_p_box`, `htl_type`, `htl_chain`, 
	 `htl_service_details`, `htl_supplier_link`, `htl_address_1`, `htl_address_2`, `htl_address_3`, `htl_address_4`, 
	 `htl_telephone`, `htl_fax`, `htl_email`, `htl_telex`, `htl_contact_person`, `htl_bank_name`, `htl_bank_details`, 
	 `htl_web_url`, `htl_remarks`, `htl_reference`, `htl_amd_gds`, `htl_gll_gds`, `htl_sab_gds`, `active_status`, 
	 `active_from`, `active_to`, `lock_key`, `profile_key`) VALUES (htl_anum, v_hotel_name, v_city_code_key, m_cntry_key, htl_pbox_num,
	 134, v_chain_key, NULL, NULL, htl_adrss, IFNULL(htl_adrss_1,'NULL'), NULL, NULL, IFNULL(htl_tel_num,'NULL'), IFNULL(htl_fax_num,'NULL'), IFNULL(htl_email,'NULL'), NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
	 'A', '2023-01-01 10:24:05', NULL, 0, 4);

END IF;
   SET p_cursor = ' Error : hotel_chain_key'; 
  
   OPEN  air_r_rsn_code_cursor;
  FETCH air_r_rsn_code_cursor INTO rsn_code;
  CLOSE air_r_rsn_code_cursor;
  
   INSERT INTO ID_KK_TEST(COL1,COL2) VALUES ('6543',concat('rsn_code','-',rsn_code));
IF   IFNULL(rsn_code,'AMAM') != 'AMAM' THEN
  OPEN  master_rsn_key_cursor;
  FETCH master_rsn_key_cursor INTO rsn_code_key;
  CLOSE master_rsn_key_cursor;
  
   INSERT INTO ID_KK_TEST(COL1,COL2) VALUES ('6544',concat('rsn_code_key','-',rsn_code_key));
  
  IF IFNULL(rsn_code_key,0) = 0  then
 INSERT INTO `t_id_et_private_fare_acc_details` (`pfad_supplier_key`, `pfad_hap_name`,
`pfad_pcc`, `pfad_cms_key`, `pfad_airline_key`, `pfad_deal_code_type`, `pfad_deal_code`, `pfad_valid_from`,
`pfad_valid_to`, `pfad_status`, `pfad_category_based_on`, `pfad_allocation_type`, `pfad_class_type`, 
`profile_key`, `lock_key`, `active_status`) VALUES (10108, rsn_code, NULL, NULL, 358, 300, NULL, 
CURRENT_TIMESTAMP, '2033-08-01 12:59:09', 'A', 1, 1, 167, 4, 0, 'A');
  OPEN  master_rsn_key_cursor;
  FETCH master_rsn_key_cursor INTO rsn_code_key;
  CLOSE master_rsn_key_cursor;
END IF;
END IF; 
      
   OPEN hotel_code_key;
   FETCH hotel_code_key INTO v_hotel_code_key;
   CLOSE hotel_code_key;  
   
   
   OPEN hotel_chain_key;
   FETCH hotel_chain_key INTO v_hotel_chain_key;
   CLOSE hotel_chain_key;   

    IF dkt_num IS NULL THEN  
   OPEN  dkt_type_cursor;
   FETCH dkt_type_cursor INTO dkt_type_value;
   CLOSE dkt_type_cursor;
     
   IF m_cntry_key = '227' THEN 
   SET dkt_value = 'Inbound';
   ELSE 
   SET dkt_value = 'Outbound';
   END IF;
      
INSERT INTO ID_KK_TEST(COL1,COL2) VALUES ('9001',dkt_value);
  INSERT INTO ID_KK_TEST(COL1,COL2) VALUES ('9003',dkt_type_value);


   OPEN  Docket_Type_Key;
   FETCH Docket_Type_Key INTO dkt_type_key;
   CLOSE Docket_Type_Key;



   SET p_cursor = ' Error : PRC_HUB_NUMBER_GEN'; 

   SELECT num_gen INTO dkt_num FROM t_id_num_gen_table WHERE doc_code = dkt_type_value AND MONTH(doc_gen_date) = MONTH(tkt_date)  AND YEAR(doc_gen_date) = YEAR(tkt_date) 
	AND profile_key = user_comp_profile_key AND flag=0 ORDER BY num_gen ASC LIMIT 1; 


INSERT INTO ID_KK_TEST(COL1,COL2) VALUES ('21',dkt_type_value);
  INSERT INTO ID_KK_TEST(COL1,COL2) VALUES ('22',tkt_date);  
  INSERT INTO ID_KK_TEST(COL1,COL2) VALUES ('23',user_comp_profile_key);  
  INSERT INTO ID_KK_TEST(COL1,COL2) VALUES ('24',t_location_code); 

  INSERT INTO ID_KK_TEST(COL1,COL2) VALUES ('9006',dkt_num);  
  

   SET p_cursor = ' Error : PRC_HUB_NUMBER_GEN 1'; 

    IF dkt_num IS NULL THEN

   SET p_cursor = ' Error : PRC_HUB_NUMBER_GEN 2';  

     CALL PRC_DOC_NUMBER_GEN_REPEAT(DATE(tkt_date),dkt_type_value,user_comp_profile_key);	 

   SET p_cursor = ' Error : PRC_HUB_NUMBER_GEN 3';  


INSERT INTO ID_KK_TEST(COL1,COL2) VALUES ('21',dkt_type_value);
  INSERT INTO ID_KK_TEST(COL1,COL2) VALUES ('22',tkt_date);  
  INSERT INTO ID_KK_TEST(COL1,COL2) VALUES ('23',user_comp_profile_key);  
  INSERT INTO ID_KK_TEST(COL1,COL2) VALUES ('24',t_location_key);  
  
      SELECT num_gen INTO dkt_num FROM t_id_num_gen_table WHERE doc_code = dkt_type_value AND MONTH(doc_gen_date) = MONTH(tkt_date) 
		AND profile_key = user_comp_profile_key AND flag=0 ORDER BY num_gen ASC LIMIT 1; 					

    END IF; 
	
  INSERT INTO ID_KK_TEST(COL1,COL2) VALUES ('9006',dkt_num);  
  
  INSERT INTO ID_KK_TEST(COL1,COL2) VALUES ('9009',t_location_key);  

   IF cust_key IS NOT NULL AND p_service_type IS NOT NULL  AND t_location_key IS NOT NULL AND src_agent_key IS NOT NULL AND v_conf_number_chk IS NULL THEN     
    INSERT INTO t_id_tvl_docket_header (dkt_number,dkt_date,dkt_partner_key,dkt_branch_key,dkt_doc_type_key,dkt_status,
	 dkt_lead_pax_name,dkt_client_reference,dkt_transaction_reference,dkt_lpo_number,dkt_lpo_date,dkt_created_by,dkt_created_on,lock_key,profile_key) 
    VALUES(dkt_num,tkt_date,cust_key,t_location_key,dkt_type_key,'A',
	 tkt_dkt_pax,NULL,pnr_number,lpo,lpo_date,user_created_key,CURRENT_TIMESTAMP,0,user_profile_key) ;  
 	  UPDATE t_id_num_gen_table SET flag = 1 WHERE num_gen = dkt_num;

 	   select dkt_key into dkt_num_key from t_id_tvl_docket_header where dkt_number = dkt_num;

     INSERT INTO t_id_tvl_docket_header_summary (dkt_key,dkt_number,dkt_date,dkt_partner_key,dkt_branch_key,dkt_doc_type_key,dkt_status,dkt_lead_pax_name,
dkt_transaction_reference,dkt_lpo_number,dkt_lpo_date,dkt_air_count,dkt_htl_count,
dkt_car_count,dkt_misc_count,dkt_awb_count,dkt_account_status,
dkt_created_by,dkt_created_on,lock_key,profile_key)
VALUES(dkt_num_key,dkt_num,tkt_date,cust_key,t_location_key,dkt_type_key,'A',tkt_dkt_pax,pnr_number,lpo,lpo_date,0,0,0,0,0,'Not Collected',user_created_key,CURRENT_TIMESTAMP,0,user_profile_key) ; 

   ELSEIF p_service_type IS NOT NULL  AND t_location_key IS NOT NULL AND src_agent_key IS NOT NULL AND v_conf_number_chk IS NULL THEN

     OPEN walk_brnch_cust_cursor;
     FETCH walk_brnch_cust_cursor INTO walk_cust_key,walk_cust_code;
     CLOSE walk_brnch_cust_cursor;
     IF walk_cust_key IS NULL THEN
      OPEN walk_customer_cursor;
      FETCH walk_customer_cursor INTO walk_cust_key,walk_cust_code;
      CLOSE walk_customer_cursor;    
     END IF;

    INSERT INTO t_id_tvl_docket_header (dkt_number,dkt_date,dkt_partner_key,dkt_branch_key,dkt_doc_type_key,dkt_status,
	 dkt_lead_pax_name,dkt_client_reference,dkt_transaction_reference,dkt_lpo_number,dkt_lpo_date,dkt_created_by,dkt_created_on,lock_key,profile_key) 
    VALUES(dkt_num,tkt_date,walk_cust_key,t_location_key,dkt_type_key,'A',
	 tkt_dkt_pax,NULL,pnr_number,lpo,lpo_date,user_created_key,CURRENT_TIMESTAMP,0,user_profile_key) ;   
 	  UPDATE t_id_num_gen_table SET flag = 1 WHERE num_gen = dkt_num;

 	   select dkt_key into dkt_num_key from t_id_tvl_docket_header where dkt_number = dkt_num;

     INSERT INTO t_id_tvl_docket_header_summary (dkt_key,dkt_number,dkt_date,dkt_partner_key,dkt_branch_key,dkt_doc_type_key,dkt_status,dkt_lead_pax_name,
dkt_transaction_reference,dkt_lpo_number,dkt_lpo_date,dkt_air_count,dkt_htl_count,
dkt_car_count,dkt_misc_count,dkt_awb_count,dkt_account_status,
dkt_created_by,dkt_created_on,lock_key,profile_key)
VALUES(dkt_num_key,dkt_num,tkt_date,walk_cust_key,t_location_key,dkt_type_key,'A',tkt_dkt_pax,pnr_number,lpo,lpo_date,0,0,0,0,0,'Not Collected',user_created_key,CURRENT_TIMESTAMP,0,user_profile_key) ; 

   END IF;
   END IF;
	
	 OPEN dkt_head_sumry_cursor;
    FETCH dkt_head_sumry_cursor INTO dkt_sum_key,dkt_acc_status,dkt_hotel_cnt;
    CLOSE dkt_head_sumry_cursor; 

	SET v_locint_f	=  NULL;
	SET v_locint_t	=  NULL;

    SET DONE = FALSE;
	
 INSERT INTO ID_KK_TEST(COL1,COL2) VALUES (701009,art_serial);	

	  OPEN  ama_i_pax_cursor;
     FETCH ama_i_pax_cursor INTO tkt_pax;
     CLOSE ama_i_pax_cursor;  
	 
	 
 INSERT INTO ID_KK_TEST(COL1,COL2) VALUES (701010,tkt_pax);	

	 IF tkt_pax IS NOT NULL THEN
	  SET tkt_pax_name = tkt_pax;
	 END IF; 

    OPEN  inter_domestic_key_cursor;
    FETCH inter_domestic_key_cursor INTO inter_domestic_key;
    CLOSE inter_domestic_key_cursor; 
	

 INSERT INTO ID_KK_TEST(COL1,COL2) VALUES (7017,inter_domestic_key);	

    OPEN  service_type_key_cursor;
    FETCH service_type_key_cursor INTO service_type_key;
    CLOSE service_type_key_cursor;

   SET procss_typ = 'NORMAL';    
   OPEN process_type_cursor;
   FETCH process_type_cursor INTO procss_typ_key;
   CLOSE process_type_cursor; 

    SELECT dkt_key INTO @dkt_key_no FROM t_id_tvl_docket_header WHERE dkt_number=DKT_NUM;  

  SET p_cursor = CONCAT(p_service_type,t_agent_key,t_location_key);  

 INSERT INTO ID_KK_TEST(COL1,COL2) VALUES (7010,tkt_pax_name);
 INSERT INTO ID_KK_TEST(COL1,COL2) VALUES (7011,p_service_type);
 
 INSERT INTO ID_KK_TEST(COL1,COL2) VALUES (7012,t_location_key);
 
 INSERT INTO ID_KK_TEST(COL1,COL2) VALUES (7013,v_conf_number_chk);
 
 INSERT INTO ID_KK_TEST(COL1,COL2) VALUES (7014,v_chain_key);
 
 
 INSERT INTO ID_KK_TEST(COL1,COL2) VALUES (7015,v_id_value);
 
 CALL PRC_DOC_NUMBER_GEN_REPEAT(DATE(tkt_date),'HTLV',user_comp_profile_key);

SELECT num_gen INTO p_tkt_number FROM t_id_num_gen_table WHERE doc_code = 'HTLV' AND MONTH(doc_gen_date) = MONTH(tkt_date) 
 AND flag=0 ORDER BY num_gen ASC LIMIT 1;	

 INSERT INTO ID_KK_TEST(COL1,COL2) VALUES (788815,p_tkt_number);

IF p_service_type IS NOT NULL  AND t_location_key IS NOT NULL AND v_conf_number_chk IS NULL  AND p_tkt_number is not null THEN
INSERT INTO ID_KK_TEST(COL1,COL2) VALUES (1,CONCAT(dkt_num,' -DKT_NO')); 
SET p_cursor = 't_id_tvl_hotel_voucher_details';



if dkt_value = 'Inbound' THEN 
SET inter_domestic = 'I';
ELSE 
SET inter_domestic = 'D';
END IF; 
	
 INSERT INTO t_id_tvl_hotel_voucher_details (
hvd_docket_key,hvd_product_key,hvd_voucher_number,hvd_voucher_status,
hvd_date,hvd_trans_type,hvd_account_status,hvd_provider_key,
hvd_location_key,hvd_branch_key,hvd_city_key,hvd_hotel_name,
hvd_hotel_chain_key,hvd_issue_place,hvd_inbound_outbound,hvd_lead_pax_name,hvd_room_type_key,
hvd_room_basis_key,hvd_adult,hvd_child,hvd_infant,
hvd_check_in,hvd_check_out,hvd_no_of_nights,hvd_no_of_rooms,
hvd_rate,hvd_lpo_number,hvd_lpo_date,hvd_booking_pcc,
hvd_booking_date,hvd_issuing_pcc,hvd_booking_user_key,hvd_handling_user_key,
hvd_issuing_user_key,hvd_sales_executive_key,hvd_source_agent,hvd_hotel_property_code,hvd_confirmation_number,
hvd_booking_reference,hvd_rate_access_code,hvd_net_collection,hvd_payable_collection,
active_status,lock_key,profile_key,created_by,
created_on,hvd_flex_1
) 
 VALUES
(@dkt_key_no,tkt_prd_key,p_tkt_number,'S',
tkt_date,331,'N',src_agent_key,
t_location_key,t_location_key,v_city_code_key,v_hotel_name,
v_chain_key,v_hotel_city,v_id_value,tkt_pax_name,ifnull(v_room_type_key,1),
IFNULL(room_basis_key,'NULL'),1,0,0,
v_check_in_date,v_check_out_date,v_no_of_nights,v_no_of_rooms,
toatal_l_rate,lpo,lpo_date,ticket_clerk_key,
tkt_date,book_clerk_key,ifnull(book_clerk_key,ticket_clerk_key),ticket_clerk_key,
ifnull(ticket_clerk_key,book_clerk_key),ticket_clerk_key,src_agent_key,IFNULL(property_code,NULL),v_conf_number,
pnr_number,v_rate_plan,0,0,
'A',0,user_profile_key,ticket_clerk_key,
CURRENT_TIMESTAMP,'AMADEUS_HTL');

 	UPDATE t_id_num_gen_table SET flag = 1 WHERE num_gen = p_tkt_number;

    SET tot_tax = 0;
    SET tot_tax = tax_d + tax_1 + tax_2;

    SELECT hvd_key INTO @tkt_key FROM t_id_tvl_hotel_voucher_details  WHERE  hvd_voucher_number = p_tkt_number AND hvd_voucher_status = 'S'
    AND hvd_provider_key = src_agent_key ORDER BY hvd_key LIMIT 1;




    IF P_TKT_KEY IS  NULL THEN
      SET P_TKT_KEY = @tkt_key;
    ELSE
      SET P_TKT_KEY = CONCAT(P_TKT_KEY,':',@tkt_key);
    END IF;

   SET p_cursor    =   'default_service_fee_cursor';    
   SET total_serv_amount = 0;   
	SET DONE = FALSE; 

   IF cust_code IS NOT NULL THEN
    OPEN cust_service_fee_check;
    FETCH cust_service_fee_check INTO cust_serv;
    CLOSE cust_service_fee_check;
   END IF; 
   END IF;

INSERT INTO ID_KK_TEST(COL1,COL2) VALUES ('1324',P_TKT_KEY);
INSERT INTO ID_KK_TEST(COL1,COL2) VALUES ('134',@tkt_key);
SET DONE = FALSE;
   OPEN GDS_File_Service_Cursor;
   GDS_File_Service_Cursor: LOOP
   FETCH GDS_File_Service_Cursor INTO srv_fee_code,srv_file_code;
    IF DONE THEN
      LEAVE GDS_File_Service_Cursor;
    END IF; 
	
	
	
   INSERT INTO ID_KK_TEST(COL1,COL2) VALUES ('8881',concat('srv_fee_code',' ',srv_fee_code));
   INSERT INTO ID_KK_TEST(COL1,COL2) VALUES ('8882',concat('srv_file_code',' ',srv_file_code));
   
   SET p_cursor    =  'file_service_fee_cursor';   
   SET service_id = NULL;
   SET p_udid_code = NULL;
   SET file_serv_amount = 0;
   SET file_serv_amnt = NULL;
   SET p_udid_code = srv_file_code;
   
   
	 SET p_cursor    =   'air_udid_values_2';
           OPEN  SRV_FEE_CHECK_CURSOR;
  	 FETCH SRV_FEE_CHECK_CURSOR INTO srv_fee_chk;
  	 CLOSE SRV_FEE_CHECK_CURSOR;
   
   IF IFNULL(srv_fee_chk,'N')= 'Y' THEN 
   IF p_udid_code IS NOT NULL AND p_serial_key is not null THEN
  	 OPEN air_udid_values_2;
  	 FETCH air_udid_values_2 INTO file_serv_amnt;
  	 CLOSE air_udid_values_2;
	ELSEIF p_udid_code IS NOT NULL THEN
	  OPEN air_udid_values_4;
  	 FETCH air_udid_values_4 INTO file_serv_amnt;
  	 CLOSE air_udid_values_4;
   END IF;
   SET file_serv_amnt=LTRIM(RTRIM(REPLACE(file_serv_amnt,'/','')));
   
   SET file_serv_amnt=LTRIM(RTRIM(REPLACE(file_serv_amnt,'-','')));
   SET file_serv_amount = CAST(file_serv_amnt AS DECIMAL(18,4));
   
   INSERT INTO ID_KK_TEST(COL1,COL2) VALUES ('8883',concat('file_serv_amount',' ',file_serv_amount));
   INSERT INTO ID_KK_TEST(COL1,COL2) VALUES ('88800',concat('srv_fee_code',' ',srv_fee_code));
   
   
	 SET p_cursor    =   'file_service_fee_cursor';
   
   OPEN file_service_fee_cursor;
   FETCH file_service_fee_cursor INTO service_id,service_key,service_name;
   CLOSE file_service_fee_cursor;
   
   
   INSERT INTO ID_KK_TEST(COL1,COL2) VALUES ('8884',concat('service_id',' ',service_id));
   
   INSERT INTO ID_KK_TEST(COL1,COL2) VALUES ('8884',concat('service_id',' ',@service_id));
   
   INSERT INTO ID_KK_TEST(COL1,COL2) VALUES ('8885',concat('service_key',' ',service_key));
   
   IF service_id IS NOT NULL AND file_serv_amount > 0 THEN
    
	 SET p_cursor    =   't_id_tvl_service_charges_details';    
      
      INSERT INTO t_id_tvl_service_charges_details (
  		tsc_docket_key,tsc_product_key,tsc_ticket_key,tsc_service_charge_id,tsc_charge_key,tsc_parent_key,
  		tsc_currency_key,tsc_ex_rate,tsc_base_amount,tsc_local_amount,tsc_type,tsc_payback_parner_key,tsc_payback_on,
  		tsc_payback_percent,tsc_tax_code,tsc_tax_percentage,tsc_tax_on_amount,tsc_tax_on_component,lock_key,profile_key) 
 		VALUES
  		( @dkt_key_no,tkt_prd_key,@tkt_key,service_id,service_key,NULL,
    	'1',1,file_serv_amount,file_serv_amount,'C',NULL,0,
    	NULL,NULL,NULL,NULL,NULL,0,user_profile_key) ;
		
     	SET total_serv_amount = IFNULL(total_serv_amount,0) + IFNULL(file_serv_amount,0);
     
     	SELECT tsc_key INTO @tkt_srv_key FROM t_id_tvl_service_charges_details WHERE tsc_ticket_key = @tkt_key AND 
     	tsc_charge_key = service_key AND tsc_service_charge_id = service_id AND tsc_docket_key = @dkt_key_no  ORDER BY tsc_key DESC;
     
    	SET vat_applied_on = 'S';
         
      IF cust_exempt_status = 'Y' THEN
	  	 OPEN vat_exempt_cursor;
         FETCH vat_exempt_cursor INTO srv_vat_code,srv_vat_description,srv_inclusive_exclusive_code,srv_collection_code,srv_io_type_code,srv_appliedon_value,srv_vat_percentage;
         CLOSE vat_exempt_cursor;
      ELSE
         OPEN vat_master_cursor;
         FETCH vat_master_cursor INTO srv_vat_code,srv_vat_description,srv_inclusive_exclusive_code,srv_collection_code,srv_io_type_code,srv_appliedon_value,srv_vat_percentage;
         CLOSE vat_master_cursor;
       END IF;
         
       SET srv_vat_amt = (IFNULL(file_serv_amount,0) * srv_vat_percentage)/100;
           
       IF  srv_vat_amt <> 0 THEN                          
         INSERT INTO t_id_tvl_vat_charge_details (
	 		tvc_docket_key,  tvc_product_key,  tvc_ticket_key,  tvc_parent_key,  tvc_vat_code,  tvc_appliedon_value,
	 		tvc_inclusive_exclsive_code,  tvc_collection_code,  tvc_inoutput_code,  tvc_percentage,  tvc_amount,  tvc_on_amount,tvc_sys_amount,
	 		lock_key,  profile_key ) 
	 		VALUES(
			@dkt_key_no,tkt_prd_key,@tkt_key,@tkt_srv_key,srv_vat_code,srv_appliedon_value,
		   srv_inclusive_exclusive_code,srv_collection_code,srv_io_type_code,srv_vat_percentage,srv_vat_amt,IFNULL(file_serv_amount,0),
	 		IFNULL(file_serv_amount,0),0,user_profile_key) ;  
        END IF;    
   END IF;
   END IF;
    SET DONE = FALSE;
    END LOOP GDS_File_Service_Cursor;
   CLOSE GDS_File_Service_Cursor; 


	SET collect_amount = CONVERT((IFNULL(tkt_card_amount,0) + IFNULL(cust_amt,0) + IFNULL(cash_amount,0) + IFNULL(total_serv_amount,0) + IFNULL(@tot_vat_amt,0)) , DECIMAL(18,4));
	
    SET p_cursor    =   't_id_tvl_fare_details';   


    SET pub_fare = ROUND(pub_fare,4);
    SET sell_fare = ROUND(sell_fare,4);
INSERT INTO ID_KK_TEST(COL1,COL2) VALUES ('6003',CONCAT('COLLAMT',' ',collect_amount));	
INSERT INTO ID_KK_TEST(COL1,COL2) VALUES ('6001',CONCAT('PUBFARE',' ',pub_fare));
INSERT INTO ID_KK_TEST(COL1,COL2) VALUES ('6002',CONCAT('SELFARE',' ' ,sell_fare));
INSERT INTO ID_KK_TEST(COL1,COL2) VALUES ('6004',CONCAT('TKTCURN',' ',tkt_curr_key));	
INSERT INTO ID_KK_TEST(COL1,COL2) VALUES ('6005',CONCAT('ex_rate',' ',ex_rate));
 INSERT INTO ID_KK_TEST(COL1,COL2) VALUES ('4005', CONCAT('tfd_settle_amount-collect_amount',' ',collect_amount));

SET p_cursor = 't_id_tvl_fare_details_1';

    INSERT INTO t_id_tvl_fare_details (
	tfd_docket_key,tfd_product_key,tfd_ticket_key,tfd_process_type,tfd_own_lodge_card_key,tfd_base_fare,tfd_deal_fare,tfd_total_tax,tfd_total_service_charge,
	tfd_comm_key1,tfd_comm_percent_1,tfd_comm_on_1,tfd_comm_amount_1,tfd_comm_key2,tfd_comm_percent_2,tfd_comm_on_2,tfd_comm_amount_2,
	tfd_disc_key1,tfd_disc_percent_1,tfd_disc_on_1,tfd_disc_amount_1,tfd_disc_percent_2,tfd_disc_on_2,tfd_disc_amount_2,
	tfd_cash_disc,tfd_settle_amount,tfd_tour_code,tfd_nego_fare,tfd_priv_fare,
	tfd_prom_fare,tfd_trans_currency_key,tfd_ex_rate,tfd_deal_code,tfd_incentive_paid,
	tfd_high_fare,tfd_low_fare,tfd_reason_code,tfd_base_fare_new,tfd_deal_fare_new,
	tfd_comm_percent_1_new,tfd_comm_on_1_new,tfd_comm_amount_1_new,
	tfd_comm_percent_2_new,tfd_comm_on_2_new,tfd_comm_amount_2_new,
	lock_key,profile_key) 
	VALUES
	(
    @dkt_key_no,tkt_prd_key,@tkt_key,procss_typ_key,NULL,pub_fare,sell_fare,ROUND(tot_tax,4),0,
    0,tkt_comm,sell_fare,tkt_comm_amt,0,0,
    sell_fare,0,0,0,pub_fare,0,
    0,pub_fare,0,
    0,ROUND(collect_amount,4),NULL,0,0,0,
    tkt_curr_key,ex_rate,rsn_code_key,0,0,
    0,NULL,pub_fare,sell_fare,
    tkt_comm,sell_fare,tkt_comm_amt,
    0,sell_fare,0,
    0,user_profile_key) ; 

     SELECT   tfd_key INTO @tkt_fare_key FROM t_id_tvl_fare_details 
     WHERE tfd_docket_key = @dkt_key_no AND tfd_product_key = tkt_prd_key AND tfd_ticket_key = @tkt_key ORDER BY tfd_key desc limit 1 ;  
	 
INSERT INTO ID_KK_TEST(COL1,COL2) VALUES ('132',CONCAT('FRE_KEY',' ',@tkt_fare_key));    

    SET DONE = FALSE; 
    SET p_cursor    =   'vat_cursor_main';	 
	
	 
if dkt_value = 'Inbound' THEN 
SET inter_domestic = 'I';
ELSE 
SET inter_domestic = 'D';
END IF;

	INSERT INTO ID_KK_TEST(COL1,COL2) VALUES ('8004',inter_domestic);

 IF cust_exempt_status = 'Y'  AND inter_domestic = 'D' THEN
   SET p_cursor    =   'vat_exempt_cursor_main';
     OPEN vat_exempt_cursor_main;
      vat_exempt_cursor_main: LOOP
     FETCH vat_exempt_cursor_main INTO v_applied_on_code,v_applied_on_value,v_inter_domestic_key,v_product_type,v_package_normal_key,
	v_output_input_type_key,v_percentage,v_applicable_on,v_applied_on_key,v_vat_code,v_vat_description,v_inclusive_exclusive_key,v_inclusive_exclusive_code,
	v_inclusive_exclusive_value,v_collection_type_key,v_collection_code,v_io_type_code,v_io_type_value;
      IF DONE THEN
       LEAVE vat_exempt_cursor_main;
      END IF;   

	INSERT INTO ID_KK_TEST(COL1,COL2) VALUES ('6ex',f_vat);
	
	INSERT INTO ID_KK_TEST(COL1,COL2) VALUES ('8001ex',sell_fare);
	
	INSERT INTO ID_KK_TEST(COL1,COL2) VALUES ('135ex',v_percentage);


	 IF v_applied_on_code = 'F' AND f_vat<=1 THEN 
		SET vat_on_amt = sell_fare;
		SET vat_amt = (sell_fare * v_percentage)/100;
		SET f_vat = f_vat + 1;
     ELSEIF v_applied_on_code = 'X' AND x_vat<=1  THEN
		SET vat_on_amt = canc_amt;
		SET vat_amt = (canc_amt * v_percentage)/100;
		SET x_vat = x_vat + 1;
     ELSEIF v_applied_on_code = 'C' AND c_vat<1  THEN
		SET vat_on_amt = comm_amt;
		SET vat_amt = (comm_amt * v_percentage)/100;
		SET c_vat = c_vat + 1;
     ELSEIF v_applied_on_code = 'D' AND d_vat<1  THEN
		SET vat_on_amt = disc_amt;
		SET vat_amt = (disc_amt * v_percentage)/100;
		SET d_vat = d_vat + 1;
     END IF;

	INSERT INTO ID_KK_TEST(COL1,COL2) VALUES ('7',vat_on_amt);
	INSERT INTO ID_KK_TEST(COL1,COL2) VALUES ('8',vat_amt);	
	INSERT INTO ID_KK_TEST(COL1,COL2) VALUES ('9',f_vat);	   

      IF vat_amt <> 0 THEN 
       INSERT INTO t_id_tvl_vat_charge_details (
        tvc_docket_key,  tvc_product_key,  tvc_ticket_key,  tvc_parent_key,  tvc_vat_code,  tvc_appliedon_value,
        tvc_inclusive_exclsive_code,  tvc_collection_code,  tvc_inoutput_code,  tvc_percentage,  tvc_amount,  tvc_on_amount,tvc_sys_amount,
        lock_key,  profile_key ) 
       VALUES
        (@dkt_key_no,tkt_prd_key,@tkt_key,@tkt_fare_key,v_vat_code,v_applied_on_value,
	v_inclusive_exclusive_code,v_collection_code,v_io_type_code,v_percentage,vat_amt,vat_on_amt,vat_amt,
	0,user_profile_key) ;
	END IF;

      	SET vat_on_amt = 0;
	SET vat_amt = 0;
     END LOOP vat_exempt_cursor_main;
     CLOSE vat_exempt_cursor_main;
   ELSE

	INSERT INTO ID_KK_TEST(COL1,COL2) VALUES ('10',prcss_code );
	INSERT INTO ID_KK_TEST(COL1,COL2) VALUES ('11',inter_domestic);

   SET p_cursor    =   'vat_master_cursor_main';
     OPEN vat_master_cursor_main;
      vat_master_cursor_main: LOOP
     FETCH vat_master_cursor_main INTO v_applied_on_code,v_applied_on_value,v_inter_domestic_key,v_product_type,v_package_normal_key,
	v_output_input_type_key,v_percentage,v_applicable_on,v_applied_on_key,v_vat_code,v_vat_description,v_inclusive_exclusive_key,v_inclusive_exclusive_code,
	v_inclusive_exclusive_value,v_collection_type_key,v_collection_code,v_io_type_code,v_io_type_value;
      IF DONE THEN
       LEAVE vat_master_cursor_main;
      END IF;
    INSERT INTO ID_KK_TEST(COL1,COL2) VALUES ('8001',sell_fare);
	INSERT INTO ID_KK_TEST(COL1,COL2) VALUES ('7001',v_percentage);
	INSERT INTO ID_KK_TEST(COL1,COL2) VALUES ('12',f_vat);

     IF v_applied_on_code = 'F' AND f_vat<=1 THEN 
        SET vat_on_amt = sell_fare;
		SET vat_amt = (sell_fare * v_percentage)/100;
		SET f_vat = f_vat + 1;
     ELSEIF v_applied_on_code = 'X' AND x_vat<=1  THEN
		SET vat_on_amt = canc_amt;
		SET vat_amt = (canc_amt * v_percentage)/100;
		SET x_vat = x_vat + 1;
     ELSEIF v_applied_on_code = 'C' AND c_vat<1  THEN
		SET vat_on_amt = comm_amt;
		SET vat_amt = (comm_amt * v_percentage)/100;
		SET c_vat = c_vat + 1;
     ELSEIF v_applied_on_code = 'D' AND d_vat<1  THEN
		SET vat_on_amt = disc_amt;
		SET vat_amt = (disc_amt * v_percentage)/100;
		SET d_vat = d_vat + 1;
     END IF;


	INSERT INTO ID_KK_TEST(COL1,COL2) VALUES ('13',vat_on_amt);
	INSERT INTO ID_KK_TEST(COL1,COL2) VALUES ('14',vat_amt);	
	INSERT INTO ID_KK_TEST(COL1,COL2) VALUES ('15',f_vat);	 

      IF vat_amt <> 0 AND inter_domestic = 'D'THEN 
       INSERT INTO t_id_tvl_vat_charge_details (
        tvc_docket_key,  tvc_product_key,  tvc_ticket_key,  tvc_parent_key,  tvc_vat_code,  tvc_appliedon_value,
        tvc_inclusive_exclsive_code,  tvc_collection_code,  tvc_inoutput_code,  tvc_percentage,  tvc_amount,  tvc_on_amount,tvc_sys_amount,
        lock_key,  profile_key ) 
       VALUES
        (@dkt_key_no,tkt_prd_key,@tkt_key,@tkt_fare_key,v_vat_code,v_applied_on_value,
	v_inclusive_exclusive_code,v_collection_code,v_io_type_code,v_percentage,vat_amt,vat_on_amt,vat_amt,
	0,user_profile_key) ;
	END IF;

INSERT INTO ID_KK_TEST(COL1,COL2) VALUES ('131',tkt_key);
	

      	SET vat_on_amt = 0;
	SET vat_amt = 0;
     END LOOP vat_master_cursor_main;
     CLOSE vat_master_cursor_main;
   END IF;

  SET DONE = FALSE;
  SET p_cursor = 't_id_tvl_service_charges_details'; 	

SET tot_vat_amt = 0 ;
 IF v_tax_k7_amt > 0 THEN

  SELECT SUM(IFNULL(tvc_amount,0)) INTO @v_k7_srv_amt FROM t_id_tvl_vat_charge_details 
  WHERE tvc_appliedon_value='Service Fee' AND  tvc_ticket_key=@TKT_KEY AND tvc_docket_key =  @dkt_key_no 
  AND tvc_ticket_key = tkt_prd_key;
  
  INSERT INTO ID_KK_TEST(COL1,COL2) VALUES ('132',tkt_key);

  INSERT INTO t_id_tvl_service_charges_details (
  tsc_docket_key,tsc_product_key,tsc_ticket_key,tsc_service_charge_id,tsc_charge_key,tsc_parent_key,
  tsc_currency_key,tsc_ex_rate,tsc_base_amount,tsc_local_amount,tsc_type,tsc_payback_parner_key,tsc_payback_on,
  tsc_payback_percent,tsc_tax_code,tsc_tax_percentage,tsc_tax_on_amount,tsc_tax_on_component,lock_key,profile_key) 
  VALUES
  ( @dkt_key_no,tkt_prd_key,@tkt_key,NULL,NULL,NULL,
    '1',1,IFNULL(v_tax_k7_amt,0) + IFNULL(v_k7_srv_amt,0) ,IFNULL(v_tax_k7_amt,0) + IFNULL(v_k7_srv_amt,0),'C',NULL,0,
    NULL,NULL,NULL,NULL,NULL,0,user_profile_key) ;

  INSERT INTO t_id_tvl_service_charges_details (
  tsc_docket_key,tsc_product_key,tsc_ticket_key,tsc_service_charge_id,tsc_charge_key,tsc_parent_key,
  tsc_currency_key,tsc_ex_rate,tsc_base_amount,tsc_local_amount,tsc_type,tsc_payback_parner_key,tsc_payback_on,
  tsc_payback_percent,tsc_tax_code,tsc_tax_percentage,tsc_tax_on_amount,tsc_tax_on_component,lock_key,profile_key) 
  VALUES
  ( @dkt_key_no,tkt_prd_key,@tkt_key,NULL,NULL,NULL,
    '1',1,IFNULL(v_tax_k7_amt,0),IFNULL(v_tax_k7_amt,0),'S',NULL,0,
    NULL,NULL,NULL,NULL,NULL,0,user_profile_key) ; 
 SET tot_vat_amt = IFNULL(v_tax_k7_amt,0) + IFNULL(v_k7_srv_amt,0);
 ELSE

 OPEN vat_in_out_cursor;
 vat_in_out_cursor : LOOP 
 FETCH vat_in_out_cursor INTO vat_in_out,vat_tot_amount;
  IF DONE THEN
    LEAVE vat_in_out_cursor;
  END IF;
 INSERT INTO `t_id_tvl_service_charges_details` (
  tsc_docket_key,tsc_product_key,tsc_ticket_key,tsc_service_charge_id,tsc_charge_key,tsc_parent_key,
  tsc_currency_key,tsc_ex_rate,tsc_base_amount,tsc_local_amount,tsc_type,tsc_payback_parner_key,tsc_payback_on,
  tsc_payback_percent,tsc_tax_code,tsc_tax_percentage,tsc_tax_on_amount,tsc_tax_on_component,lock_key,profile_key) 
 VALUES
  ( @dkt_key_no,tkt_prd_key,@tkt_key,NULL,NULL,NULL,
    '1',1,vat_tot_amount,vat_tot_amount,(CASE vat_in_out WHEN 'I' THEN 'C' ELSE 'S' END),NULL,0,
    NULL,NULL,NULL,NULL,NULL,0,user_profile_key) ;
    SET DONE = FALSE;
    END LOOP vat_in_out_cursor;
    CLOSE vat_in_out_cursor;
  END IF;  
  
  INSERT INTO ID_KK_TEST(COL1,COL2) VALUES ('136',@tkt_key);  
  
     SELECT SUM(IFNULL(tvc_amount,0)) INTO @tot_vat_amt FROM t_id_tvl_vat_charge_details 
     WHERE tvc_docket_key = @dkt_key_no AND tvc_ticket_key = @tkt_key AND tvc_product_key = tkt_prd_key AND tvc_collection_code = 'C';

    SET collect_amount = CONVERT((IFNULL(tkt_card_amount,0) + IFNULL(cust_amt,0) + IFNULL(cash_amount,0) + IFNULL(total_serv_amount,0) + IFNULL(@tot_vat_amt,0)) , DECIMAL(18,4));
	
INSERT INTO ID_KK_TEST(COL1,COL2) VALUES ('6006',CONCAT('collect_amount',collect_amount));

    UPDATE t_id_tvl_fare_details SET tfd_settle_amount = collect_amount,tfd_total_service_charge = IFNULL(total_serv_amount,0)
     WHERE tfd_docket_key = @dkt_key_no AND tfd_product_key = tkt_prd_key AND tfd_ticket_key = @tkt_key ;


INSERT INTO ID_KK_TEST(COL1,COL2) VALUES ('6006',CONCAT('tfd_settle_amount',collect_amount));
INSERT INTO ID_KK_TEST(COL1,COL2) VALUES ('133',CONCAT('tkt_key',' ',@tkt_key));

     SET p_cursor    =   't_id_tvl_fop_details'; 

     SET trans_amount = 0;
     SET fd_local_amt = 0;
     SET FOP_VALUE = NULL;
     SET fop_settle_key = NULL;  

  IF sett_mode IN ('1','4','5','7') THEN
      SET trans_amount = IFNULL(cash_amount,0) + IFNULL(total_serv_amount,0) + IFNULL(@tot_vat_amt,0);
      SET fd_local_amt  = trans_amount * ex_rate;
      SET FOP_VALUE = 'CASH';
      OPEN fop_settlement_cursor;
      FETCH fop_settlement_cursor INTO fop_settle_key;
      CLOSE fop_settlement_cursor;

       INSERT INTO t_id_tvl_fop_details (
	fopd_docket_key,fopd_produt_key,fopd_ticket_key,fopd_settle_key,fopd_currency_key,fopd_ex_rate,fopd_trans_amount,
	fopd_local_amount,fopd_remarks,fopd_voucher_key,lock_key,profile_key) 
       VALUES  (
        @dkt_key_no,tkt_prd_key,@tkt_key,fop_settle_key,tkt_curr_key,ex_rate,ROUND(trans_amount,4),
        ROUND(fd_local_amt,4),NULL,0,0,user_profile_key) ;   

         SELECT fopd_key INTO @tkt_fopd_key FROM `t_id_tvl_fop_details` WHERE fopd_ticket_key = @tkt_key AND
    fopd_produt_key = tkt_prd_key AND fopd_docket_key = @dkt_key_no AND fopd_settle_key = 1 limit 1;

      SET  definition_code = 'fbbranch';
      OPEN fop_more_details_cursor;
      FETCH fop_more_details_cursor INTO fop_def_key;
      CLOSE fop_more_details_cursor;    

      INSERT INTO t_id_tvl_fop_more_details(fopmd_fopd_key,fopmd_order,fopmd_definition_key,fopmd_value_key,fopmd_value_code,fopmd_value_description,fopmd_value_date,lock_key,profile_key)
  VALUES(@tkt_fopd_key,1,fop_def_key,t_location_key,pcc_loc,NULL,NULL,0,user_profile_key);        

     END IF;

     SET trans_amount = 0;
     SET fd_local_amt = 0;
     SET FOP_VALUE = NULL;
     SET fop_settle_key = NULL;	 

   IF sett_mode IN ('2','4','6','7') THEN
       SET trans_amount = IFNULL(cust_amt,0) + IFNULL(total_serv_amount,0) + IFNULL(@tot_vat_amt,0);
       SET fd_local_amt  = trans_amount * ex_rate;
       SET FOP_VALUE = 'CREDIT';

      OPEN fop_settlement_cursor;
      FETCH fop_settlement_cursor INTO fop_settle_key;
      CLOSE fop_settlement_cursor;
      INSERT INTO t_id_tvl_fop_details (
	fopd_docket_key,fopd_produt_key,fopd_ticket_key,fopd_settle_key,fopd_customer_key,fopd_currency_key,fopd_ex_rate,fopd_trans_amount,
	fopd_local_amount,fopd_remarks,fopd_voucher_key,lock_key,profile_key) 
      VALUES  (
       @dkt_key_no,tkt_prd_key,@tkt_key,fop_settle_key,cust_key,tkt_curr_key,ex_rate,ROUND(trans_amount,4),
       ROUND(fd_local_amt,4),NULL,0,0,user_profile_key) ;     

      SELECT fopd_key INTO @tkt_fopd_key FROM `t_id_tvl_fop_details` WHERE fopd_ticket_key = @tkt_key AND
    fopd_produt_key = tkt_prd_key AND fopd_docket_key = @dkt_key_no AND fopd_settle_key = 2;       

      SET  definition_code = 'fbpcode';
     OPEN fop_more_details_cursor;
     FETCH fop_more_details_cursor INTO fop_def_key;
     CLOSE fop_more_details_cursor;    

      INSERT INTO t_id_tvl_fop_more_details(fopmd_fopd_key,fopmd_order,fopmd_definition_key,fopmd_value_key,fopmd_value_code,fopmd_value_description,fopmd_value_date,lock_key,profile_key)
		VALUES(@tkt_fopd_key,1,fop_def_key,cust_key,cust_code,NULL,NULL,0,user_profile_key); 

     SET  definition_code = 'flpnum';
     OPEN fop_more_details_cursor;
     FETCH fop_more_details_cursor INTO fop_def_key;
     CLOSE fop_more_details_cursor;    

      INSERT INTO t_id_tvl_fop_more_details(fopmd_fopd_key,fopmd_order,fopmd_definition_key,fopmd_value_key,fopmd_value_code,fopmd_value_description,fopmd_value_date,lock_key,profile_key)
  VALUES(@tkt_fopd_key,2,fop_def_key,NULL,NULL,lpo,NULL,0,user_profile_key); 

     SET  definition_code = 'flpdate';
     OPEN fop_more_details_cursor;
     FETCH fop_more_details_cursor INTO fop_def_key;
     CLOSE fop_more_details_cursor;    

      INSERT INTO t_id_tvl_fop_more_details(fopmd_fopd_key,fopmd_order,fopmd_definition_key,fopmd_value_key,fopmd_value_code,fopmd_value_description,fopmd_value_date,lock_key,profile_key)
		VALUES(@tkt_fopd_key,3,fop_def_key,NULL,NULL,NULL,lpo_date,0,user_profile_key);  
     END IF;	 

    SET trans_amount = 0;
     SET fd_local_amt = 0;
     SET FOP_VALUE = NULL;
     SET fop_settle_key = NULL;

     IF sett_mode IN('3','5','6','7') THEN
       SET trans_amount = IFNULL(tkt_card_amount,0) + IFNULL(total_serv_amount,0) + IFNULL(@tot_vat_amt,0);
       SET fd_local_amt  = trans_amount * ex_rate;
       SET FOP_VALUE = 'CARD';


       OPEN fop_settlement_cursor;
       FETCH fop_settlement_cursor INTO fop_settle_key;
       CLOSE fop_settlement_cursor;

       INSERT INTO t_id_tvl_fop_details (
	 fopd_docket_key,fopd_produt_key,fopd_ticket_key,fopd_settle_key,fopd_currency_key,fopd_ex_rate,fopd_trans_amount,
	 fopd_local_amount,fopd_remarks,fopd_voucher_key,lock_key,profile_key) 
       VALUES  (
         @dkt_key_no,tkt_prd_key,@tkt_key,fop_settle_key,tkt_curr_key,ex_rate,ROUND(trans_amount,4),
         ROUND(fd_local_amt,4),NULL,0,0,user_profile_key) ;     

         SELECT fopd_key INTO @tkt_fopd_key FROM `t_id_tvl_fop_details` WHERE fopd_ticket_key = @tkt_key AND
    fopd_produt_key = tkt_prd_key AND fopd_docket_key = @dkt_key_no AND fopd_settle_key = 3;

        IF P_FOP_KEY IS NULL THEN
         SET P_FOP_KEY = @tkt_fopd_key;
        ELSE
         SET P_FOP_KEY = CONCAT(P_FOP_KEY,':',@tkt_fopd_key);
        END IF;


     SET  definition_code = 'fcardtype';
     OPEN fop_more_details_cursor;
     FETCH fop_more_details_cursor INTO fop_def_key;
     CLOSE fop_more_details_cursor;    

      INSERT INTO t_id_tvl_fop_more_details(fopmd_fopd_key,fopmd_order,fopmd_definition_key,fopmd_value_key,fopmd_value_code,fopmd_value_description,fopmd_value_date,lock_key,profile_key)
		VALUES(@tkt_fopd_key,1,fop_def_key,card_key,card_type,NULL,NULL,0,user_profile_key); 

     SET  definition_code = 'fcardnum';
     OPEN fop_more_details_cursor;
     FETCH fop_more_details_cursor INTO fop_def_key;
     CLOSE fop_more_details_cursor;   

	  SET tkt_card_number = LTRIM(RTRIM(tkt_card_number));

	  IF LENGTH(tkt_card_number) = 15 THEN
	   SET tkt_card_num_x =  CONCAT(SUBSTR(tkt_card_number,1,4),'XXXXXXX',SUBSTR(tkt_card_number,-4));
	  ELSEIF LENGTH(tkt_card_number) = 16 THEN
	   SET tkt_card_num_x =  CONCAT(SUBSTR(tkt_card_number,1,4),'XXXXXXXX',SUBSTR(tkt_card_number,-4));
	  ELSEIF LENGTH(tkt_card_number) = 14 THEN
	   SET tkt_card_num_x =  CONCAT(SUBSTR(tkt_card_number,1,4),'XXXXXX',SUBSTR(tkt_card_number,-4)); 
	  END IF;  

      INSERT INTO t_id_tvl_fop_more_details(fopmd_fopd_key,fopmd_order,fopmd_definition_key,fopmd_value_key,fopmd_value_code,fopmd_value_description,fopmd_value_date,lock_key,profile_key)
		VALUES(@tkt_fopd_key,2,fop_def_key,NULL,NULL,tkt_card_num_x,NULL,0,user_profile_key); 

     SET  definition_code = 'fcardDate';
     OPEN fop_more_details_cursor;
     FETCH fop_more_details_cursor INTO fop_def_key;
     CLOSE fop_more_details_cursor;    

      INSERT INTO t_id_tvl_fop_more_details(fopmd_fopd_key,fopmd_order,fopmd_definition_key,fopmd_value_key,fopmd_value_code,fopmd_value_description,fopmd_value_date,lock_key,profile_key)
  VALUES(@tkt_fopd_key,3,fop_def_key,NULL,NULL,NULL,card_exp_dt,0,user_profile_key);
     END IF;

 INSERT INTO ID_KK_TEST(COL1,COL2) VALUES (2001167,CONCAT('p_tkt_number','-',p_tkt_number));
 INSERT INTO ID_KK_TEST(COL1,COL2) VALUES (2001168,CONCAT('v_conf_number','-',v_conf_number));
	 
	OPEN  HOTEL_CFR_TKT_NO_CHK;
    FETCH HOTEL_CFR_TKT_NO_CHK INTO v_conf_tkt_number_chk;
    CLOSE HOTEL_CFR_TKT_NO_CHK;

IF IFNULL(v_conf_tkt_number_chk,'N') = 'Y' THEN 
     update t_id_tvl_docket_header_summary 
	  set dkt_htl_count = ifnull(dkt_hotel_cnt,0) + 1,dkt_account_status = (case dkt_acc_status when 'Not Collected' then 'Not Collected' else 'Partially Collected' end),dkt_modified_by = user_created_key ,dkt_modified_on = CURRENT_DATE where dkt_number = dkt_num;
	  
 INSERT INTO ID_KK_TEST(COL1,COL2) VALUES (2001169,CONCAT('dkt_num','-',dkt_num));
 
	  END IF;

SET DONE = FALSE;
   OPEN tvl_udid_amadeus;
      tvl_udid_amadeus: LOOP
      FETCH tvl_udid_amadeus INTO am_udid_value,am_udid_abbreviation;
      IF DONE THEN
       LEAVE tvl_udid_amadeus;
      END IF;   

     SET p_udid_code = am_udid_abbreviation; 
     SET p_udid_value	= NULL;
     SET ud_def_key	= NULL;
     SET ud_mode_key	= NULL;
     SET ud_order	= NULL;
     SET dynamic_udid_key = NULL;  

     OPEN tvl_dynamic_def_key;
     FETCH tvl_dynamic_def_key INTO dynamic_udid_key;
     CLOSE tvl_dynamic_def_key;  

     OPEN air_udid_values_1;
     FETCH air_udid_values_1 INTO p_udid_value;
     CLOSE air_udid_values_1;

     IF p_udid_value IS NOT NULL AND p_udid_value != '' THEN 

      OPEN tvl_ama_udid_def_key;
      FETCH tvl_ama_udid_def_key INTO ud_def_key,ud_mode_key,ud_order;
      CLOSE tvl_ama_udid_def_key;
	  
  OPEN udid_value_code_cursor;
  FETCH udid_value_code_cursor INTO value_key,value_code;
  CLOSE udid_value_code_cursor;

      IF ud_def_key IS NOT NULL AND ud_def_key != '' THEN
       INSERT INTO t_id_tvl_udid_details(tud_docket_key,tud_mode_key,tud_product_key,tud_ticket_key,tud_defintion_key,tud_order,
		tud_value_value_key,tud_value_code,tud_value_description,tud_value_date,lock_key,profile_key)
       VALUES(@dkt_key_no,ud_mode_key,tkt_prd_key,@tkt_key,ud_def_key,ud_order,IFNULL(value_key,NULL),IFNULL(value_code,NULL),p_udid_value,NULL,0,user_profile_key);
      END IF;
     END IF;

     SET DONE = FALSE;
     END LOOP tvl_udid_amadeus;
     CLOSE tvl_udid_amadeus;  

     SET DONE = FALSE;	 
     SET P_SUCCESS='Y';

 ELSE
  SET msg = 'Hotel details';
  SET p_cursor_1 = 'Confirmation Number already available hotel details ';
    SET P_SUCCESS = 'N';
    INSERT INTO t_id_gds_loading_exception (LE_COMPANY,LE_CRS,LE_AIRLINE,LE_TICKET_NUMBER,LE_LOAD_DATE,LE_LOAD_ERROR,
					    LE_LOAD_PLACE,LE_REMARK_1,LE_REMARK_2,LE_REMARK_3,LE_REMARK_4,lock_key,profile_key) 
				VALUES('1','AMADEUS_HTL',NULL,v_conf_number,CURRENT_DATE,msg,p_cursor_1,CONCAT('Reference -',p_key),NULL,NULL,IFNULL(pnr_number,'NULL'),0,4);
    CLOSE ticket_check_cursor;
   END IF;

END IF;

SET DONE = FALSE;
END LOOP hotel_car_header;
CLOSE hotel_car_header;	

  END IF;  

SET BDF =0;

IF P_SUCCESS = 'Y' THEN
    UPDATE t_id_gds_details
    SET tigd_status = 'C'
    WHERE tigd_gds_key = P_KEY
    AND tigd_gds_type = 'AMADEUS';
  ELSEIF P_SUCCESS = 'N' THEN
    UPDATE t_id_gds_details
    SET tigd_status = 'E',
        tigd_flex_2 = p_cursor
    WHERE tigd_gds_key = P_KEY
    AND tigd_gds_type = 'AMADEUS';
  ELSE
    UPDATE t_id_gds_details
    SET tigd_status = 'N'
    WHERE tigd_gds_key = P_KEY
    AND tigd_gds_type = 'AMADEUS';
  END IF;
END;
END IF;
IF car_prd_code = 'CCR' THEN
BEGIN

 DECLARE DONE 				BOOLEAN DEFAULT FALSE;
 DECLARE BDF 				INT DEFAULT 0;
 DECLARE errcount 		INT;
 DECLARE errno 			INT;
 DECLARE msg 				TEXT;
 DECLARE p_cursor       VARCHAR(240);
 DECLARE p_cursor_1     VARCHAR(240);DECLARE tkt_void_status VARCHAR(2);
 DECLARE ticket_check_cursor_tkt VARCHAR(25); 
 DECLARE v_tmp_tfind			VARCHAR(2); 
 DECLARE p_service_type VARCHAR(240);
 DECLARE p_service_name 	   VARCHAR(240);
 DECLARE p_tkt_number VARCHAR(15);
 DECLARE sec_tkt_number 	VARCHAR(240);
 DECLARE p_air_serial 		BIGINT;
 DECLARE book_clerk          VARCHAR(10);
 DECLARE ticket_clerk        VARCHAR(10);
 DECLARE ticket_clerk_branch VARCHAR(25);
 DECLARE v_brnch_name		VARCHAR(240);
 DECLARE v_dropoff_time_time DATETIME;
  DECLARE v_pickup_time_time DATETIME;
  DECLARE v_car_type_key varchar(100);
  DECLARE v_car_key BIGINT;
  DECLARE car_code VARCHAR(25);
  DECLARE v_no_of_nights BIGINT;
  DECLARE total_rate VARCHAR(25);
  DECLARE city_code VARCHAR(25);
  DECLARE car_name VARCHAR(100);
 DECLARE v_id_value varchar(24);
  DECLARE ib_value varchar(24);
  DECLARE f_car_code VARCHAR(100);
 DECLARE value_key             VARCHAR(50);
 DECLARE value_code             VARCHAR(50);
 DECLARE book_clerk_key      BIGINT;
 DECLARE src_key      BIGINT;
 DECLARE vno_agent_key BIGINT;
 DECLARE Country_key      BIGINT;
 DECLARE country_name   VARCHAR(25);
 DECLARE v_country_name VARCHAR(25);
 DECLARE cntry_key      BIGINT;
 DECLARE c_key   BIGINT;
 DECLARE final_key      BIGINT;
 DECLARE ticket_clerk_key    BIGINT;
 DECLARE tmp_class           VARCHAR(10); 
 DECLARE tkt_class			VARCHAR(10);
 DECLARE dkt_value			VARCHAR(25);

 DECLARE tkt_location  		VARCHAR(10);
 DECLARE tkt_date      		DATETIME;
 DECLARE tvl_date      		DATETIME;
 DECLARE tkt_airline  		VARCHAR(10);
 DECLARE s_airline 			VARCHAR(10);
 DECLARE tkt_air_release	VARCHAR(10);

 DECLARE rc_cr_dt				VARCHAR(10);

 DECLARE tkt_exch_doc_number 	VARCHAR(25) DEFAULT  NULL;
 DECLARE pub_fare           	DOUBLE;
 DECLARE sell_fare      		DOUBLE;
 DECLARE ex_rate            	DOUBLE  DEFAULT  1;
 DECLARE tkt_currency       	VARCHAR(10);
 DECLARE tmp_sell_fare      	DOUBLE  DEFAULT  0;
 DECLARE tmp_ex_rate        	DOUBLE  DEFAULT  1;
 DECLARE tmp_currency       	VARCHAR(10);
 DECLARE base_currency      	VARCHAR(10);
 DECLARE tkt_fare_mode      	VARCHAR(5);
 DECLARE v_pub_fare          	DOUBLE;
 DECLARE v_high_fare            DOUBLE;
 DECLARE v_low_fare            DOUBLE;
 DECLARE v_ex_rate           	DOUBLE  DEFAULT  1;
 DECLARE v_tkt_currency      	VARCHAR(10);
 DECLARE exch_rate          	DOUBLE  DEFAULT  1;
 DECLARE v_issue_mode	      VARCHAR(1);
 DECLARE tkt_curr_key			BIGINT;
 DECLARE tkt_prd_key				BIGINT;
 DECLARE issue_mode_key			BIGINT;
 DECLARE fd_local_amt			DOUBLE;
 DECLARE m_cntry_key     INT;
 DECLARE air_rls_key			INT;
 DECLARE dkt_key_no			BIGINT;
 DECLARE dkt_sum_key			BIGINT;
 DECLARE dkt_num_key			BIGINT;
 DECLARE dkt_acc_status		VARCHAR(25); 
 DECLARE tkt_key				BIGINT;
 DECLARE tkt_srv_key			BIGINT;
 DECLARE tkt_tax_key			BIGINT;
 DECLARE tkt_fopd_key		BIGINT;
 DECLARE prd_type				VARCHAR(10);
 DECLARE tmp_iata_code		VARCHAR(25);
 DECLARE t_iata_agent		VARCHAR(25);
 DECLARE t_iata_location	VARCHAR(25);
 DECLARE t_agent_key			BIGINT;
 DECLARE src_agent_key		BIGINT;
 DECLARE t_location_key		BIGINT;
 DECLARE t_location_code	VARCHAR(25);
 DECLARE t_location_name	VARCHAR(25);
 DECLARE v_brnch_code		VARCHAR(25);
 DECLARE v_car_chain        VARCHAR(2);
 DECLARE car_chn        VARCHAR(2);
 DECLARE v_deal_code		   VARCHAR(25);
 DECLARE pnr_number			VARCHAR(25);
 DECLARE ama_branch			VARCHAR(25);
 DECLARE fop_def_key			BIGINT;

 DECLARE tax1   		VARCHAR(10);
 DECLARE tax2   		VARCHAR(10);
 DECLARE tax3   		VARCHAR(10);
 DECLARE tax4   		VARCHAR(10);
 DECLARE tax5   		VARCHAR(10);
 DECLARE tax6   		VARCHAR(10);
 DECLARE tax7   		VARCHAR(10);
 DECLARE tax8   		VARCHAR(10);
 DECLARE tax9   		VARCHAR(10);
 DECLARE tax10  		VARCHAR(10);
 DECLARE tax11  		VARCHAR(10);
 DECLARE tax12  		VARCHAR(10);
 DECLARE tax13  		VARCHAR(10);
 DECLARE tax14   		VARCHAR(10);
 DECLARE tax15   		VARCHAR(10);
 DECLARE tax16   		VARCHAR(10);
 DECLARE tax17   		VARCHAR(10);
 DECLARE tax18   		VARCHAR(10);
 DECLARE tax19   		VARCHAR(10);
 DECLARE tax20  		VARCHAR(10);
 DECLARE tax45  		VARCHAR(10);
 DECLARE taxa1  		DOUBLE  DEFAULT  0;
 DECLARE taxa2  		DOUBLE  DEFAULT  0;
 DECLARE taxa3  		DOUBLE  DEFAULT  0;
 DECLARE taxa4  		DOUBLE  DEFAULT  0;
 DECLARE taxa5  		DOUBLE  DEFAULT  0;
 DECLARE taxa6  		DOUBLE  DEFAULT  0;
 DECLARE taxa7  		DOUBLE  DEFAULT  0;
 DECLARE taxa8  		DOUBLE  DEFAULT  0;
 DECLARE taxa9  		DOUBLE  DEFAULT  0;
 DECLARE taxa10 		DOUBLE  DEFAULT  0;
 DECLARE taxa11 		DOUBLE  DEFAULT  0;
 DECLARE taxa12 		DOUBLE  DEFAULT  0;
 DECLARE taxa13 		DOUBLE  DEFAULT  0;
 DECLARE taxa14  		DOUBLE  DEFAULT  0;
 DECLARE taxa15  		DOUBLE  DEFAULT  0;
 DECLARE taxa16  		DOUBLE  DEFAULT  0;
 DECLARE taxa17  		DOUBLE  DEFAULT  0;
 DECLARE taxa18  		DOUBLE  DEFAULT  0;
 DECLARE taxa19  		DOUBLE  DEFAULT  0;
 DECLARE taxa20 		DOUBLE  DEFAULT  0;
 DECLARE taxa45 		DOUBLE  DEFAULT  0;
 DECLARE tax_d       DOUBLE;
 DECLARE tax_1       DOUBLE;
 DECLARE tax_2       DOUBLE;
 DECLARE tax_code   	VARCHAR(10);
 DECLARE tax_amount 	DOUBLE DEFAULT 0;
 DECLARE tax_find    VARCHAR(1);
 DECLARE tax_cnt		INT;
 DECLARE tot_tax     DOUBLE;
 DECLARE tax_key		BIGINT;
 DECLARE tkt_destination_tax  DOUBLE;

 DECLARE sale_exec          	VARCHAR(10);
 DECLARE cust_code          	VARCHAR(10);
 DECLARE walk_cust_code     	VARCHAR(30);
 DECLARE addi_selling       	DOUBLE  DEFAULT  0;
 DECLARE addi_collection    	DOUBLE  DEFAULT  0;
 DECLARE disc_amt           	DOUBLE  DEFAULT  0;
 DECLARE orc_amt            	DOUBLE  DEFAULT  0;
 DECLARE spl_disc           	DOUBLE  DEFAULT  0;

 DECLARE cash_amount  		DOUBLE;
 DECLARE sett_mode      	VARCHAR(1);
 DECLARE lpo               VARCHAR(24);
 DECLARE corporate 			VARCHAR(10);
 DECLARE pnrnumber 			VARCHAR(20);
 DECLARE servicefees 		DOUBLE DEFAULT 0;
 DECLARE lpo_date 			DATETIME;
 DECLARE cust_amt          DOUBLE  DEFAULT  0;
 DECLARE tkt_card_find     VARCHAR(2);
 DECLARE tkt_card_type  	VARCHAR(10);
 DECLARE tkt_card_number 	VARCHAR(50);
 DECLARE tkt_card_num_x		VARCHAR(50);
 DECLARE tkt_card_amount 	DOUBLE;
 DECLARE amex_app_code 		VARCHAR(30);
 DECLARE expiry_date 		VARCHAR(30);
 DECLARE emd_tkt_ind 		VARCHAR(5);
 DECLARE tkt_pax           VARCHAR(75);
 DECLARE tkt_pax_name      VARCHAR(75);
 DECLARE tkt_dkt_pax       VARCHAR(75);
 DECLARE trans_amount 		DOUBLE;
 DECLARE collect_amount 	DECIMAL(18,4);
 DECLARE definition_code	VARCHAR(100);	
 DECLARE card_key				BIGINT;
 DECLARE card_type			VARCHAR(75);
 DECLARE card_name			VARCHAR(75);
 DECLARE card_an_key			BIGINT;
 DECLARE card_an_code		VARCHAR(75);
 DECLARE card_an_name		VARCHAR(75);
 DECLARE card_srv_fee		DOUBLE;
 DECLARE card_lodge_status	VARCHAR(75);
 DECLARE card_lodge_num		VARCHAR(75);
 DECLARE card_exp_dt			DATE;
 DECLARE rsn_code_key      BIGINT;
 DECLARE rsn_code       	    VARCHAR(200);
DECLARE rm_curr_chk VARCHAR(10);
DECLAre rm_rate_chk  varchar(10);
DECLARE v_no_of_unit  BIGINT;
   
 DECLARE tkt_dept_date		DATETIME;
 DECLARE tkt_arr_date  		DATETIME;
 DECLARE s_arr_key			INT;
 DECLARE s_dst_key			INT;
 DECLARE s_cls_key			INT;
 DECLARE s_air_key			INT;
 DECLARE s_coupon				INT;
 DECLARE conj_flg				INT;

 DECLARE DKT_NUM   			VARCHAR(4000);
 DECLARE DKT_STATUS    		VARCHAR(4000);
 DECLARE DKT_TEXT      		VARCHAR(4000);
 DECLARE dkt_type_value		VARCHAR(400);
 DECLARE dkt_type_key		BIGINT;

 DECLARE v_applied_on_code				VARCHAR(2);
 DECLARE v_applied_on_value			VARCHAR(240);
 DECLARE v_inter_domestic_key			INT;
 DECLARE v_product_type					INT;
 DECLARE v_package_normal_key			INT;
 DECLARE v_output_input_type_key		INT;
 DECLARE v_percentage					DOUBLE;
 DECLARE v_applicable_on				DATE;
 DECLARE v_applied_on_key				INT;
 DECLARE v_vat_code						VARCHAR(2000);
 DECLARE v_vat_description					VARCHAR(2000);
 DECLARE v_inclusive_exclusive_key		INT;
 DECLARE v_inclusive_exclusive_code		VARCHAR(2000);
 DECLARE v_inclusive_exclusive_value	VARCHAR(2000);
 DECLARE v_collection_type_key		INT;
 DECLARE v_collection_code		VARCHAR(2000);
 DECLARE v_io_type_code			VARCHAR(2000);
 DECLARE v_io_type_value		VARCHAR(2000);
 DECLARE vat_applied_on			VARCHAR(240);

 DECLARE vat_on_amt				DOUBLE;
 DECLARE vat_amt					DOUBLE;
 DECLARE canc_amt					DOUBLE;
 DECLARE comm_amt					DOUBLE;
 DECLARE tot_vat_amt				DOUBLE;
 DECLARE v_tax_k7_amt   		DECIMAL(16,2);
 DECLARE v_k7_tax_amt  			DECIMAL(16,2);
 DECLARE v_k7_srv_amt   		DECIMAL(16,2);
 DECLARE v_tax_k7_code  		VARCHAR(24);
  DECLARE ticket_clerk_check  VARCHAR(10);
 DECLARE book_clerk_check   VARCHAR(10);
DECLARE  ticket_clerk_code   VARCHAR(20);
 DECLARE book_clerk_code  VARCHAR(20);
 DECLARE exp_tkt_clerk    VARCHAR(20);

 DECLARE tax_vat_code				VARCHAR(2000);
 DECLARE tax_vat_description		VARCHAR(2000);
 DECLARE tax_inclusive_exclusive_code	VARCHAR(2000);
 DECLARE tax_collection_code		VARCHAR(2000);
 DECLARE tax_io_type_code			VARCHAR(2000);
 DECLARE tax_vat_percentage		DOUBLE;
 DECLARE tax_vat_amt					DOUBLE;
 DECLARE tax_appliedon_code		VARCHAR(20);
 DECLARE tax_appliedon_value		VARCHAR(240);
 DECLARE tax_applicable_on					VARCHAR(2000);

 DECLARE srv_vat_code			VARCHAR(2000);
 DECLARE srv_vat_description	VARCHAR(2000);
 DECLARE srv_inclusive_exclusive_code	VARCHAR(2000);
 DECLARE srv_collection_code	VARCHAR(2000);
 DECLARE srv_io_type_code		VARCHAR(2000);
 DECLARE srv_vat_percentage	DOUBLE;
 DECLARE srv_vat_amt				DOUBLE;
 DECLARE srv_appliedon_code	VARCHAR(20);
 DECLARE srv_appliedon_value	VARCHAR(240);
 DECLARE srv_vat_applicable	VARCHAR(2000);

 DECLARE vat_in_out				VARCHAR(2);
 DECLARE vat_tot_amount			DOUBLE;

 DECLARE fop_value				VARCHAR(25);
 DECLARE fop_settle_key 		BIGINT;
 DECLARE cust_exempt_status 	VARCHAR(2);
 DECLARE cust_key	 				VARCHAR(60);
 DECLARE walk_cust_key 			VARCHAR(60);
 DECLARE v_locint_f  			VARCHAR(2);
 DECLARE v_locint_t		  		VARCHAR(2);
 DECLARE inter_domestic  		VARCHAR(2);
 DECLARE inter_domestic_key	BIGINT;
 DECLARE service_type_key		BIGINT;
 DECLARE procss_typ	  			VARCHAR(24);
 DECLARE procss_typ_key			BIGINT;
 DECLARE prcss_code	  			VARCHAR(2);
 DECLARE passenger_age_key		BIGINT;
 DECLARE passenger_age_type	VARCHAR(4);
 DECLARE passenger_age_code	VARCHAR(4);
 DECLARE v_conf_tkt_number_chk VARCHAR(10);
 DECLARE dkt_ccr_cnt  BIGINT;

 DECLARE service_id				BIGINT;
 DECLARE service_key				BIGINT;
 DECLARE service_code			VARCHAR(240);
 DECLARE service_name 			VARCHAR(240);
 DECLARE discount_amount		DECIMAL(18,4);
 DECLARE charge_mode				VARCHAR(240);
 DECLARE charge_on				VARCHAR(240);
 DECLARE charge_amount			DECIMAL(18,4);
 DECLARE charge_adult_amount	DECIMAL(18,4);
 DECLARE charge_child_amount	DECIMAL(18,4);
 DECLARE charge_infant_amount	DECIMAL(18,4);
 DECLARE serv_amount				DECIMAL(18,4);
 DECLARE file_serv_amnt			VARCHAR(240);
 DECLARE file_serv_amount		DECIMAL(18,4);
 DECLARE total_serv_amount		DECIMAL(18,4);
 DECLARE srv_fee_code			VARCHAR(240);
 DECLARE srv_file_code			VARCHAR(240);

 DECLARE cust_serv 				VARCHAR(5);
 DECLARE bk_pcc		   		VARCHAR(10);    
 DECLARE iss_pcc	  				VARCHAR(10);    
 DECLARE pcc_loc 					VARCHAR(10);    
 DECLARE t_iss_bk 				VARCHAR(5);
 DECLARE loc_iata_pcc 			VARCHAR(5);
 DECLARE default_msg            VARCHAR(240);

 DECLARE p_udid_code				VARCHAR(240);
 DECLARE p_udid_value			VARCHAR(240);
 DECLARE ud_def_key				BIGINT;
 DECLARE ud_mode_key				BIGINT;
 DECLARE ud_order					BIGINT;
 DECLARE am_udid_value			VARCHAR(240);
 DECLARE am_udid_abbreviation	VARCHAR(240);
 DECLARE dynamic_udid_key		BIGINT;
 DECLARE user_created_key		BIGINT;
 DECLARE user_profile_key		BIGINT;
 DECLARE user_comp_profile_key BIGINT;
 DECLARE tkt_comm					DOUBLE;
 DECLARE tkt_comm_amt			DECIMAL(18,4);
 DECLARE dkt_car_cnt        BIGINT;

 DECLARE  company_code 			VARCHAR(10);
 DECLARE  base_curr_code 		VARCHAR(10);
 DECLARE  base_curr_key 		BIGINT(10);
 DECLARE  base_decimal  		BIGINT(10);

 DECLARE  air_void				VARCHAR(10);
 DECLARE  air_rfnd				VARCHAR(10);

 DECLARE f_vat BIGINT;
 DECLARE x_vat BIGINT;
 DECLARE c_vat BIGINT;
 DECLARE d_vat BIGINT;
 DECLARE o_vat BIGINT;
 DECLARE t_vat BIGINT;

 DECLARE v_no_of_rooms BIGINT;
 DECLARE v_pickup_time DATETIME;
 DECLARE v_dropoff_time DATETIME;
  DECLARE pickup_time TIME;
 DECLARE dropoff_time TIME;
 DECLARE pickup_place_code  VARCHAR(100);
 DECLARE pickup_place_name   VARCHAR(280);   
 DECLARE dropoff_plce_name   VARCHAR(280);
 DECLARE dropoff_plce_code   VARCHAR(10);
 DECLARE v_pickup_key     BIGINT;
 DECLARE v_dropoff_key    BIGINT;
 DECLARE v_pickup_city VARCHAR(25);
 DECLARE v_dropoff_city VARCHAR(25);
 DECLARE v_room_type VARCHAR(10);
 DECLARE v_rate_plan VARCHAR(10);
 DECLARE v_room_rate_curr_code VARCHAR(10);
 DECLARE v_agent_curr_code VARCHAR(10);
 DECLARE v_car_rate_per_day DECIMAL(18,4);
 DECLARE   toatal_l_rate      DECIMAL(18,4);
 
 
 DECLARE v_total_days BIGINT;
 DECLARE v_rate_type_code VARCHAR(10);
 DECLARE v_conf_number VARCHAR(100);
 DECLARE v_guarantee_method VARCHAR(250);
 DECLARE v_city_code_key BIGINT;
 DECLARE v_room_type_key BIGINT;
 DECLARE v_car_code_key BIGINT;
 DECLARE v_car_chain_key BIGINT;
 DECLARE v_conf_number_chk VARCHAR(100);
 DECLARE   total_f_rate       varchar (10);
 DECLARE   mob_number         varchar (25);
 DECLARE   art_serial         BIGINT;
 DECLARE   excep_conf_num     VARCHAR(50);

 DECLARE hotel_car_header CURSOR FOR   
  select 'RENTAL' v_service,ltrim(rtrim(substr(airu_1,4,3))) hc_typ,LTRIM(RTRIM(substr(airu_15,4))) conf_number,LTRIM(RTRIM(airu_serial)) art
  from id_air_u where airu_key=p_key and ltrim(rtrim(substr(airu_1,4,3))) in ('CCR')   order by airu_serial;

 DECLARE excep_conf_num_cursor CURSOR FOR   
  select LTRIM(RTRIM(substr(airu_15,4))) conf_number
  from id_air_u where airu_key=p_key and ltrim(rtrim(substr(airu_1,4,3))) in ('CCR')   order by airu_serial;

DECLARE car_details CURSOR FOR     
SELECT 
CONCAT(STR_TO_DATE(CONCAT(LTRIM(RTRIM(SUBSTR(airu_2,6,5))),(DATE_FORMAT(SYSDATE(),'%y'))),'%d%b%y' ),' ',
CAST(RPAD(RTRIM(LTRIM(SUBSTR(airu_8,LENGTH(airu_8)-3,4))),6,0) AS TIME))from_car_date,
CONCAT(STR_TO_DATE(CONCAT(LTRIM(RTRIM(SUBSTR(airu_3,1,5))),(DATE_FORMAT(SYSDATE(),'%y'))),'%d%b%y' ),' ',
CAST(RPAD(LTRIM(RTRIM(SUBSTR(airu_9,4))),6,0) AS TIME))to_car_date,
LTRIM(RTRIM(SUBSTR(airu_6,1))) car_type,
LTRIM(RTRIM(SUBSTR(airu_7,1))) car_name,
LTRIM(RTRIM(SUBSTR(airu_4,1))) city_code,
LTRIM(RTRIM(SUBSTR(airu_1,8,2))) car_chn,

CAST(RPAD(RTRIM(LTRIM(SUBSTR(airu_8,LENGTH(airu_8)-3,4))),6,0) AS TIME) pickup,
CAST(RPAD(LTRIM(RTRIM(SUBSTR(airu_9,4))),6,0) AS TIME) dropoff,
substr(airu_19,4,LOCATE('*',SUBSTR(airu_19,4))-1) pickup_place_code,
substr(airu_19,LOCATE('*',airu_19)+1) pickup_place_name,
substr(airu_28,LOCATE('*',airu_28)+1) dropoff_place,
substr(airu_28,5,LOCATE('*',SUBSTR(airu_28,4))-2) dropoff_code
FROM id_air_u
WHERE airu_key = p_key
and substr(airu_1,4,3) in ('CCR')
AND airu_serial = art_serial;

DECLARE CAR_CFR_NO_CHK CURSOR FOR
SELECT cvd_confirmation_number from t_id_tvl_car_voucher_details where cvd_confirmation_number = v_conf_number;

DECLARE city_code_key CURSOR FOR
SELECT city_key FROM t_id_city_master where code=city_code;

DECLARE car_code_key CURSOR FOR
	SELECT car_key FROM t_id_car_master WHERE code = car_code;

DECLARE car_type_key CURSOR FOR	
SELECT name FROM t_id_vehicle_type_master WHERE NAME LIKE CONCAT('%',car_name,'%');	
	
	
	DECLARE car_chain_key CURSOR FOR
SELECT hcm_key FROM t_id_tvl_htl_car_chain_master WHERE hcm_chain_code = car_chn AND hcm_hotel_car= 165;

DECLARE air_void_cursor CURSOR FOR 
SELECT SUBSTR(air_2,1,4) FROM  id_air_amadeus WHERE air_key = p_key;

 DECLARE refund_exist_cursor CURSOR FOR 
  SELECT aira_1 FROM id_air_a WHERE aira_key= p_key and aira_1 is not null;

DECLARE ama_d_date_cursor CURSOR FOR
  SELECT STR_TO_DATE(LTRIM(RTRIM(aird_2)), '%y%m%d' ) sale_date
  FROM id_air_d
  WHERE aird_key = p_key;

 DECLARE find_iata_cursor CURSOR FOR
  SELECT CASE WHEN LTRIM(RTRIM(airm_9)) = '' THEN LTRIM(RTRIM(airm_7)) ELSE LTRIM(RTRIM(airm_9)) END IATA_CODE,
  SUBSTR(airm_0,(INSTR(airm_0, ' ')+1), 6) pnr,
  IFNULL(LTRIM(RTRIM(SUBSTR(AIRM_2,1,10))),'X') booking_pcc,
  IFNULL(LTRIM(RTRIM(SUBSTR(AIRM_8,1,10))),'X') issue_pcc
    FROM id_air_m
   WHERE airm_key = p_key
     AND SUBSTR(airm_0,1,5) = 'MUC1A';


DECLARE air_h_tvl_date_cursor CURSOR FOR
  SELECT STR_TO_DATE(CONCAT(LTRIM(RTRIM(SUBSTR(airh_5,16,5))),(DATE_FORMAT(SYSDATE(),'%y'))),'%d%b%y' ) tvl_date,
  LTRIM(RTRIM(SUBSTR(airh_5,12,2))) booking_class
  FROM id_air_h
  WHERE airh_key = p_key AND airh_5 NOT IN ('VOID')
    AND airh_serial = art_serial;
	
DECLARE default_clerk_cursor CURSOR FOR 
SELECT value FROM t_id_reference_codes_detail_view WHERE domain_name = 'GDS_File_Load'
AND CODE = 'DEFAULT_CLERK';

	   DECLARE ticket_clerk_key_check_cursor CURSOR FOR 
  SELECT 'Y' FROM t_id_executive_master WHERE exec_remarks = LTRIM(RTRIM(ticket_clerk));
  
  
 DECLARE book_clerk_key_check_cursor CURSOR FOR 
  SELECT 'Y' FROM t_id_executive_master WHERE exec_remarks = LTRIM(RTRIM(book_clerk));
  
  	DECLARE ama_tc_clerk_cursor CURSOR FOR 
	SELECT exec_remarks FROM t_id_executive_master WHERE exec_amadeus_sign_in_code = ticket_clerk_code;

 DECLARE booking_clerk_cursor CURSOR FOR
   SELECT LTRIM(RTRIM(SUBSTR(airr_0,7,6))) book_clerk
  FROM id_air_r
  WHERE airr_key = p_key
    AND SUBSTR(airr_0,1,6) = 'RM*BA/';
 
  DECLARE ticketing_clerk_cursor CURSOR FOR
 SELECT LTRIM(RTRIM(SUBSTR(airr_0,7,6))) ticket_clerk
  FROM id_air_r
  WHERE airr_key = p_key
    AND SUBSTR(airr_0,1,6) = 'RM*TA/';


 DECLARE ama_c_clerk_cursor CURSOR FOR
     SELECT LTRIM(RTRIM(SUBSTR(airc_0, 13,2))) book_clerk,LTRIM(RTRIM(SUBSTR(airc_0, 22,2))) ticket_clerk
  FROM id_air_c
  WHERE airc_key = p_key  AND (  LTRIM(RTRIM(SUBSTR(airc_0, 22,2))) !='')
  UNION ALL
     SELECT LTRIM(RTRIM(SUBSTR(airc_0, 9,2))) book_clerk,LTRIM(RTRIM(SUBSTR(airc_0, 14,2))) ticket_clerk
  FROM id_air_c
  WHERE airc_key = p_key  AND (  LTRIM(RTRIM(SUBSTR(airc_0, 22,2))) ='');  

 DECLARE pcc_clerk_key_cursor CURSOR FOR
  SELECT B.exec_user_key,B.exec_allocated_branch FROM t_id_reference_codes_detail_view A,v_id_executive_master B  WHERE A.domain_name='PCC_USER_CODE' AND LTRIM(RTRIM(A.CODE)) = pcc_loc
  AND LTRIM(RTRIM(A.VALUE)) = LTRIM(RTRIM(B.exec_user_code)) ;

 DECLARE book_clerk_key_cursor CURSOR FOR
  SELECT exec_user_key FROM t_id_executive_master WHERE exec_remarks = LTRIM(RTRIM(book_clerk));

 DECLARE ticket_clerk_key_cursor CURSOR FOR 
  SELECT exec_user_key,exec_allocated_branch FROM t_id_executive_master WHERE exec_remarks = LTRIM(RTRIM(ticket_clerk));

DECLARE  class_cursor CURSOR FOR
 SELECT clsm_key
 FROM   t_id_tvl_class_master
 WHERE  LTRIM(RTRIM(CODE)) = LTRIM(RTRIM(tkt_class));

DECLARE ticket_status_details CURSOR FOR  
  SELECT hvd_voucher_status FROM t_id_tvl_hotel_voucher_details 
   WHERE hvd_voucher_number = p_tkt_number AND hvd_voucher_status = 'V'
UNION
  SELECT cvd_voucher_status FROM t_id_tvl_car_voucher_details 
   WHERE cvd_voucher_number = p_tkt_number AND cvd_voucher_status = 'V'
UNION
  SELECT mvd_voucher_status FROM t_id_tvl_misc_voucher_details 
   WHERE mvd_voucher_number = p_tkt_number AND mvd_voucher_status = 'V';

DECLARE  exch_doc_cursor CURSOR FOR
 SELECT LTRIM(RTRIM(SUBSTR(airf_0, 7,10))) exch_doc_number
    FROM id_air_f
   WHERE airf_key = p_key
     AND SUBSTR(airf_0,1,2) = 'FO'
     AND LENGTH(LTRIM(RTRIM(SUBSTR(airf_0, 7,10)))) = 10;

DECLARE ama_k_fare_cursor CURSOR FOR   
   SELECT DISTINCT 
  CASE LTRIM(RTRIM(airk_1))
   WHEN  NULL THEN CAST(LTRIM(RTRIM(SUBSTR(airk_0, 7) )) AS DECIMAL(20,4))
   WHEN  '' THEN CAST(LTRIM(RTRIM(SUBSTR(airk_0, 7) )) AS DECIMAL(20,4))
   ELSE CAST(LTRIM(RTRIM(SUBSTR(airk_1,4) )) AS DECIMAL(20,4)) END AS pub_fare,
  CAST(IFNULL(ROUND(LTRIM(RTRIM(airk_13)),4),1) AS DECIMAL(20,4)) ex_rate,
  CASE LTRIM(RTRIM(airk_1))
   WHEN NULL THEN LTRIM(RTRIM(SUBSTR(airk_0,4,3)))
   WHEN '' THEN LTRIM(RTRIM(SUBSTR(airk_0,4,3)))
   ELSE LTRIM(RTRIM(SUBSTR(airk_1,1,3))) END AS currency,'K-F'
 FROM id_air_k
  WHERE airk_key = p_key
  AND (SUBSTR(airk_0,1,3) = 'K-F')
  UNION ALL
  SELECT DISTINCT 
   CASE LTRIM(RTRIM(airk_1))
    WHEN NULL THEN CAST(LTRIM(RTRIM(SUBSTR(airk_0, 8) )) AS DECIMAL(20,4))
    WHEN '' THEN CAST(LTRIM(RTRIM(SUBSTR(airk_0, 8) )) AS DECIMAL(20,4))
    ELSE CAST(LTRIM(RTRIM(SUBSTR(airk_1,4) )) AS DECIMAL(20,4)) END AS pub_fare,
   CAST(IFNULL(ROUND(LTRIM(RTRIM(airk_13)),4),1)AS DECIMAL(20,4)) ex_rate,
   CASE LTRIM(RTRIM(airk_1))
    WHEN NULL THEN LTRIM(RTRIM(SUBSTR(airk_0,5,3)))
    WHEN '' THEN LTRIM(RTRIM(SUBSTR(airk_0,5,3)))
    ELSE LTRIM(RTRIM(SUBSTR(airk_1,1,3))) END AS currency,'KS-'
     FROM id_air_k
  WHERE airk_key = p_key
  AND (SUBSTR(airk_0,1,3) = 'KS-')
  UNION ALL
  SELECT DISTINCT 
   CASE LTRIM(RTRIM(airk_1))
    WHEN NULL THEN CAST(LTRIM(RTRIM(SUBSTR(airk_0, 7) )) AS DECIMAL(20,4))
    WHEN '' THEN CAST(LTRIM(RTRIM(SUBSTR(airk_0, 7) )) AS DECIMAL(20,4))
     ELSE CAST(LTRIM(RTRIM(SUBSTR(airk_1,4) )) AS DECIMAL(20,4)) END AS pub_fare,
   CAST(IFNULL(ROUND(LTRIM(RTRIM(airk_13)),4),1)AS DECIMAL(20,4)) ex_rate,
   CASE LTRIM(RTRIM(airk_1)) 
    WHEN NULL THEN LTRIM(RTRIM(SUBSTR(airk_0,4,3)))
    WHEN '' THEN LTRIM(RTRIM(SUBSTR(airk_0,4,3)))
    ELSE LTRIM(RTRIM(SUBSTR(airk_1,1,3))) END AS currency,'K-I'
   FROM id_air_k
   WHERE airk_key = p_key
   AND (SUBSTR(airk_0,1,3) = 'K-I')
   UNION ALL
   SELECT DISTINCT CAST(IFNULL(LTRIM(RTRIM(SUBSTR(airk_12,4))),0)AS DECIMAL(20,4)) pub_fare,
     CAST(IFNULL(ROUND(LTRIM(RTRIM(airk_13)),4),1)AS DECIMAL(20,4)) ex_rate,
     LTRIM(RTRIM(SUBSTR(airk_12,1,3))) currency,'K-R'
     FROM id_air_k
   WHERE airk_key = p_key
   AND (SUBSTR(airk_0,1,3) = 'K-Y')
   UNION ALL
   SELECT DISTINCT CAST(IFNULL(LTRIM(RTRIM(SUBSTR(airk_12,4))),0)AS DECIMAL(20,4)) pub_fare,
     CAST(IFNULL(ROUND(LTRIM(RTRIM(airk_13)),4),1)AS DECIMAL(20,4)) ex_rate,
     LTRIM(RTRIM(SUBSTR(airk_12,1,3))) currency,'K-R'
     FROM id_air_k
   WHERE airk_key = p_key
   AND (SUBSTR(airk_0,1,3) = 'K-R')
   ORDER BY pub_fare ASC;

  DECLARE reissue_fare_cursor CURSOR FOR  
  SELECT DISTINCT CAST(IFNULL(LTRIM(RTRIM(SUBSTR(airk_12,4))),0)AS DECIMAL(20,4)) pub_fare,
    CAST(IFNULL(ROUND(LTRIM(RTRIM(airk_13)),4),1)AS DECIMAL(20,4)) ex_rate,
   LTRIM(RTRIM(SUBSTR(airk_12,1,3))) currency,'K-R'
  FROM id_air_k
  WHERE airk_key = p_key
  AND ((SUBSTR(airk_0,1,4) = 'KS-R') OR (SUBSTR(airk_0,1,3) = 'K-R') OR (SUBSTR(airk_0,1,4) = 'KS-Y') OR (SUBSTR(airk_0,1,4) = 'KS-I'))
  ORDER BY pub_fare ASC;

DECLARE base_currency_cursor CURSOR FOR
   SELECT t_id_company_master.comp_code,t_id_company_master.comp_base_currency ,
 v_id_tvl_branch_master.currency_code, t_id_company_master.comp_decimal_size  
 FROM   t_id_company_master,v_id_tvl_branch_master
 WHERE v_id_tvl_branch_master.bm_key = t_location_key;

DECLARE exchange_rate_cursor CURSOR FOR
     SELECT IFNULL(conversion_Rate,1)
     FROM v_id_exchange_rate_master
    WHERE from_currency_code    = tkt_currency
     AND (tkt_date BETWEEN active_from AND active_to)
      AND active_status = 'A'
 ORDER BY exc_key DESC limit 1;

DECLARE air_udid_values_2 CURSOR FOR
SELECT SUBSTR(airr_0, INSTR(airr_0, p_udid_code) + LENGTH(p_udid_code)) 
       FROM id_air_r 
        WHERE airr_key = p_key
          AND airr_0 LIKE CONCAT('%',p_udid_code,'%');  

DECLARE air_udid_values CURSOR FOR
SELECT SUBSTR(airr_0, INSTR(airr_0, p_udid_code) + LENGTH(p_udid_code)+1) 
       FROM id_air_r 
        WHERE airr_key = p_key
          AND airr_0 LIKE CONCAT('%',p_udid_code,'/','%'); 

DECLARE air_udid_values_1 CURSOR FOR
SELECT SUBSTR(airr_0, INSTR(airr_0, p_udid_code) + LENGTH(p_udid_code)) 
       FROM id_air_r 
        WHERE airr_key = p_key
          AND airr_0 LIKE CONCAT('%',p_udid_code,'%');          

DECLARE tvl_udid_def_key CURSOR FOR
 SELECT pdis_key,pdis_mode_key,pdis_order
  FROM t_id_tvl_partner_info_setup 
   WHERE pdis_cms_key=cust_key AND pdis_code = p_udid_code ; 

 DECLARE tvl_udid_amadeus CURSOR FOR 
  SELECT rcd_value,rcd_abbreviation FROM t_id_reference_codes_detail,t_id_reference_codes_header 
      WHERE rcd_header_key = rch_header_key AND rch_domain_name='Amadeus_GDS';  

 DECLARE ticket_user_key_cursor CURSOR FOR 
   SELECT user_key,user_default_profile_key FROM t_id_user_master WHERE user_key = 
	(SELECT exec_user_key FROM t_id_executive_master WHERE exec_remarks = LTRIM(RTRIM(ticket_clerk)));      

 DECLARE user_created_cursor CURSOR FOR
  SELECT user_key,user_default_profile_key FROM t_id_user_master WHERE LTRIM(TRIM(user_code)) IN (  
    SELECT rcd_abbreviation FROM t_id_reference_codes_detail,t_id_reference_codes_header 
      WHERE rcd_header_key = rch_header_key AND rch_domain_name='GDS_File_Load' AND rcd_value='AMADEUS');  

 DECLARE user_comp_profile_cursor  CURSOR FOR   
    SELECT user_default_profile_key FROM t_id_user_master WHERE LTRIM(TRIM(user_code)) IN (  
    SELECT rcd_abbreviation FROM t_id_reference_codes_detail,t_id_reference_codes_header 
      WHERE rcd_header_key = rch_header_key AND rch_domain_name='GDS_File_Load' AND rcd_value='AMADEUS');      

 DECLARE tvl_dynamic_def_key CURSOR FOR
  SELECT add_key FROM T_ID_DYNAMIC_DEFINITION WHERE add_code = am_udid_value;

 DECLARE tvl_ama_udid_def_key CURSOR FOR
  SELECT pdis_defintion_key,pdis_mode_key,pdis_order
   FROM t_id_tvl_partner_info_setup 
    WHERE pdis_cms_key=cust_key AND pdis_defintion_key = dynamic_udid_key;
	
DECLARE dropoff_lctn_key_cursor CURSOR FOR
SELECT falsd_id FROM tbl_id_et_flx_auto_lctn_dtls WHERE falsd_lcn_name = dropoff_plce_name;

DECLARE pickup_lctn_key_cursor CURSOR FOR
SELECT falsd_id FROM tbl_id_et_flx_auto_lctn_dtls WHERE falsd_lcn_name = pickup_place_name;	

 DECLARE K7_FILE_CURSOR CURSOR FOR  
  SELECT       
  CASE SUBSTR(airk_1,1,1) WHEN 'O' THEN NULL ELSE CASE SUBSTR(airk_1,14,2) WHEN 'K7' THEN  SUBSTR(airk_1,14,2)  ELSE NULL END END v_tax_k7_code,
  CASE SUBSTR(airk_1,1,1) WHEN 'O' THEN 0 ELSE CASE SUBSTR(airk_1,14,2) WHEN 'K7' THEN IFNULL(CAST(SUBSTR(airk_1,5, INSTR(SUBSTR(airk_1,5),' '))AS DECIMAL(16,2)), 0) ELSE 0  END END v_tax_k7_amt
FROM id_air_k
  WHERE AIRK_KEY = p_key AND SUBSTR(airk_1,14,2) = 'K7'
    AND (SUBSTR(AIRK_0,1,3) = 'KFT' OR SUBSTR(AIRK_0,1,3) = 'KNT' OR SUBSTR(AIRK_0,1,3) = 'KST')
UNION ALL
 SELECT       
  CASE SUBSTR(airk_2,1,1) WHEN 'O' THEN NULL ELSE CASE SUBSTR(airk_2,14,2) WHEN 'K7' THEN  SUBSTR(airk_2,14,2)  ELSE NULL END END v_tax_k7_code,
  CASE SUBSTR(airk_2,1,1) WHEN 'O' THEN 0 ELSE CASE SUBSTR(airk_2,14,2) WHEN 'K7' THEN IFNULL(CAST(SUBSTR(airk_2,5, INSTR(SUBSTR(airk_2,5),' '))AS DECIMAL(16,2)), 0) ELSE 0  END END v_tax_k7_amt
FROM id_air_k
  WHERE AIRK_KEY = p_key AND SUBSTR(airk_2,14,2) = 'K7'
    AND (SUBSTR(AIRK_0,1,3) = 'KFT' OR SUBSTR(AIRK_0,1,3) = 'KNT' OR SUBSTR(AIRK_0,1,3) = 'KST')
UNION ALL
 SELECT       
  CASE SUBSTR(airk_3,1,1) WHEN 'O' THEN NULL ELSE CASE SUBSTR(airk_3,14,2) WHEN 'K7' THEN  SUBSTR(airk_3,14,2)  ELSE NULL END END v_tax_k7_code,
  CASE SUBSTR(airk_3,1,1) WHEN 'O' THEN 0 ELSE CASE SUBSTR(airk_3,14,2) WHEN 'K7' THEN IFNULL(CAST(SUBSTR(airk_3,5, INSTR(SUBSTR(airk_3,5),' '))AS DECIMAL(16,2)), 0) ELSE 0  END END v_tax_k7_amt
FROM id_air_k
  WHERE AIRK_KEY = p_key AND SUBSTR(airk_3,14,2) = 'K7'
    AND (SUBSTR(AIRK_0,1,3) = 'KFT' OR SUBSTR(AIRK_0,1,3) = 'KNT' OR SUBSTR(AIRK_0,1,3) = 'KST')
UNION ALL
 SELECT       
  CASE SUBSTR(airk_4,1,1) WHEN 'O' THEN NULL ELSE CASE SUBSTR(airk_4,14,2) WHEN 'K7' THEN  SUBSTR(airk_4,14,2)  ELSE NULL END END v_tax_k7_code,
  CASE SUBSTR(airk_4,1,1) WHEN 'O' THEN 0 ELSE CASE SUBSTR(airk_4,14,2) WHEN 'K7' THEN IFNULL(CAST(SUBSTR(airk_4,5, INSTR(SUBSTR(airk_4,5),' '))AS DECIMAL(16,2)), 0) ELSE 0  END END v_tax_k7_amt
FROM id_air_k
  WHERE AIRK_KEY = p_key AND SUBSTR(airk_4,14,2) = 'K7'
    AND (SUBSTR(AIRK_0,1,3) = 'KFT' OR SUBSTR(AIRK_0,1,3) = 'KNT' OR SUBSTR(AIRK_0,1,3) = 'KST')    
UNION ALL
SELECT  DISTINCT     
  CASE SUBSTR(airk_5,1,1) WHEN 'O' THEN NULL ELSE CASE SUBSTR(airk_5,14,2) WHEN 'K7' THEN  SUBSTR(airk_5,14,2)  ELSE NULL END END v_tax_k7_code,
  CASE SUBSTR(airk_5,1,1) WHEN 'O' THEN 0 ELSE CASE SUBSTR(airk_5,14,2) WHEN 'K7' THEN IFNULL(CAST(SUBSTR(airk_5,5, INSTR(SUBSTR(airk_5,5),' '))AS DECIMAL(16,2)), 0) ELSE 0  END END v_tax_k7_amt
FROM id_air_k
  WHERE AIRK_KEY = p_key AND SUBSTR(airk_5,14,2) = 'K7'
    AND (SUBSTR(AIRK_0,1,3) = 'KFT' OR SUBSTR(AIRK_0,1,3) = 'KNT' OR SUBSTR(AIRK_0,1,3) = 'KST')
UNION ALL
 SELECT       
  CASE SUBSTR(airk_6,1,1) WHEN 'O' THEN NULL ELSE CASE SUBSTR(airk_6,14,2) WHEN 'K7' THEN  SUBSTR(airk_6,14,2)  ELSE NULL END END v_tax_k7_code,
  CASE SUBSTR(airk_6,1,1) WHEN 'O' THEN 0 ELSE CASE SUBSTR(airk_6,14,2) WHEN 'K7' THEN IFNULL(CAST(SUBSTR(airk_6,5, INSTR(SUBSTR(airk_6,5),' '))AS DECIMAL(16,2)), 0) ELSE 0  END END v_tax_k7_amt
FROM id_air_k
  WHERE AIRK_KEY = p_key AND SUBSTR(airk_6,14,2) = 'K7'
    AND (SUBSTR(AIRK_0,1,3) = 'KFT' OR SUBSTR(AIRK_0,1,3) = 'KNT' OR SUBSTR(AIRK_0,1,3) = 'KST')
UNION ALL
 SELECT       
  CASE SUBSTR(airk_7,1,1) WHEN 'O' THEN NULL ELSE CASE SUBSTR(airk_7,14,2) WHEN 'K7' THEN  SUBSTR(airk_7,14,2)  ELSE NULL END END v_tax_k7_code,
  CASE SUBSTR(airk_7,1,1) WHEN 'O' THEN 0 ELSE CASE SUBSTR(airk_7,14,2) WHEN 'K7' THEN IFNULL(CAST(SUBSTR(airk_7,5, INSTR(SUBSTR(airk_7,5),' '))AS DECIMAL(16,2)), 0) ELSE 0  END END v_tax_k7_amt
FROM id_air_k
  WHERE AIRK_KEY = p_key AND SUBSTR(airk_7,14,2) = 'K7'
    AND (SUBSTR(AIRK_0,1,3) = 'KFT' OR SUBSTR(AIRK_0,1,3) = 'KNT' OR SUBSTR(AIRK_0,1,3) = 'KST')
UNION ALL
SELECT       
  CASE SUBSTR(airk_8,1,1) WHEN 'O' THEN NULL ELSE CASE SUBSTR(airk_8,14,2) WHEN 'K7' THEN  SUBSTR(airk_8,14,2)  ELSE NULL END END v_tax_k7_code,
  CASE SUBSTR(airk_8,1,1) WHEN 'O' THEN 0 ELSE CASE SUBSTR(airk_8,14,2) WHEN 'K7' THEN IFNULL(CAST(SUBSTR(airk_8,5, INSTR(SUBSTR(airk_8,5),' '))AS DECIMAL(16,2)), 0) ELSE 0  END END v_tax_k7_amt
FROM id_air_k
  WHERE AIRK_KEY = p_key AND SUBSTR(airk_8,14,2) = 'K7'
    AND (SUBSTR(AIRK_0,1,3) = 'KFT' OR SUBSTR(AIRK_0,1,3) = 'KNT' OR SUBSTR(AIRK_0,1,3) = 'KST')
UNION ALL
SELECT       
  CASE SUBSTR(airk_9,1,1) WHEN 'O' THEN NULL ELSE CASE SUBSTR(airk_9,14,2) WHEN 'K7' THEN  SUBSTR(airk_9,14,2)  ELSE NULL END END v_tax_k7_code,
  CASE SUBSTR(airk_9,1,1) WHEN 'O' THEN 0 ELSE CASE SUBSTR(airk_9,14,2) WHEN 'K7' THEN IFNULL(CAST(SUBSTR(airk_9,5, INSTR(SUBSTR(airk_9,5),' '))AS DECIMAL(16,2)), 0) ELSE 0  END END v_tax_k7_amt
FROM id_air_k
  WHERE AIRK_KEY = p_key AND SUBSTR(airk_9,14,2) = 'K7'
    AND (SUBSTR(AIRK_0,1,3) = 'KFT' OR SUBSTR(AIRK_0,1,3) = 'KNT' OR SUBSTR(AIRK_0,1,3) = 'KST')
UNION ALL
SELECT       
  CASE SUBSTR(airk_10,1,1) WHEN 'O' THEN NULL ELSE CASE SUBSTR(airk_10,14,2) WHEN 'K7' THEN  SUBSTR(airk_10,14,2)  ELSE NULL END END v_tax_k7_code,
  CASE SUBSTR(airk_10,1,1) WHEN 'O' THEN 0 ELSE CASE SUBSTR(airk_10,14,2) WHEN 'K7' THEN IFNULL(CAST(SUBSTR(airk_10,5, INSTR(SUBSTR(airk_10,5),' '))AS DECIMAL(16,2)), 0) ELSE 0  END END v_tax_k7_amt
FROM id_air_k
  WHERE AIRK_KEY = p_key AND SUBSTR(airk_10,14,2) = 'K7'
    AND (SUBSTR(AIRK_0,1,3) = 'KFT' OR SUBSTR(AIRK_0,1,3) = 'KNT' OR SUBSTR(AIRK_0,1,3) = 'KST')
UNION ALL
SELECT       
  CASE SUBSTR(airk_11,1,1) WHEN 'O' THEN NULL ELSE CASE SUBSTR(airk_11,14,2) WHEN 'K7' THEN  SUBSTR(airk_11,14,2)  ELSE NULL END END v_tax_k7_code,
  CASE SUBSTR(airk_11,1,1) WHEN 'O' THEN 0 ELSE CASE SUBSTR(airk_11,14,2) WHEN 'K7' THEN IFNULL(CAST(SUBSTR(airk_11,5, INSTR(SUBSTR(airk_11,5),' '))AS DECIMAL(16,2)), 0) ELSE 0  END END v_tax_k7_amt
FROM id_air_k
  WHERE AIRK_KEY = p_key AND SUBSTR(airk_11,14,2) = 'K7'
    AND (SUBSTR(AIRK_0,1,3) = 'KFT' OR SUBSTR(AIRK_0,1,3) = 'KNT' OR SUBSTR(AIRK_0,1,3) = 'KST')
UNION ALL
 SELECT       
  CASE SUBSTR(airk_12,1,1) WHEN 'O' THEN NULL ELSE CASE SUBSTR(airk_12,14,2) WHEN 'K7' THEN  SUBSTR(airk_12,14,2)  ELSE NULL END END v_tax_k7_code,
  CASE SUBSTR(airk_12,1,1) WHEN 'O' THEN 0 ELSE CASE SUBSTR(airk_12,14,2) WHEN 'K7' THEN IFNULL(CAST(SUBSTR(airk_12,5, INSTR(SUBSTR(airk_12,5),' '))AS DECIMAL(16,2)), 0) ELSE 0  END END v_tax_k7_amt
FROM id_air_k
  WHERE AIRK_KEY = p_key AND SUBSTR(airk_12,14,2) = 'K7'
    AND (SUBSTR(AIRK_0,1,3) = 'KFT' OR SUBSTR(AIRK_0,1,3) = 'KNT' OR SUBSTR(AIRK_0,1,3) = 'KST')
UNION ALL
 SELECT       
  CASE SUBSTR(airk_13,1,1) WHEN 'O' THEN NULL ELSE CASE SUBSTR(airk_13,14,2) WHEN 'K7' THEN  SUBSTR(airk_13,14,2)  ELSE NULL END END v_tax_k7_code,
  CASE SUBSTR(airk_13,1,1) WHEN 'O' THEN 0 ELSE CASE SUBSTR(airk_13,14,2) WHEN 'K7' THEN IFNULL(CAST(SUBSTR(airk_13,5, INSTR(SUBSTR(airk_13,5),' '))AS DECIMAL(16,2)), 0) ELSE 0  END END v_tax_k7_amt
FROM id_air_k
  WHERE AIRK_KEY = p_key AND SUBSTR(airk_13,14,2) = 'K7'
    AND (SUBSTR(AIRK_0,1,3) = 'KFT' OR SUBSTR(AIRK_0,1,3) = 'KNT' OR SUBSTR(AIRK_0,1,3) = 'KST')
UNION ALL
 SELECT       
  CASE SUBSTR(airk_14,1,1) WHEN 'O' THEN NULL ELSE CASE SUBSTR(airk_14,14,2) WHEN 'K7' THEN  SUBSTR(airk_14,14,2)  ELSE NULL END END v_tax_k7_code,
  CASE SUBSTR(airk_14,1,1) WHEN 'O' THEN 0 ELSE CASE SUBSTR(airk_14,14,2) WHEN 'K7' THEN IFNULL(CAST(SUBSTR(airk_14,5, INSTR(SUBSTR(airk_14,5),' '))AS DECIMAL(16,2)), 0) ELSE 0  END END v_tax_k7_amt
FROM id_air_k
  WHERE AIRK_KEY = p_key AND SUBSTR(airk_14,14,2) = 'K7'
    AND (SUBSTR(AIRK_0,1,3) = 'KFT' OR SUBSTR(AIRK_0,1,3) = 'KNT' OR SUBSTR(AIRK_0,1,3) = 'KST')
UNION ALL
 SELECT       
  CASE SUBSTR(airk_15,1,1) WHEN 'O' THEN NULL ELSE CASE SUBSTR(airk_15,14,2) WHEN 'K7' THEN  SUBSTR(airk_15,14,2)  ELSE NULL END END v_tax_k7_code,
  CASE SUBSTR(airk_15,1,1) WHEN 'O' THEN 0 ELSE CASE SUBSTR(airk_15,14,2) WHEN 'K7' THEN IFNULL(CAST(SUBSTR(airk_15,5, INSTR(SUBSTR(airk_15,5),' '))AS DECIMAL(16,2)), 0) ELSE 0  END END v_tax_k7_amt
FROM id_air_k
  WHERE AIRK_KEY = p_key AND SUBSTR(airk_15,14,2) = 'K7'
    AND (SUBSTR(AIRK_0,1,3) = 'KFT' OR SUBSTR(AIRK_0,1,3) = 'KNT' OR SUBSTR(AIRK_0,1,3) = 'KST');   

DECLARE K7_FILE_EMD_CURSOR CURSOR FOR
 SELECT  DISTINCT     
  CASE SUBSTR(airk_33,3,1) WHEN 'O' THEN NULL ELSE CASE SUBSTR(airk_33,16,2) WHEN 'K7' THEN  SUBSTR(airk_33,16,2)  ELSE NULL END END v_tax_k7_code,
  CASE SUBSTR(airk_33,3,1) WHEN 'O' THEN 0 ELSE CASE SUBSTR(airk_33,16,2) WHEN 'K7' THEN IFNULL(CAST(SUBSTR(airk_33,5, INSTR(SUBSTR(airk_33,7, 9),' '))AS DECIMAL(16,2)), 0) ELSE 0  END END v_tax_k7_amt
FROM id_air_k
  WHERE AIRK_KEY = p_key AND SUBSTR(airk_33,16,2) = 'K7'  AND (SUBSTR(airk_0,1,3) = 'EMD');   

DECLARE ama_k_tax_cursor CURSOR FOR
 SELECT DISTINCT
     CASE SUBSTR(airk_1,1,1) WHEN 'O' THEN NULL ELSE CASE SUBSTR(airk_1,14,2) WHEN 'K7' THEN NULL ELSE SUBSTR(airk_1,14,2) END END tax1,CASE SUBSTR(airk_1,1,1) WHEN 'O' THEN 0 ELSE CASE SUBSTR(airk_1,14,2) WHEN 'K7' THEN 0 ELSE IFNULL(CAST(SUBSTR(airk_1,5, INSTR(SUBSTR(airk_1,5),' '))AS DECIMAL(16,2)), 0) END END taxa_1,
     CASE SUBSTR(airk_2,1,1) WHEN 'O' THEN NULL ELSE CASE SUBSTR(airk_2,14,2) WHEN 'K7' THEN NULL ELSE SUBSTR(airk_2,14,2) END END tax2,CASE SUBSTR(airk_2,1,1) WHEN 'O' THEN 0 ELSE CASE SUBSTR(airk_2,14,2) WHEN 'K7' THEN 0 ELSE IFNULL(CAST(SUBSTR(airk_2,5, INSTR(SUBSTR(airk_2,5),' '))AS DECIMAL(16,2)), 0) END END taxa_2,
     CASE SUBSTR(airk_3,1,1) WHEN 'O' THEN NULL ELSE CASE SUBSTR(airk_3,14,2) WHEN 'K7' THEN NULL ELSE SUBSTR(airk_3,14,2) END END tax3,CASE SUBSTR(airk_3,1,1) WHEN 'O' THEN 0 ELSE CASE SUBSTR(airk_3,14,2) WHEN 'K7' THEN 0 ELSE IFNULL(CAST(SUBSTR(airk_3,5, INSTR(SUBSTR(airk_3,5),' '))AS DECIMAL(16,2)), 0) END END taxa_3,
     CASE SUBSTR(airk_4,1,1) WHEN 'O' THEN NULL ELSE CASE SUBSTR(airk_4,14,2) WHEN 'K7' THEN NULL ELSE SUBSTR(airk_4,14,2) END END tax4,CASE SUBSTR(airk_4,1,1) WHEN 'O' THEN 0 ELSE CASE SUBSTR(airk_4,14,2) WHEN 'K7' THEN 0 ELSE IFNULL(CAST(SUBSTR(airk_4,5, INSTR(SUBSTR(airk_4,5),' '))AS DECIMAL(16,2)), 0) END END taxa_4,
     CASE SUBSTR(airk_5,1,1) WHEN 'O' THEN NULL ELSE CASE SUBSTR(airk_5,14,2) WHEN 'K7' THEN NULL ELSE SUBSTR(airk_5,14,2) END END tax5,CASE SUBSTR(airk_5,1,1) WHEN 'O' THEN 0 ELSE CASE SUBSTR(airk_5,14,2) WHEN 'K7' THEN 0 ELSE IFNULL(CAST(SUBSTR(airk_5,5, INSTR(SUBSTR(airk_5,5),' '))AS DECIMAL(16,2)), 0) END END taxa_5,
     CASE SUBSTR(airk_6,1,1) WHEN 'O' THEN NULL ELSE CASE SUBSTR(airk_6,14,2) WHEN 'K7' THEN NULL ELSE SUBSTR(airk_6,14,2) END END tax6,CASE SUBSTR(airk_6,1,1) WHEN 'O' THEN 0 ELSE CASE SUBSTR(airk_6,14,2) WHEN 'K7' THEN 0 ELSE IFNULL(CAST(SUBSTR(airk_6,5, INSTR(SUBSTR(airk_6,5),' '))AS DECIMAL(16,2)), 0) END END taxa_6,
     CASE SUBSTR(airk_7,1,1) WHEN 'O' THEN NULL ELSE CASE SUBSTR(airk_7,14,2) WHEN 'K7' THEN NULL ELSE SUBSTR(airk_7,14,2) END END tax7,CASE SUBSTR(airk_7,1,1) WHEN 'O' THEN 0 ELSE CASE SUBSTR(airk_7,14,2) WHEN 'K7' THEN 0 ELSE IFNULL(CAST(SUBSTR(airk_7,5, INSTR(SUBSTR(airk_7,5),' '))AS DECIMAL(16,2)), 0) END END taxa_7,
     CASE SUBSTR(airk_8,1,1) WHEN 'O' THEN NULL ELSE CASE SUBSTR(airk_8,14,2) WHEN 'K7' THEN NULL ELSE SUBSTR(airk_8,14,2) END END tax8,CASE SUBSTR(airk_8,1,1) WHEN 'O' THEN 0 ELSE CASE SUBSTR(airk_8,14,2) WHEN 'K7' THEN 0 ELSE IFNULL(CAST(SUBSTR(airk_8,5, INSTR(SUBSTR(airk_8,5),' '))AS DECIMAL(16,2)), 0) END END taxa_8,
     CASE SUBSTR(airk_9,1,1) WHEN 'O' THEN NULL ELSE CASE SUBSTR(airk_9,14,2) WHEN 'K7' THEN NULL ELSE SUBSTR(airk_9,14,2) END END tax9,CASE SUBSTR(airk_9,1,1) WHEN 'O' THEN 0 ELSE CASE SUBSTR(airk_9,14,2) WHEN 'K7' THEN 0 ELSE IFNULL(CAST(SUBSTR(airk_9,5, INSTR(SUBSTR(airk_9,5),' '))AS DECIMAL(16,2)), 0) END END taxa_9,
     CASE SUBSTR(airk_10,1,1) WHEN 'O' THEN NULL ELSE CASE SUBSTR(airk_10,14,2) WHEN 'K7' THEN NULL ELSE SUBSTR(airk_10,14,2) END END tax10,CASE SUBSTR(airk_10,1,1) WHEN 'O' THEN 0 ELSE CASE SUBSTR(airk_10,14,2) WHEN 'K7' THEN 0 ELSE IFNULL(CAST(SUBSTR(airk_10,5, INSTR(SUBSTR(airk_10,5),' '))AS DECIMAL(16,2)), 0) END END taxa_10,
     CASE SUBSTR(airk_11,1,1) WHEN 'O' THEN NULL ELSE CASE SUBSTR(airk_11,14,2) WHEN 'K7' THEN NULL ELSE SUBSTR(airk_11,14,2) END END tax11,CASE SUBSTR(airk_11,1,1) WHEN 'O' THEN 0 ELSE CASE SUBSTR(airk_11,14,2) WHEN 'K7' THEN 0 ELSE IFNULL(CAST(SUBSTR(airk_11,5, INSTR(SUBSTR(airk_11,5),' '))AS DECIMAL(16,2)), 0) END END taxa_11,
     CASE SUBSTR(airk_12,1,1) WHEN 'O' THEN NULL ELSE CASE SUBSTR(airk_12,14,2) WHEN 'K7' THEN NULL ELSE SUBSTR(airk_12,14,2) END END tax12,CASE SUBSTR(airk_12,1,1) WHEN 'O' THEN 0 ELSE CASE SUBSTR(airk_12,14,2) WHEN 'K7' THEN 0 ELSE IFNULL(CAST(SUBSTR(airk_12,5, INSTR(SUBSTR(airk_12,5),' '))AS DECIMAL(16,2)), 0) END END taxa_12,
     CASE SUBSTR(airk_13,1,1) WHEN 'O' THEN NULL ELSE CASE SUBSTR(airk_13,14,2) WHEN 'K7' THEN NULL ELSE SUBSTR(airk_13,14,2) END END tax13,CASE SUBSTR(airk_13,1,1) WHEN 'O' THEN 0 ELSE CASE SUBSTR(airk_13,14,2) WHEN 'K7' THEN 0 ELSE IFNULL(CAST(SUBSTR(airk_13,5, INSTR(SUBSTR(airk_13,5),' '))AS DECIMAL(16,2)), 0) END END taxa_13,
     CASE SUBSTR(airk_14,1,1) WHEN 'O' THEN NULL ELSE CASE SUBSTR(airk_14,14,2) WHEN 'K7' THEN NULL ELSE SUBSTR(airk_14,14,2) END END tax14,CASE SUBSTR(airk_14,1,1) WHEN 'O' THEN 0 ELSE CASE SUBSTR(airk_14,14,2) WHEN 'K7' THEN 0 ELSE IFNULL(CAST(SUBSTR(airk_14,5, INSTR(SUBSTR(airk_14,5),' '))AS DECIMAL(16,2)), 0) END END taxa_14,
     CASE SUBSTR(airk_15,1,1) WHEN 'O' THEN NULL ELSE CASE SUBSTR(airk_15,14,2) WHEN 'K7' THEN NULL ELSE SUBSTR(airk_15,14,2) END END tax15,CASE SUBSTR(airk_15,1,1) WHEN 'O' THEN 0 ELSE CASE SUBSTR(airk_15,14,2) WHEN 'K7' THEN 0 ELSE IFNULL(CAST(SUBSTR(airk_15,5, INSTR(SUBSTR(airk_15,5),' '))AS DECIMAL(16,2)), 0) END END taxa_15,
     CASE SUBSTR(airk_16,1,1) WHEN 'O' THEN NULL ELSE CASE SUBSTR(airk_16,14,2) WHEN 'K7' THEN NULL ELSE SUBSTR(airk_16,14,2) END END tax16,CASE SUBSTR(airk_16,1,1) WHEN 'O' THEN 0 ELSE CASE SUBSTR(airk_16,14,2) WHEN 'K7' THEN 0 ELSE IFNULL(CAST(SUBSTR(airk_16,5, INSTR(SUBSTR(airk_16,5),' '))AS DECIMAL(16,2)), 0) END END taxa_16,
     CASE SUBSTR(airk_17,1,1) WHEN 'O' THEN NULL ELSE CASE SUBSTR(airk_17,14,2) WHEN 'K7' THEN NULL ELSE SUBSTR(airk_17,14,2) END END tax17,CASE SUBSTR(airk_17,1,1) WHEN 'O' THEN 0 ELSE CASE SUBSTR(airk_17,14,2) WHEN 'K7' THEN 0 ELSE IFNULL(CAST(SUBSTR(airk_17,5, INSTR(SUBSTR(airk_17,5),' '))AS DECIMAL(16,2)), 0) END END taxa_17,
     CASE SUBSTR(airk_18,1,1) WHEN 'O' THEN NULL ELSE CASE SUBSTR(airk_18,14,2) WHEN 'K7' THEN NULL ELSE SUBSTR(airk_18,14,2) END END tax18,CASE SUBSTR(airk_18,1,1) WHEN 'O' THEN 0 ELSE CASE SUBSTR(airk_18,14,2) WHEN 'K7' THEN 0 ELSE IFNULL(CAST(SUBSTR(airk_18,5, INSTR(SUBSTR(airk_18,5),' '))AS DECIMAL(16,2)), 0) END END taxa_18,
     CASE SUBSTR(airk_19,1,1) WHEN 'O' THEN NULL ELSE CASE SUBSTR(airk_19,14,2) WHEN 'K7' THEN NULL ELSE SUBSTR(airk_19,14,2) END END tax19,CASE SUBSTR(airk_19,1,1) WHEN 'O' THEN 0 ELSE CASE SUBSTR(airk_19,14,2) WHEN 'K7' THEN 0 ELSE IFNULL(CAST(SUBSTR(airk_19,5, INSTR(SUBSTR(airk_19,5),' '))AS DECIMAL(16,2)), 0) END END taxa_19,
     CASE SUBSTR(airk_20,1,1) WHEN 'O' THEN NULL ELSE CASE SUBSTR(airk_20,14,2) WHEN 'K7' THEN NULL ELSE SUBSTR(airk_20,14,2) END END tax20,CASE SUBSTR(airk_20,1,1) WHEN 'O' THEN 0 ELSE CASE SUBSTR(airk_20,14,2) WHEN 'K7' THEN 0 ELSE IFNULL(CAST(SUBSTR(airk_20,5, INSTR(SUBSTR(airk_20,5),' '))AS DECIMAL(16,2)), 0) END END taxa_20
       FROM id_air_k
  WHERE airk_key = p_key
    AND (SUBSTR(airk_0,1,3) = 'KFT' OR SUBSTR(airk_0,1,3) = 'KNT' OR SUBSTR(airk_0,1,3) = 'KST');


 DECLARE tax_code_key CURSOR FOR 
 SELECT ttax_tax_key FROM t_id_tvl_tax_master WHERE ttax_code = tax_code;   

 DECLARE air_r_customer_cursor CURSOR FOR
  SELECT LPAD(LTRIM(RTRIM(SUBSTR(airr_0,7,10))),10,0) cust_code
  FROM id_air_r
  WHERE airr_key = p_key
    AND SUBSTR(airr_0,1,5) = 'RM*CN'
	UNION ALL
  SELECT LPAD(LTRIM(RTRIM(SUBSTR(aira_0,6,10))),10,0) cust_code
  FROM id_air_a
  WHERE aira_key = p_key
    AND SUBSTR(aira_0,1,5) = 'AITAN';

DECLARE air_r_lpo_cursor CURSOR FOR
  SELECT LTRIM(RTRIM(SUBSTR(airr_0,7,15))) lpo
  FROM id_air_r
  WHERE airr_key = p_key
    AND SUBSTR(airr_0,4,3) = 'LPO';

DECLARE air_r_sell_fare_cursor CURSOR FOR
  SELECT LTRIM(RTRIM(SUBSTR(airr_0,8))) sell_fare
  FROM id_air_r
  WHERE airr_key = p_key
    AND SUBSTR(airr_0,1,5) = 'RM*PF';

DECLARE air_r_high_fare_cursor CURSOR FOR
  SELECT LTRIM(RTRIM(SUBSTR(airr_0,7))) sell_fare
  FROM id_air_r
  WHERE airr_key = p_key
    AND SUBSTR(airr_0,1,5) = 'RM*RF';
	
	DECLARE default_agent_key CURSOR FOR
SELECT value FROM t_id_reference_codes_detail_view WHERE domain_name = 'GDS_File_Load'
AND CODE = 'DEFAULT_SUPPLIER';
	
DECLARE air_r_rsn_code_cursor CURSOR FOR
SELECT SUBSTR(airu_14,4)
FROM id_air_u
WHERE airu_key = p_key AND SUBSTR(airu_1,4,3) in ('CCR') AND airu_serial = art_serial;
	
 DECLARE master_rsn_key_cursor CURSOR FOR
    SELECT pfad_key FROM t_id_et_private_fare_acc_details WHERE pfad_hap_name = rsn_code;

	
	DECLARE air_r_low_fare_cursor CURSOR FOR
  SELECT LTRIM(RTRIM(SUBSTR(airr_0,7))) sell_fare
  FROM id_air_r
  WHERE airr_key = p_key
    AND SUBSTR(airr_0,1,5) = 'RM*LF';


DECLARE air_r_coll_fare_cursor CURSOR FOR
  SELECT LTRIM(RTRIM(SUBSTR(airr_0,8))) coll_fare
  FROM id_air_r
  WHERE airr_key = p_key
    AND SUBSTR(airr_0,4,4) = 'COLL';

DECLARE air_r_sales_exec_cursor CURSOR FOR
  SELECT LTRIM(RTRIM(SUBSTR(airr_0,8,10))) sales_exec
  FROM id_air_r
  WHERE airr_key = p_key
    AND SUBSTR(airr_0,4,4) = 'EXEC';

DECLARE udid_value_code_cursor CURSOR FOR
SELECT detail_key,code FROM t_id_reference_codes_detail_view
WHERE  CODE IN (
SELECT ADD_CODE FROM T_ID_DYNAMIC_DEFINITION 
WHERE ADD_LOV_SQL LIKE '%addLovSql%' AND ADD_KEY = dynamic_udid_key);

DECLARE ama_fm_comm_cursor CURSOR FOR
  SELECT LTRIM(RTRIM(TRIM(TRAILING 'N' FROM SUBSTR(airf_0, 6)))) comm_per
  FROM id_air_f
  WHERE airf_key = p_key
    AND SUBSTR(airf_0,1,3) = 'FM*';  
	
	DECLARE CAR_CFR_TKT_NO_CHK CURSOR FOR
SELECT DISTINCT 'Y' from t_id_tvl_car_voucher_details where cvd_confirmation_number = v_conf_number AND cvd_voucher_number = p_tkt_number;


DECLARE ama_fm_comm_cursor_1 CURSOR FOR
  SELECT LTRIM(RTRIM(TRIM(TRAILING 'P' FROM SUBSTR(airf_0, 3)))) comm_per
  FROM id_air_f
  WHERE airf_key = p_key
    AND SUBSTR(airf_0,1,3) != 'FM*' AND SUBSTR(airf_0,1,2) = 'FM';   

DECLARE customer_check_cursor CURSOR FOR
  SELECT CUSTOMER_KEY,CODE FROM t_id_cms_master WHERE LTRIM(TRIM(CODE)) = cust_code;

 DECLARE walk_brnch_cust_cursor CURSOR FOR
  SELECT CUSTOMER_KEY,CODE FROM t_id_cms_master WHERE LTRIM(TRIM(CODE)) IN (  
    SELECT rcd_abbreviation FROM t_id_reference_codes_detail,t_id_reference_codes_header 
      WHERE rcd_header_key = rch_header_key AND rch_domain_name='Branch_Walkin_Cust' AND rcd_value = t_location_name);  

DECLARE walk_customer_cursor CURSOR FOR
  SELECT CUSTOMER_KEY,CODE FROM t_id_cms_master WHERE LTRIM(TRIM(CODE)) IN (  
    SELECT rcd_abbreviation FROM t_id_reference_codes_detail,t_id_reference_codes_header 
      WHERE rcd_header_key = rch_header_key AND rch_domain_name='GDS_File_Load' AND rcd_value='WALK_IN_CUST');    

DECLARE ama_fp_pay_type_cursor CURSOR FOR
select * from
(SELECT INSTR(V_REM,'CC') CNT,
   SUBSTR(V_REM, INSTR(V_REM,'CC')+2 , 2 ) CARD_TYPE,
   CASE SUBSTR(V_REM, INSTR(V_REM,'CC')+4,INSTR( SUBSTR(V_REM, INSTR(V_REM,'CC')+4),'/' ) -1 ) WHEN '+' THEN NULL ELSE SUBSTR(V_REM, INSTR(V_REM,'CC')+4,INSTR( SUBSTR(V_REM, INSTR(V_REM,'CC')+4),'/' ) -1 ) END CARD_NUMBER,
   SUBSTR(V_REM, INSTR(V_REM,'/')+1,INSTR( SUBSTR(V_REM, INSTR(V_REM,'/')+1),'/' ) -1 ) EXPIRY_DATE
   FROM 
   (SELECT CASE SIGN(LOCATE('CCC',airf_0,1)) 
   WHEN '1' THEN SUBSTR(airf_0,INSTR(airf_0,SUBSTRING_INDEX(airf_0,'CCC',-1))-3) 
   ELSE SUBSTR(airf_0,INSTR(airf_0,SUBSTRING_INDEX(airf_0,'CC',-1))-2)  END V_REM
   FROM id_air_f 
   WHERE airf_key=p_key  AND ((SUBSTR(airf_0,1,2) = 'FP' AND SUBSTR(airf_0,1,3) = 'FPO') OR (SUBSTR(airf_0,1,3) = 'MFP' AND SUBSTR(airf_0,1,4) = 'MFPO')) ) AS V_VALUE
UNION ALL
  SELECT  INSTR(airf_0,'CC') cnt, SUBSTR(airf_0, INSTR(airf_0,'CC')+2 , 2 ) card_type,
   SUBSTR(airf_0, INSTR(airf_0,'CC')+4,INSTR( SUBSTR(airf_0, INSTR(airf_0,'CC')+4),'/' ) -1 ) card_number,
   SUBSTR(airf_0, INSTR(airf_0,'/')+1,INSTR( SUBSTR(airf_0, INSTR(airf_0,'/')+1),'/' ) -1 ) expiry_date
 FROM id_air_f
  WHERE airf_key = p_key
  AND ((SUBSTR(airf_0,1,2) = 'FP' AND SUBSTR(airf_0,1,3) <> 'FPO') OR
    (SUBSTR(airf_0,1,3) = 'MFP' AND SUBSTR(airf_0,1,4) <> 'MFPO')))t
  where length(card_number) >0 and length(expiry_date) > 0
  and card_number NOT REGEXP '[:digit:]';


 DECLARE card_type_cursor CURSOR FOR   
    SELECT cc_key crd_key,CODE crd_type,NAME crd_name,cc_status crd_an_key,cc_status_code crd_an_code,cc_status_name crd_an_name,cc_service_fee_percentage crd_srv_fee,cc_own_lodge_card_status crd_lodge_status,cc_own_lodge_card_number crd_lodge_num FROM `v_id_credit_card_type_master`
  WHERE active_status='A' AND CODE = tkt_card_type;

 DECLARE fop_more_details_cursor CURSOR FOR  
  SELECT tsd_definition_key FROM `v_id_tvl_settlement_setup_dtl` WHERE tsd_setup_code = FOP_VALUE
  AND tsd_definition_code = definition_code ;  

DECLARE ama_i_pax_cursor CURSOR FOR
  SELECT LTRIM(RTRIM(REPLACE(REPLACE(REPLACE(substr(airi_1,3),'(ADT)',''),'(CHD)',''),'(INF)',''))) pax_name
  FROM id_air_i
  WHERE airi_key = p_key
  AND ( LTRIM(RTRIM(SUBSTR(airi_1, 3) )) != '');

DECLARE ama_i_pax_dkt_cursor CURSOR FOR
  SELECT LTRIM(RTRIM(REPLACE(REPLACE(REPLACE(substr(airi_1,3),'(ADT)',''),'(CHD)',''),'(INF)',''))) pax_dkt_name
  FROM id_air_i
  WHERE airi_key = p_key 
  AND ( LTRIM(RTRIM(SUBSTR(airi_1, 3) )) != '')
  ORDER BY airi_serial;    
DECLARE Remarks_currency_cursor CURSOR FOR 
SELECT SUBSTR(airr_0,9,3) FROM id_air_r 
WHERE airr_key = p_key 
AND substr(airr_0,1,7) = 'RM*RATE' 
AND substr(airr_0,9,3)
IN (SELECT CURRENCY_CODE 
FROM T_ID_CURRENCY_MASTER);

DECLARE Remarks_rate_cursor CURSOR for
SELECT substr(airr_0,9) FROM id_air_r WHERE airr_key = p_key AND substr(airr_0,1,7) = 'RM*RATE';

DECLARE Remarks_rate_curr_cursor CURSOR for
SELECT SUBSTR(airr_0,12) FROM id_air_r WHERE airr_key = p_key AND substr(airr_0,1,7) = 'RM*RATE';

DECLARE Remarks_rate_chk_cursor CURSOR for
SELECT DISTINCT 'Y' from id_air_r WHERE airr_key = p_key AND substr(airr_0,1,7) = 'RM*RATE';

DECLARE Remarks_currency_chk_cursor CURSOR FOR 
SELECT DISTINCT 'Y' FROM id_air_r 
WHERE airr_key = p_key
AND substr(airr_0,1,7) = 'RM*RATE' 
AND substr(airr_0,9,3)
IN (SELECT CURRENCY_CODE 
FROM T_ID_CURRENCY_MASTER);

DECLARE Remarks_count_cursor CURSOR for
SELECT SUBSTR(airr_0,9) FROM id_air_r WHERE airr_key = p_key AND substr(airr_0,1,7) = 'RM*UNIT';


DECLARE u_rate_cursor CURSOR FOR
SELECT SUBSTR(airu_30,11,INSTR(SUBSTR(airu_30,11),'BR')-1) rate FROM id_air_u
WHERE substr(airu_1,4,3) IN ('CCR')
AND SUBSTR(airu_30,1,3) = 'RB-'
AND airu_key =p_key;

DECLARE u_curr_code_cursor CURSOR FOR
SELECT SUBSTR(airu_30,8,3) curr FROM id_air_u
WHERE substr(airu_1,4,3) IN ('CCR')
AND SUBSTR(airu_30,1,3) = 'RB-'
AND airu_key =p_key; 
  

 DECLARE vat_master_cursor_main CURSOR FOR
 SELECT applied_on_code,applied_on_value,tvs_inter_domestic,tvs_product_type,tvs_package_normal,tvs_output_input_type,
  tvs_percentage,tvs_applicable_from,tvs_applied_on,tcm_code,tcm_description,tvs_inclusive_exclsive,inclusive_exclsive_code,
  inclusive_exclsive_value,tvs_collection_type,collection_code,io_type_code,io_type_value
  FROM v_id_tvl_vat_setup 
  WHERE product_code = 'HTL' AND package_code = prcss_code AND INTER_DOMESTIC_CODE=inter_domestic AND tvs_applicable_from<=CURRENT_DATE 
  AND active_status='A' AND applied_on_code NOT IN ('T','S')
  ORDER BY tvs_applicable_from DESC;

DECLARE vat_master_cursor CURSOR FOR
 SELECT tcm_code,tcm_description,inclusive_exclsive_code,collection_code,io_type_code,applied_on_value,tvs_percentage
  FROM v_id_tvl_vat_setup 
  WHERE product_code = 'HTL' AND package_code = prcss_code AND INTER_DOMESTIC_CODE=inter_domestic AND tvs_applicable_from<=CURRENT_DATE 
  AND active_status='A' AND applied_on_code IN (vat_applied_on)
  ORDER BY tvs_applicable_from DESC;

DECLARE vat_exempt_cursor_main CURSOR FOR
 SELECT applied_on_code,applied_on_value,tvs_inter_domestic,tvs_product_type,tvs_package_normal,tvs_output_input_type,
  tvs_percentage,tvs_applicable_from,tvs_applied_on,tcm_code,tcm_description,tvs_inclusive_exclsive,inclusive_exclsive_code,
  inclusive_exclsive_value,tvs_collection_type,collection_code,io_type_code,io_type_value
  FROM t_id_tvl_vat_setup_exempt 
  WHERE product_code = 'HTL' AND package_code = prcss_code AND INTER_DOMESTIC_CODE=inter_domestic AND tvs_applicable_from<=CURRENT_DATE 
  AND active_status='A' AND applied_on_code NOT IN ('T','S')
  ORDER BY tvs_applicable_from DESC;

DECLARE vat_exempt_cursor CURSOR FOR
 SELECT tcm_code,tcm_description,inclusive_exclsive_code,collection_code,io_type_code,applied_on_value,tvs_percentage
  FROM t_id_tvl_vat_setup_exempt 
  WHERE product_code = 'HTL' AND package_code = prcss_code AND INTER_DOMESTIC_CODE=inter_domestic AND tvs_applicable_from<=CURRENT_DATE 
  AND active_status='A' AND applied_on_code IN (vat_applied_on)
  ORDER BY tvs_applicable_from DESC;

DECLARE vat_in_out_cursor CURSOR FOR
 SELECT tvc_inoutput_code,SUM(tvc_amount) FROM t_id_tvl_vat_charge_details WHERE tvc_ticket_key=@TKT_KEY
 AND tvc_docket_key =  @dkt_key_no AND tvc_product_key = tkt_prd_key
 GROUP BY tvc_inoutput_code;          

  DECLARE class_master_key CURSOR FOR
  SELECT clsm_key FROM t_id_tvl_class_master WHERE LTRIM(RTRIM(CODE)) = LTRIM(RTRIM(t_sec_class));  

  DECLARE currency_key_cursor CURSOR FOR
  SELECT currency_key FROM t_id_currency_master WHERE LTRIM(RTRIM(CODE))=tkt_currency;

  DECLARE iata_agent_cursor CURSOR FOR
  SELECT VALUE FROM t_id_reference_codes_detail_view WHERE domain_name='IATA_AGENT' AND LTRIM(RTRIM(CODE))=tmp_iata_code;

  DECLARE iata_location_cursor CURSOR FOR
  SELECT VALUE FROM t_id_reference_codes_detail_view WHERE domain_name='IATA_LOCATION' AND LTRIM(RTRIM(CODE))=tmp_iata_code;

  DECLARE pax_category_cursor CURSOR FOR
  SELECT detail_key FROM t_id_reference_codes_detail_view WHERE domain_name='Pax Type' AND LTRIM(RTRIM(CODE))=passenger_age_type;

  DECLARE location_issue_book CURSOR FOR
  SELECT VALUE FROM t_id_reference_codes_detail_view WHERE domain_name='LOC_ISSUE_BOOK';  

  DECLARE air_r_source_agent_key CURSOR FOR
    SELECT LPAD(LTRIM(RTRIM(REPLACE(SUBSTR(airr_0,7,10),'/',''))),8,0)
  FROM id_air_r
  WHERE airr_key = p_key
    AND SUBSTR(airr_0,1,6) = 'RM*VNO';
	
  DECLARE air_div_source_agent_key CURSOR FOR
    SELECT LTRIM(RTRIM(SUBSTR(airr_0,8,10))) v_brnch_code
  FROM id_air_r
  WHERE airr_key = p_key
    AND SUBSTR(airr_0,1,6) = 'RM*DIV'
	AND SUBSTR(airr_1,1,1) ='P'
	AND  SUBSTR(airr_1,2) = p_air_serial;
	
	 DECLARE air_r_branch_agent_key CURSOR FOR
	   SELECT substr(airr_0,15) v_brnch_name
	   FROM id_air_r
  WHERE airr_key = p_key
  AND  SUBSTR(airr_0,1,12) = 'RM TEAM NAME';
	
   DECLARE source_agent_key CURSOR FOR
   SELECT customer_key from t_id_cms_master where active_status = 'A' and code = vno_agent_key;
  
  

  DECLARE iata_agent_key CURSOR FOR
   SELECT B.CUSTOMER_KEY FROM t_id_reference_codes_detail_view A,t_id_cms_master B, t_id_reference_codes_detail_view C
    WHERE A.domain_name='IATA_AGENT' AND C.domain_name='AccountType' 
    AND LTRIM(RTRIM(A.CODE))=tmp_iata_code AND LTRIM(RTRIM(C.VALUE))='Supplier'
    AND LTRIM(RTRIM(A.VALUE)) = LTRIM(RTRIM(B.CODE)) AND C.profile_key='4' AND A.profile_key='4'
    AND C.profile_key = B.profile_key AND A.profile_key = B.profile_key AND A.profile_key = C.profile_key;

  DECLARE iata_location_key CURSOR FOR
    SELECT B.BM_KEY,B.code FROM t_id_reference_codes_detail_view A,t_id_tvl_branch_master B 
  WHERE A.domain_name='IATA_LOCATION' AND LTRIM(RTRIM(A.CODE))=tmp_iata_code
  AND LTRIM(RTRIM(A.VALUE)) = LTRIM(RTRIM(B.CODE)) AND A.profile_key = B.profile_key ;

  DECLARE pcc_location_key CURSOR FOR
    SELECT B.BM_KEY,B.CODE FROM t_id_reference_codes_detail_view A,t_id_tvl_branch_master B 
  WHERE A.domain_name='PCC_LOCATION' AND LTRIM(RTRIM(A.CODE)) = pcc_loc
  AND LTRIM(RTRIM(A.VALUE)) = LTRIM(RTRIM(B.CODE)) ;

  DECLARE brnch_location_key CURSOR FOR
  SELECT bm_key,CODE,NAME FROM t_id_tvl_branch_master WHERE CODE = v_brnch_code;
  
    DECLARE brnch_location_name CURSOR FOR
  SELECT bm_key,CODE,NAME FROM t_id_tvl_branch_master WHERE name like concat('%',v_brnch_name,'%');
  
    DECLARE brnch_name_location_key CURSOR FOR
  SELECT bm_key,CODE,NAME FROM t_id_tvl_branch_master WHERE NAME LIKE CONCAT ('%',v_brnch_name,'%');

  DECLARE tkt_clerk_location_key CURSOR FOR
  SELECT bm_key,CODE,NAME FROM t_id_tvl_branch_master WHERE bm_key = ticket_clerk_branch;

  DECLARE product_key_cursor CURSOR FOR
  SELECT eptm_key FROM t_id_tvl_product_type_master WHERE LTRIM(RTRIM(CODE))=prd_type;

  DECLARE fop_settlement_cursor CURSOR FOR
  SELECT tss_key FROM t_id_tvl_settlement_setup WHERE UPPER(LTRIM(RTRIM(CODE)))=(FOP_VALUE);

  DECLARE dkt_pnr_exist_cursor CURSOR FOR

  SELECT MAX(dkt_number) FROM t_id_tvl_docket_header WHERE LTRIM(RTRIM(dkt_transaction_reference))=pnr_number AND dkt_status = 'A';

  DECLARE ticket_check_cursor CURSOR FOR
  SELECT 'V' from t_id_tvl_car_voucher_details where cvd_confirmation_number = ticket_check_cursor_tkt;

 DECLARE dkt_head_sumry_cursor CURSOR FOR  
 SELECT dkts_key,dkt_account_status,dkt_car_count FROM t_id_tvl_docket_header_summary WHERE dkt_number = dkt_num AND dkt_status ='A'; 

  DECLARE dkt_type_cursor CURSOR FOR
  SELECT VALUE FROM t_id_reference_codes_detail_view WHERE domain_name ='Branch_Doc_Type' AND CODE = dkt_value;
       

  DECLARE COUNTRY_KEY_CURSOR CURSOR FOR 
SELECT  ifnull(COUNTRY_KEY,0) FROM CNTRY_MASTER_DUMMY WHERE COUNTRY_NAME LIKE CONCAT('%',v_country_name,'%');

DECLARE default_country_key CURSOR FOR
SELECT value FROM t_id_reference_codes_detail_view WHERE domain_name = 'GDS_File_Load'
AND CODE = 'DEFAULT_COUNTRY';

  DECLARE Docket_Type_Key CURSOR FOR  
  SELECT DOC_KEY FROM T_ID_DOCUMENT_TYPE_MASTER WHERE DOC_TYPE_CODE = LTRIM(RTRIM(dkt_type_value));

  DECLARE VAT_EXMPT_CUST_CURSOR CURSOR FOR
  SELECT 'Y' FROM t_id_tvl_vat_setup_exempt WHERE tvse_customer_key =  cust_key ;

  DECLARE inter_domestic_key_cursor CURSOR FOR
  SELECT detail_key FROM t_id_reference_codes_detail_view WHERE domain_name ='InternationalDomestic' AND CODE = inter_domestic;

  DECLARE service_type_key_cursor CURSOR FOR 
  SELECT detail_key FROM t_id_reference_codes_detail_view WHERE domain_name ='TransactionType' AND CODE = 'I';

  DECLARE process_type_cursor CURSOR FOR
  SELECT detail_key FROM t_id_reference_codes_detail_view WHERE domain_name ='ProcessType' AND UPPER(VALUE) = procss_typ;

  DECLARE issue_mode_cursor CURSOR FOR
  SELECT detail_key FROM t_id_reference_codes_detail_view WHERE domain_name ='Issue Mode' AND UPPER(CODE) = v_issue_mode;

  DECLARE GDS_File_Service_Cursor CURSOR FOR
  SELECT VALUE srv_fee,CODE srv_code FROM t_id_reference_codes_detail_view WHERE domain_name ='GDS_FILE_SRV_FEE';

  DECLARE default_service_fee_cursor CURSOR FOR
  SELECT ascd_serv_chg_id service_id,asc_charge_key service_key,charge_code service_code,charge_name service_name,
  ascd_discount_amt discount_amount,ascd_serv_chrg_mode_code charge_mode,ascd_chrg_apply_on_code charge_on_amount,
  ascd_serv_chrg_book charge_amount,ascd_serv_chrg_adult charge_adult_amount,ascd_serv_chrg_child charge_child_amount,
  ascd_serv_chrg_infant charge_infant_amount
  FROM `v_id_tvl_cms_air_srv_chrg_detail_rule` WHERE 
  (tkt_type_code = 'ALL' OR tkt_type = inter_domestic_key) AND 
  (airmas_code = 'ALL' OR airline_code = air_rls_key) AND 
  (class_type_code = 'A' OR class_type = tmp_class) AND 
  (tkt_date BETWEEN IFNULL(effective_from,CURRENT_DATE) AND IFNULL(effective_to,CURRENT_DATE)) AND
  cms_code IS NULL AND active_status = 'A';

  DECLARE file_service_fee_cursor CURSOR FOR
 SELECT car_serv_charge_id AS service_id,cscd_id AS service_key,car_serv_chg_name AS service_name from 
 t_id_et_car_srv_charge JOIN t_id_et_car_srv_chrg_comp_details ON (car_serv_charge_id=cscd_car_serv_chg_id)
WHERE car_serv_chg_name = srv_fee_code
AND t_id_et_car_srv_charge.active_status = 'A';

  DECLARE cust_service_fee_check CURSOR FOR
  SELECT 'Y' FROM `v_id_tvl_cms_air_srv_chrg_detail_rule` 
  WHERE cms_code = cust_code AND active_status = 'A';

  DECLARE cust_service_fee_cursor CURSOR FOR
  SELECT ascd_serv_chg_id service_id,asc_charge_key service_key,charge_code service_code,charge_name service_name,
  ascd_discount_amt discount_amount,ascd_serv_chrg_mode_code charge_mode,ascd_chrg_apply_on_code charge_on_amount,
  ascd_serv_chrg_book charge_amount,ascd_serv_chrg_adult charge_adult_amount,ascd_serv_chrg_child charge_child_amount,
  ascd_serv_chrg_infant charge_infant_amount
  FROM `v_id_tvl_cms_air_srv_chrg_detail_rule` WHERE 
  (tkt_type_code = 'ALL' OR tkt_type = inter_domestic_key) AND 
  (airmas_code = 'ALL' OR airline_code = air_rls_key) AND 
  (class_type_code = 'A' OR class_type = tmp_class) AND 
  (tkt_date BETWEEN IFNULL(effective_from,CURRENT_DATE) AND IFNULL(effective_to,CURRENT_DATE)) AND
  cms_code = cust_code AND active_status = 'A';

  DECLARE CONTINUE HANDLER FOR NOT FOUND SET DONE = TRUE;

  DECLARE EXIT HANDLER FOR SQLEXCEPTION
  BEGIN
    GET CURRENT DIAGNOSTICS CONDITION 1
      errno = MYSQL_ERRNO, msg = MESSAGE_TEXT;
      SET P_SUCCESS ='N';
                INSERT INTO t_id_gds_loading_exception (LE_COMPANY,LE_CRS,LE_AIRLINE,LE_TICKET_NUMBER,LE_LOAD_DATE,LE_LOAD_ERROR,
					    LE_LOAD_PLACE,LE_REMARK_1,LE_REMARK_2,LE_REMARK_3,LE_REMARK_4,lock_key,profile_key) 
				VALUES('1','AMADEUS_CAR',NULL,excep_conf_num,CURRENT_DATE,msg,p_cursor,CONCAT('Reference Key',p_key),NULL,NULL,IFNULL(pnr_number,'NULL'),0,4);

  END;

  DECLARE EXIT HANDLER FOR 1265
  BEGIN
    GET CURRENT DIAGNOSTICS CONDITION 1
      errno = MYSQL_ERRNO, msg = MESSAGE_TEXT;
      SET P_SUCCESS ='N';
                INSERT INTO t_id_gds_loading_exception (LE_COMPANY,LE_CRS,LE_AIRLINE,LE_TICKET_NUMBER,LE_LOAD_DATE,LE_LOAD_ERROR,
					    LE_LOAD_PLACE,LE_REMARK_1,LE_REMARK_2,LE_REMARK_3,LE_REMARK_4,lock_key,profile_key) 
				VALUES('1','AMADEUS_CAR',NULL,excep_conf_num,CURRENT_DATE,msg,p_cursor,CONCAT('Reference Key',p_key),NULL,NULL,IFNULL(pnr_number,'NULL'),0,4);

  END;

  SET P_SUCCESS ='N';
  SET BDF =0;

  OPEN  excep_conf_num_cursor;
  FETCH excep_conf_num_cursor INTO excep_conf_num;
  CLOSE excep_conf_num_cursor;
  
  OPEN air_void_cursor;
  FETCH air_void_cursor INTO air_void;
  CLOSE air_void_cursor;

  OPEN refund_exist_cursor;
  FETCH refund_exist_cursor INTO air_rfnd;
  CLOSE refund_exist_cursor;




 IF IFNULL(LTRIM(RTRIM(air_void)),'NORMAL') != 'VOID' AND IFNULL(LTRIM(RTRIM(air_rfnd)),'SL') !='RF' THEN

  OPEN find_iata_cursor;
  FETCH find_iata_cursor INTO tmp_iata_code,pnr_number,bk_pcc,iss_pcc;
  CLOSE find_iata_cursor;

  
 OPEN booking_clerk_cursor;
  FETCH booking_clerk_cursor INTO book_clerk;
  CLOSE booking_clerk_cursor; 
  
  OPEN ticketing_clerk_cursor;
  FETCH ticketing_clerk_cursor INTO ticket_clerk;
  CLOSE ticketing_clerk_cursor; 
  
  
  INSERT INTO ID_KK_TEST(COL1,COL2) VALUES ('444',CONCAT('4 DIGIT TC CODE','-',ticket_clerk));

  INSERT INTO ID_KK_TEST(COL1,COL2) VALUES ('444',CONCAT('4 DIGIT BC CODE','-',book_clerk));  
  
   OPEN ticket_clerk_key_check_cursor;
  FETCH ticket_clerk_key_check_cursor INTO ticket_clerk_check;
  CLOSE ticket_clerk_key_check_cursor; 
  
  
   OPEN book_clerk_key_check_cursor;
  FETCH book_clerk_key_check_cursor INTO book_clerk_check;
  CLOSE book_clerk_key_check_cursor; 
  
  
  
  INSERT INTO ID_KK_TEST(COL1,COL2) VALUES ('4224',CONCAT('ticket_clerk_check','-',ticket_clerk_check));

  INSERT INTO ID_KK_TEST(COL1,COL2) VALUES ('4234',CONCAT('book_clerk_check','-',book_clerk_check));  
  
  IF IFNULL(ticket_clerk_check,'N')= 'N' and IFNULL(book_clerk_check,'N')= 'Y'  THEN
  SET ticket_clerk = book_clerk;
  
  INSERT INTO ID_KK_TEST(COL1,COL2) VALUES ('4235',CONCAT('BC=TC','-',ticket_clerk));
  END IF ;
  
  SET exp_tkt_clerk = ticket_clerk;
  
IF IFNULL(ticket_clerk_check,'N')= 'N' and IFNULL(book_clerk_check,'N')= 'N'  THEN
  OPEN ama_c_clerk_cursor;
  FETCH ama_c_clerk_cursor INTO book_clerk_code,ticket_clerk_code;
  CLOSE ama_c_clerk_cursor;
  
  
  INSERT INTO ID_KK_TEST(COL1,COL2) VALUES ('444',CONCAT('2 DIGIT TC CODE','-',ticket_clerk_code));

  INSERT INTO ID_KK_TEST(COL1,COL2) VALUES ('444',CONCAT('2 DIGIT BC CODE','-',book_clerk_code));
  
  IF ticket_clerk_code IS NULL AND book_clerk_code IS NOT NULL THEN 
  SET ticket_clerk_code = book_clerk_code;
  END IF;
  
  OPEN ama_tc_clerk_cursor;
  FETCH ama_tc_clerk_cursor INTO ticket_clerk;
  CLOSE ama_tc_clerk_cursor;
  
  INSERT INTO ID_KK_TEST(COL1,COL2) VALUES ('444',CONCAT('EXEC REMARKS DIGIT TC CODE','-',ticket_clerk));
  END IF;
  
   OPEN book_clerk_key_cursor;
   FETCH book_clerk_key_cursor INTO book_clerk_key;
   CLOSE book_clerk_key_cursor;
  
   OPEN ticket_clerk_key_cursor;
   FETCH ticket_clerk_key_cursor INTO ticket_clerk_key,ticket_clerk_branch;
   CLOSE ticket_clerk_key_cursor;
  
  IF book_clerk_key IS NULL AND ticket_clerk_key IS NOT NULL THEN
     SET book_clerk_key = ticket_clerk_key;
  ELSEIF book_clerk_key IS NOT NULL AND ticket_clerk_key IS NULL THEN
     SET ticket_clerk_key = book_clerk_key;
  END IF;
  
  INSERT INTO ID_KK_TEST(COL1,COL2) VALUES ('8855',CONCAT('ticket_clerk_key','-',ticket_clerk_key));
  
   IF IFNULL(ticket_clerk_key,'XXX') = 'XXX' THEN
SET msg = 'Executive Master';
SET p_cursor_1 = CONCAT('Ticketing Agent code (',exp_tkt_clerk,') missing in executive master' );
SET default_msg = 'Ticket loaded with default Ticketing Agent code';
SET P_SUCCESS = 'N';
INSERT INTO t_id_gds_loading_exception (LE_COMPANY,LE_CRS,LE_AIRLINE,LE_TICKET_NUMBER,LE_LOAD_DATE,LE_LOAD_ERROR,
LE_LOAD_PLACE,LE_REMARK_1,LE_REMARK_2,LE_REMARK_3,LE_REMARK_4,lock_key,profile_key) 
VALUES('1','AMADEUS',Null,excep_conf_num,CURRENT_DATE,msg,p_cursor_1,CONCAT('Reference -',p_key),default_msg,NULL,IFNULL(pnr_number,'NULL'),0,4);

  OPEN  default_clerk_cursor;
  FETCH default_clerk_cursor INTO ticket_clerk;
  CLOSE default_clerk_cursor;
 
  INSERT INTO ID_KK_TEST(COL1,COL2) VALUES ('8865',CONCAT('FINAL default CODE','-',ticket_clerk));
END IF;
  
  
  INSERT INTO ID_KK_TEST(COL1,COL2) VALUES ('8866',CONCAT('FINAL TC CODE','-',ticket_clerk));


  OPEN  location_issue_book;
  FETCH location_issue_book INTO t_iss_bk;
  CLOSE location_issue_book;

  IF t_iss_bk = 'I' THEN
    SET pcc_loc =  iss_pcc; 
  ELSE 
    SET pcc_loc =  bk_pcc;
  END IF;

  OPEN pcc_clerk_key_cursor;
  FETCH pcc_clerk_key_cursor INTO ticket_clerk_key,ticket_clerk_branch;
  CLOSE pcc_clerk_key_cursor;

  IF  ticket_clerk_branch IS NULL THEN
   OPEN book_clerk_key_cursor;
   FETCH book_clerk_key_cursor INTO book_clerk_key;
   CLOSE book_clerk_key_cursor;

   OPEN ticket_clerk_key_cursor;
   FETCH ticket_clerk_key_cursor INTO ticket_clerk_key,ticket_clerk_branch;
   CLOSE ticket_clerk_key_cursor;
  END IF; 

   IF book_clerk_key IS NULL AND ticket_clerk_key IS NOT NULL THEN
     SET book_clerk_key = ticket_clerk_key;
  ELSEIF book_clerk_key IS NOT NULL AND ticket_clerk_key IS NULL THEN
     SET ticket_clerk_key = book_clerk_key;
  END IF;

  OPEN user_comp_profile_cursor;
  FETCH user_comp_profile_cursor INTO user_comp_profile_key;
  CLOSE user_comp_profile_cursor;

  OPEN ticket_user_key_cursor;
  FETCH ticket_user_key_cursor INTO user_created_key,user_profile_key;
  CLOSE ticket_user_key_cursor;

  IF user_created_key IS NULL THEN
   OPEN user_created_cursor;
   FETCH user_created_cursor INTO user_created_key,user_profile_key;
   CLOSE user_created_cursor;
  END IF;  

  SET p_cursor = ' Ticket Date';    
  OPEN ama_d_date_cursor;
  FETCH ama_d_date_cursor INTO tkt_date;
  CLOSE ama_d_date_cursor;


 SET p_cursor = concat(' tkt_date validate ', tvl_date);    

 IF tkt_date > tvl_date THEN
   SET tvl_date =  STR_TO_DATE(  CONCAT(IFNULL(DATE_FORMAT(tvl_date,'%d%b'), ''),IFNULL((DATE_FORMAT(tvl_date,'%Y') + 1), '')),'%d%b%Y');
 END IF;

  SET p_cursor = ' Error : iata_agent_code';    
  OPEN  iata_agent_cursor;
  FETCH iata_agent_cursor INTO t_iata_agent;
  CLOSE iata_agent_cursor;



  OPEN  air_r_source_agent_key;
  FETCH air_r_source_agent_key INTO vno_agent_key;
  CLOSE air_r_source_agent_key; 

  
 INSERT INTO ID_KK_TEST(COL1,COL2) VALUES ('1232',CONCAT('F_SRC_AGENT',' ',vno_agent_key,' ',length(vno_agent_key)));

 SET vno_agent_key = RTRIM(LTRIM(LPAD(vno_agent_key,8,0)));
 
 INSERT INTO ID_KK_TEST(COL1,COL2) VALUES ('120032',CONCAT('F_SRC_AGENT',' ',vno_agent_key,' ',length(vno_agent_key)));
 
 SET p_cursor = ' Error : source_agent_key';         
  OPEN  source_agent_key;
  FETCH source_agent_key INTO src_agent_key;
  CLOSE source_agent_key;
  
 INSERT INTO ID_KK_TEST(COL1,COL2) VALUES ('21001',CONCAT('M-SRC_AGENT',' ',src_agent_key));
 
   IF IFNULL(src_agent_key,0) = 0 THEN
  
     SET msg = 'Business Partner';
	SET p_cursor_1 = CONCAT('Supplier code (',vno_agent_key,') missing in Business partner' );
   SET default_msg = 'Ticket loaded with default Supplier code';
   
    INSERT INTO t_id_gds_loading_exception (LE_COMPANY,LE_CRS,LE_AIRLINE,LE_TICKET_NUMBER,LE_LOAD_DATE,LE_LOAD_ERROR,
					    LE_LOAD_PLACE,LE_REMARK_1,LE_REMARK_2,LE_REMARK_3,LE_REMARK_4,lock_key,profile_key) 
				VALUES('1','AMADEUS_CAR',NULL,v_conf_number,CURRENT_DATE,msg,p_cursor_1,CONCAT('Reference -',p_key),default_msg,NULL,IFNULL(pnr_number,'NULL'),0,4);
  
  OPEN  default_agent_key;
  FETCH default_agent_key INTO vno_agent_key;
  CLOSE default_agent_key; 
END IF;
  
 INSERT INTO ID_KK_TEST(COL1,COL2) VALUES ('1232',CONCAT('F_SRC_AGENT',' ',vno_agent_key));
 
 SET p_cursor = ' Error : source_agent_key';         
  OPEN  source_agent_key;
  FETCH source_agent_key INTO src_agent_key;
  CLOSE source_agent_key;
  
 INSERT INTO ID_KK_TEST(COL1,COL2) VALUES ('1231',CONCAT('M-SRC_AGENT',' ',src_agent_key));
   
  OPEN  air_div_source_agent_key;
  FETCH air_div_source_agent_key INTO v_brnch_code;
  CLOSE air_div_source_agent_key; 
  
  
 INSERT INTO ID_KK_TEST(COL1,COL2) VALUES ('300231',CONCAT('F_BRNCH_CODE',' ',v_brnch_code));
  
    OPEN  air_r_branch_agent_key;
  FETCH air_r_branch_agent_key INTO v_brnch_name;
  CLOSE air_r_branch_agent_key; 
   
 INSERT INTO ID_KK_TEST(COL1,COL2) VALUES ('4232',CONCAT('F_BRNCH_NAME',' ',v_brnch_name));
  
  

  OPEN  brnch_location_key;
  FETCH brnch_location_key INTO t_location_key,t_location_code,t_location_name;
  CLOSE brnch_location_key; 
  

  IF ticket_clerk_branch IS NOT NULL and t_location_key is null THEN
	 OPEN tkt_clerk_location_key;
	 FETCH tkt_clerk_location_key INTO t_location_key,t_location_code,t_location_name;
	 CLOSE tkt_clerk_location_key;
  	
	ELSE 

    OPEN  pcc_location_key;
    FETCH pcc_location_key INTO t_location_key,t_location_code;
    CLOSE pcc_location_key;
   END IF;

	

  OPEN exch_doc_cursor;
  FETCH exch_doc_cursor INTO tkt_exch_doc_number;
  CLOSE exch_doc_cursor; 

  SET p_cursor = ' Error : Fare Cursor';
  
  

 SET DONE = FALSE;

 OPEN hotel_car_header;
hotel_car_header: LOOP
FETCH hotel_car_header INTO p_service_type,p_service_name,v_conf_number,p_air_Serial;
 IF DONE THEN
  LEAVE hotel_car_header;
 END IF;
INSERT INTO ID_KK_TEST(COL1,COL2) VALUES ('51',p_service_type);

SET art_serial =p_air_Serial;
  SET p_cursor = 'car_details';
  INSERT INTO ID_KK_TEST(COL1,COL2) VALUES ('52',art_serial);


   OPEN  car_details;
   FETCH car_details INTO v_pickup_time,v_dropoff_time,car_code,car_name,city_code,car_chn,pickup_time,dropoff_time,
                         pickup_place_code,pickup_place_name,dropoff_plce_name,dropoff_plce_code;
   CLOSE car_details; 
   
INSERT INTO ID_KK_TEST(COL1,COL2) VALUES ('401',v_pickup_time);
  




INSERT INTO ID_KK_TEST(COL1,COL2) VALUES ('501',v_pickup_time);

INSERT INTO ID_KK_TEST(COL1,COL2) VALUES ('502',v_dropoff_time);

IF v_pickup_time = v_dropoff_time THEN
SET v_total_days = 1;
ELSE 
SET v_total_days = ABS(datediff(v_dropoff_time,v_pickup_time))+1;
END IF ;


  OPEN  Remarks_currency_chk_cursor;
  FETCH Remarks_currency_chk_cursor INTO rm_curr_chk;
  CLOSE Remarks_currency_chk_cursor;
  
  OPEN  Remarks_rate_chk_cursor;
  FETCH Remarks_rate_chk_cursor INTO rm_rate_chk;
  CLOSE Remarks_rate_chk_cursor;
  
 IF IFNULL(rm_rate_chk,'N') = 'Y' THEN 
  IF IFNULL(rm_curr_chk,'N') = 'Y' THEN 

  OPEN  Remarks_rate_curr_cursor;
  FETCH Remarks_rate_curr_cursor INTO toatal_l_rate;
  CLOSE Remarks_rate_curr_cursor;
  ELSE
  OPEN  Remarks_rate_cursor;
  FETCH Remarks_rate_cursor INTO toatal_l_rate;
  CLOSE Remarks_rate_cursor;
  END IF;
  
  ELSE
  OPEN  u_rate_cursor;
  FETCH u_rate_cursor INTO toatal_l_rate;
  CLOSE u_rate_cursor;
  END IF;
 
  OPEN  Remarks_currency_cursor;
  FETCH Remarks_currency_cursor INTO tkt_currency;
  CLOSE Remarks_currency_cursor; 
  
  IF IFNULL(tkt_currency,0) = 0 THEN 
  OPEN  u_curr_code_cursor;
  FETCH u_curr_code_cursor INTO tkt_currency;
  CLOSE u_curr_code_cursor;
  END IF;

  OPEN  Remarks_count_cursor;
  FETCH Remarks_count_cursor INTO v_no_of_unit;
  CLOSE Remarks_count_cursor;
  
if ifnull(v_no_of_unit,0) =0 THEN
SET v_no_of_unit =1; 
END IF;
 
   IF v_tkt_currency IS NOT NULL THEN
    SET tkt_currency = v_tkt_currency;
    SET ex_rate = IFNULL(v_ex_rate,1);
  END IF;   

  SET p_cursor = ' Error : Currency Cursor';

  OPEN  base_currency_cursor;
  FETCH base_currency_cursor INTO company_code,base_curr_key,base_curr_code,base_decimal;
  CLOSE base_currency_cursor;

  OPEN  exchange_rate_cursor;
  FETCH exchange_rate_cursor INTO exch_rate;
  CLOSE exchange_rate_cursor;

 IF tkt_currency = base_curr_code THEN
    SET ex_rate      = 1;  
 ELSE
  IF tkt_currency != base_curr_code THEN
   SET ex_rate      = exch_rate;
  ELSE
   SET ex_rate      = ex_rate;  
  END IF; 
 END IF;
 
	SET v_no_of_nights=0;
	set tkt_currency = base_curr_code ;
	
    
	IF m_cntry_key = '227' THEN 
   SET dkt_value = 'Inbound';
   ELSE 
   SET dkt_value = 'Outbound';
   END IF;
 
 
 
if dkt_value = 'Inbound' THEN 
SET inter_domestic = 'I';
ELSE 
SET inter_domestic = 'D';
END IF;
 
 INSERT INTO ID_KK_TEST(COL1,COL2) VALUES ('94',total_f_rate);
 INSERT INTO ID_KK_TEST(COL1,COL2) VALUES ('95',toatal_l_rate);
  
 SET pub_fare   = IFNULL(toatal_l_rate,0);
 SET sell_fare  = IFNULL(toatal_l_rate,0);
 SET v_car_rate_per_day = round((sell_fare*v_total_days*v_no_of_unit),3);	
 
INSERT INTO ID_KK_TEST(COL1,COL2) VALUES ('96',pub_fare);
INSERT INTO ID_KK_TEST(COL1,COL2) VALUES ('97',sell_fare);
INSERT INTO ID_KK_TEST(COL1,COL2) VALUES ('98',v_car_rate_per_day);
 
  
   SET DONE = FALSE; 

SET p_cursor = 'ama_fp_pay_type_cursor';
  OPEN ama_fp_pay_type_cursor;
  FETCH ama_fp_pay_type_cursor INTO tkt_card_find, tkt_card_type, tkt_card_number,expiry_date;
  CLOSE ama_fp_pay_type_cursor;


  IF tkt_card_find > 0 THEN
     OPEN card_type_cursor;
     FETCH card_type_cursor INTO card_key,card_type,card_name,card_an_key,card_an_code,card_an_name,card_srv_fee,card_lodge_status,card_lodge_num;
     CLOSE card_type_cursor;     
  END IF;

   IF card_an_code = 'Airline Card'  THEN
     SET procss_typ = 'UCCF';
     SET prcss_code = 'U';
    ELSE
     SET procss_typ = 'NORMAL'; 
	  SET prcss_code = 'N';  
    END IF;

  
  SET v_issue_mode := 'N';  

  IF IFNULL(tkt_exch_doc_number,'X') <> 'X' THEN
    SET pub_fare := IFNULL(pub_fare,0) - IFNULL(tkt_destination_tax,0);
    SET v_issue_mode := 'R';
    IF pub_fare < 0 THEN
      SET pub_fare := 0;
    END IF;
  END IF;

  SET sale_exec = NULL; SET lpo = NULL; SET cust_code = NULL; SET addi_selling = NULL; SET addi_collection = 0; SET disc_amt = 0;
  OPEN  air_r_sales_exec_cursor;
  FETCH air_r_sales_exec_cursor INTO sale_exec;
  CLOSE air_r_sales_exec_cursor;

  IF sale_exec IS NULL THEN
     SET sale_exec = book_clerk;
  END IF;


SET p_cursor = 'air_r_lpo_cursor';
  OPEN air_r_lpo_cursor;
  FETCH air_r_lpo_cursor INTO lpo;
  CLOSE air_r_lpo_cursor;

  OPEN air_r_customer_cursor;
  FETCH air_r_customer_cursor INTO cust_code;
  CLOSE air_r_customer_cursor;
  
  set cust_code = LPAD(cust_code,10,0);

  IF INSTR(cust_code,'/') <> 0 THEN
   IF lpo IS NULL THEN
    SET lpo = SUBSTR(cust_code,INSTR(cust_code,'/')+1);
   END IF;
    SET cust_code = SUBSTR(cust_code, 1, INSTR(cust_code, '/')-1);
 END IF;

  OPEN  air_r_sell_fare_cursor;
  FETCH air_r_sell_fare_cursor INTO addi_selling;
  IF DONE THEN
     SET addi_selling=NULL;
  END IF;
  CLOSE air_r_sell_fare_cursor;
  
  
 SET p_cursor = 'v_high_fare';



  OPEN  air_r_coll_fare_cursor;
  FETCH air_r_coll_fare_cursor INTO addi_collection;
  CLOSE air_r_coll_fare_cursor;

  IF IFNULL(addi_selling,0) != 0 THEN
    SET sell_fare = IFNULL(addi_selling,0);
  ELSE
    SET sell_fare = pub_fare;
  END IF;

  IF sell_fare > pub_fare THEN
   SET pub_fare = sell_fare;
  END IF;

  SET DONE = FALSE; 
  OPEN  ama_fm_comm_cursor;
  FETCH ama_fm_comm_cursor INTO tkt_comm;
  IF DONE THEN
     SET tkt_comm=0;
  END IF;
  CLOSE ama_fm_comm_cursor;

  IF tkt_comm > 0 THEN
   SET tkt_comm_amt = CONVERT( ((IFNULL(sell_fare,0) * tkt_comm ) / 100 ), DECIMAL(18,4));
  END IF;

  IF cust_code IS NOT NULL THEN
   OPEN customer_check_cursor;
   FETCH customer_check_cursor INTO cust_key,cust_code;
   CLOSE customer_check_cursor;
  END IF; 

  IF cust_key IS NULL THEN
    SET cust_code = NULL;
    IF IFNULL(addi_collection ,0) != 0 THEN
      SET cash_amount = addi_collection + servicefees;
      SET disc_amt = IFNULL(addi_selling, sell_fare) + IFNULL(tkt_destination_tax, 0) - addi_collection;
      IF disc_amt < 0 THEN
         SET cash_amount = IFNULL(addi_selling, sell_fare) + IFNULL(tkt_destination_tax, 0)+servicefees;
         SET disc_amt = 0 ;
      END IF;
    ELSE
      SET cash_amount = IFNULL(sell_fare, 0) + IFNULL(tkt_destination_tax, 0)+servicefees;
    END IF;
    SET sett_mode   = '1';
    SET corporate = NULL;
    SET lpo_date = NULL;
    SET lpo = NULL;
  ELSE
    IF IFNULL(addi_collection ,0) != 0 THEN
      SET cust_amt    = addi_collection+servicefees;
      SET disc_amt    = IFNULL(addi_selling, sell_fare) + IFNULL(tkt_destination_tax, 0) - addi_collection;
      IF disc_amt < 0 THEN
         SET cust_amt = IFNULL(addi_selling, sell_fare) + IFNULL(tkt_destination_tax, 0)+servicefees;
         SET disc_amt = 0 ;
      END IF;
    ELSE
      SET cust_amt    = IFNULL(sell_fare, 0) + IFNULL(tkt_destination_tax, 0);
    END IF;
    SET lpo = IFNULL(lpo,'PENDING');
    SET lpo_date = tkt_date;
    SET sett_mode   = '2';
    SET corporate = cust_code;
  END IF;
  SET cust_exempt_status = 'N';

  IF cust_key IS NOT NULL THEN
   OPEN  vat_exmpt_cust_cursor;
   FETCH vat_exmpt_cust_cursor INTO cust_exempt_status;
   CLOSE vat_exmpt_cust_cursor;
  END IF;

  IF sell_fare < pub_fare THEN
    SET orc_amt = pub_fare - sell_fare;
    IF disc_amt < 0 THEN
      SET spl_disc = orc_amt + disc_amt;
    ELSE
      SET spl_disc = orc_amt;
    END IF;
  ELSE
    SET orc_amt = 0; SET spl_disc = 0;
  END IF;


  IF tkt_card_find = 0 OR LTRIM(RTRIM(card_type)) IS NULL THEN
    SET tkt_card_type   = NULL;
    SET tkt_card_number = NULL;
    SET card_exp_dt = NULL;
  ELSE  
    SET tkt_card_amount = IFNULL(sell_fare, 0) + IFNULL(tkt_destination_tax, 0);
    SET cust_amt        = 0;
    SET cash_amount     = 0;
    SET lpo = IFNULL(lpo,'PENDING');
    SET lpo_date = tkt_date;
    SET sett_mode       = '3';
    SET card_exp_dt = STR_TO_DATE(CONCAT('01',expiry_date), "%d%c%y");
  END IF;

   SET prd_type = 'CAR';    

   OPEN product_key_cursor;
   FETCH product_key_cursor INTO tkt_prd_key;
   CLOSE product_key_cursor;

   OPEN dkt_pnr_exist_cursor;
   FETCH dkt_pnr_exist_cursor INTO dkt_num;
   CLOSE dkt_pnr_exist_cursor;
    
	INSERT INTO ID_KK_TEST(COL1,COL2) VALUES (1001,concat('dkt_pnr_exist_num','-',dkt_num));
 
   IF dkt_num is NULL then
   
  SELECT  FN_DKT_NUM(pnr_number) into dkt_num;
end if;
INSERT INTO ID_KK_TEST(COL1,COL2) VALUES (1002,concat('dkt_pnr_exist_num','-',dkt_num));

    OPEN  issue_mode_cursor;
	FETCH issue_mode_cursor INTO issue_mode_key;
	CLOSE issue_mode_cursor;
	
 	 SET tkt_void_status = NULL;
    OPEN ticket_status_details;
    FETCH ticket_status_details INTO tkt_void_status;
    CLOSE ticket_status_details;
	
	INSERT INTO ID_KK_TEST(COL1,COL2) VALUES ('52',tkt_void_status);
 IF IFNULL(tkt_void_status,'N') = 'N' THEN
  SET ticket_check_cursor_tkt = v_conf_number;
  SET p_cursor = 'ticket_check_cursor';
  SET DONE = FALSE;     
  SET v_tmp_tfind = NULL; 
INSERT INTO ID_KK_TEST(COL1,COL2) VALUES ('53',ticket_check_cursor_tkt);
  OPEN ticket_check_cursor;
  FETCH ticket_check_cursor INTO v_tmp_tfind;
  INSERT INTO ID_KK_TEST(COL1,COL2) VALUES ('54',v_tmp_tfind);
  IF DONE AND IFNULL(v_tmp_tfind,'N') = 'N'  THEN
    CLOSE ticket_check_cursor;
	
	SET f_vat		= 0;
	SET x_vat		= 0;
	SET c_vat		= 0;
	SET d_vat		= 0;
	SET o_vat		= 0;
  	SET t_vat		= 0;

   OPEN city_code_key;
   FETCH city_code_key INTO v_city_code_key;
   CLOSE city_code_key;
   
 SET p_cursor = 'FN_COUNTRY_KEY';
   
  SELECT FN_COUNTRY_KEY(v_country_name) INTO m_cntry_key;
  
  
    if IFNULL(m_cntry_key,0) =0 then   
     SET msg = 'Country Master';
	SET p_cursor_1 = CONCAT('Country code (',v_country_name,') missing in Country master' );
   SET default_msg = 'Ticket loaded with default country code';
   
    INSERT INTO t_id_gds_loading_exception (LE_COMPANY,LE_CRS,LE_AIRLINE,LE_TICKET_NUMBER,LE_LOAD_DATE,LE_LOAD_ERROR,
					    LE_LOAD_PLACE,LE_REMARK_1,LE_REMARK_2,LE_REMARK_3,LE_REMARK_4,lock_key,profile_key) 
				VALUES('1','AMADEUS_CAR',NULL,v_conf_number,CURRENT_DATE,msg,p_cursor_1,CONCAT('Reference -',p_key),default_msg,NULL,IFNULL(pnr_number,'NULL'),0,4);
  
  OPEN  default_country_key;
  FETCH default_country_key INTO m_cntry_key;
  CLOSE default_country_key; 
END IF;
 
   INSERT INTO ID_KK_TEST(COL1,COL2) VALUES ('9005',m_cntry_key); 
   IF m_cntry_key = '227' THEN 
   SET ib_value = 'I';
   ELSE 
   SET ib_value = 'D';
   END IF;
   
   SELECT detail_key into v_id_value FROM t_id_reference_codes_detail_view WHERE domain_name='InboundOutbound'
   and code = ib_value;
 
     
   IF m_cntry_key = '227' THEN 
   SET dkt_value = 'Inbound';
   ELSE 
   SET dkt_value = 'Outbound';
   END IF;
      
INSERT INTO ID_KK_TEST(COL1,COL2) VALUES ('9001',dkt_value);
  INSERT INTO ID_KK_TEST(COL1,COL2) VALUES ('9003',dkt_type_value);

   OPEN  ama_i_pax_dkt_cursor;
   FETCH ama_i_pax_dkt_cursor INTO tkt_dkt_pax;
   CLOSE ama_i_pax_dkt_cursor;

  
   SET p_cursor = ' Error : hotel_chain_key'; 
   
      
   OPEN  car_code_key;
   FETCH car_code_key INTO v_car_key;
   CLOSE car_code_key;  
   
 IF IFNULL(v_car_key,0) = 0 then 
   INSERT INTO `t_id_car_master` (`code`, `name`, `car_sipp_code`, `car_city`, `car_country`, `car_chain`, 
`car_vehicle_type`, `car_supplier`, `car_remarks`, `car_reference`, `active_status`, `active_from`, 
`active_to`, `lock_key`, `profile_key`) VALUES (car_code, car_name, NULL, NULL, NULL, NULL, 20, NULL, NULL,
 NULL, 'A', '2023-05-01 10:18:21', NULL, 0, 4);
 
    OPEN  car_code_key;
   FETCH car_code_key INTO v_car_key;
   CLOSE car_code_key;  
END IF; 
   
   OPEN  air_r_rsn_code_cursor;
  FETCH air_r_rsn_code_cursor INTO rsn_code;
  CLOSE air_r_rsn_code_cursor;
  
   INSERT INTO ID_KK_TEST(COL1,COL2) VALUES ('6543',concat('rsn_code','-',rsn_code));
IF   IFNULL(rsn_code,'AMAM') != 'AMAM' THEN
  OPEN  master_rsn_key_cursor;
  FETCH master_rsn_key_cursor INTO rsn_code_key;
  CLOSE master_rsn_key_cursor;
  
   INSERT INTO ID_KK_TEST(COL1,COL2) VALUES ('6544',concat('rsn_code_key','-',rsn_code_key));
  
  IF IFNULL(rsn_code_key,0) = 0  then
 INSERT INTO `t_id_et_private_fare_acc_details` (`pfad_supplier_key`, `pfad_hap_name`,
`pfad_pcc`, `pfad_cms_key`, `pfad_airline_key`, `pfad_deal_code_type`, `pfad_deal_code`, `pfad_valid_from`,
`pfad_valid_to`, `pfad_status`, `pfad_category_based_on`, `pfad_allocation_type`, `pfad_class_type`, 
`profile_key`, `lock_key`, `active_status`) VALUES (10108, rsn_code, NULL, NULL, 359, 300, NULL, 
CURRENT_TIMESTAMP, '2033-08-01 12:59:09', 'A', 1, 1, 167, 4, 0, 'A');
  OPEN  master_rsn_key_cursor;
  FETCH master_rsn_key_cursor INTO rsn_code_key;
  CLOSE master_rsn_key_cursor;
END IF;
END IF;
  
   INSERT INTO ID_KK_TEST(COL1,COL2) VALUES ('65447',concat('rsn_code_key','-',rsn_code_key));
    OPEN car_type_key;
   FETCH car_type_key INTO v_car_type_key;
   CLOSE car_type_key;
   
   SET v_car_type_key = IFNULL(v_car_type_key,20);
   
   OPEN  car_chain_key;
   FETCH car_chain_key INTO v_car_chain_key;
   CLOSE car_chain_key; 

   OPEN  dropoff_lctn_key_cursor;
   FETCH dropoff_lctn_key_cursor INTO v_dropoff_key;
   CLOSE dropoff_lctn_key_cursor; 
   
   IF IFNULL(v_dropoff_key,0) = 0 THEN
   IF IFNULL(dropoff_plce_code,'MMM') != 'MMM'THEN
   INSERT INTO `tbl_id_et_flx_auto_lctn_dtls` (`falsd_facd_id`, `falsd_lcn_id`, `falsd_lcn_name`, `falsd_suplr_dtl`, `falsd_lcn_iata`,
 `profile_key`, `lock_key`) VALUES (v_city_code_key, dropoff_plce_code, dropoff_plce_name, NULL, NULL, 1, 0);
  
   OPEN  dropoff_lctn_key_cursor;
   FETCH dropoff_lctn_key_cursor INTO v_dropoff_key;
   CLOSE dropoff_lctn_key_cursor;
   
INSERT INTO ID_KK_TEST(COL1,COL2) VALUES ('6002',v_dropoff_key);
  END IF;
  END IF;  
   
   OPEN  pickup_lctn_key_cursor;
   FETCH pickup_lctn_key_cursor INTO v_pickup_key;
   CLOSE pickup_lctn_key_cursor; 
   
   IF IFNULL(v_pickup_key,0) = 0 then
 IF IFNULL(pickup_place_code,'mmm') != 'mmm' then 
 INSERT INTO `tbl_id_et_flx_auto_lctn_dtls` (`falsd_facd_id`, `falsd_lcn_id`, `falsd_lcn_name`, `falsd_suplr_dtl`, `falsd_lcn_iata`,
 `profile_key`, `lock_key`) VALUES (v_city_code_key, pickup_place_code, pickup_place_name, NULL, NULL, 1, 0);
 
   OPEN  pickup_lctn_key_cursor;
   FETCH pickup_lctn_key_cursor INTO v_pickup_key;
   CLOSE pickup_lctn_key_cursor; 
   
INSERT INTO ID_KK_TEST(COL1,COL2) VALUES ('6004',v_pickup_key);
   END IF;
   END IF;
 
INSERT INTO ID_KK_TEST(COL1,COL2) VALUES ('31',v_car_chain_key);
    IF dkt_num IS NULL THEN  
   OPEN  dkt_type_cursor;
   FETCH dkt_type_cursor INTO dkt_type_value;
   CLOSE dkt_type_cursor;

   OPEN  Docket_Type_Key;
   FETCH Docket_Type_Key INTO dkt_type_key;
   CLOSE Docket_Type_Key;

   SET p_cursor = ' Error : PRC_HUB_NUMBER_GEN'; 

   SELECT num_gen INTO dkt_num FROM t_id_num_gen_table WHERE doc_code = dkt_type_value AND MONTH(doc_gen_date) = MONTH(tkt_date)  AND YEAR(doc_gen_date) = YEAR(tkt_date) 
	AND profile_key = user_comp_profile_key AND flag=0 ORDER BY num_gen ASC LIMIT 1; 


INSERT INTO ID_KK_TEST(COL1,COL2) VALUES ('21',dkt_type_value);
  INSERT INTO ID_KK_TEST(COL1,COL2) VALUES ('22',tkt_date);  
  INSERT INTO ID_KK_TEST(COL1,COL2) VALUES ('23',user_comp_profile_key);  
  INSERT INTO ID_KK_TEST(COL1,COL2) VALUES ('24',t_location_code); 

  INSERT INTO ID_KK_TEST(COL1,COL2) VALUES ('9006',dkt_num);  
  

   SET p_cursor = ' Error : PRC_HUB_NUMBER_GEN 1'; 

    IF dkt_num IS NULL THEN

   SET p_cursor = ' Error : PRC_HUB_NUMBER_GEN 2';  

     CALL PRC_DOC_NUMBER_GEN_REPEAT(DATE(tkt_date),dkt_type_value,user_comp_profile_key);	 

   SET p_cursor = ' Error : PRC_HUB_NUMBER_GEN 3';  


INSERT INTO ID_KK_TEST(COL1,COL2) VALUES ('21',dkt_type_value);
  INSERT INTO ID_KK_TEST(COL1,COL2) VALUES ('22',tkt_date);  
  INSERT INTO ID_KK_TEST(COL1,COL2) VALUES ('23',user_comp_profile_key);  
  INSERT INTO ID_KK_TEST(COL1,COL2) VALUES ('24',t_location_key);  
  
      SELECT num_gen INTO dkt_num FROM t_id_num_gen_table WHERE doc_code = dkt_type_value AND MONTH(doc_gen_date) = MONTH(tkt_date) 
		AND profile_key = user_comp_profile_key AND flag=0 ORDER BY num_gen ASC LIMIT 1; 					

    END IF; 
	
  INSERT INTO ID_KK_TEST(COL1,COL2) VALUES ('9006',dkt_num);  
  
  INSERT INTO ID_KK_TEST(COL1,COL2) VALUES ('9009',t_location_key);  


   IF cust_key IS NOT NULL and  p_service_type IS NOT NULL  AND t_location_key IS NOT NULL AND src_agent_key IS NOT NULL THEN    
    INSERT INTO t_id_tvl_docket_header (dkt_number,dkt_date,dkt_partner_key,dkt_branch_key,dkt_doc_type_key,dkt_status,
	 dkt_lead_pax_name,dkt_client_reference,dkt_transaction_reference,dkt_lpo_number,dkt_lpo_date,dkt_created_by,dkt_created_on,lock_key,profile_key) 
    VALUES(dkt_num,tkt_date,cust_key,t_location_key,dkt_type_key,'A',
	 tkt_dkt_pax,NULL,pnr_number,lpo,lpo_date,user_created_key,CURRENT_TIMESTAMP,0,user_profile_key) ;  
 	  UPDATE t_id_num_gen_table SET flag = 1 WHERE num_gen = dkt_num;

 	   select dkt_key into dkt_num_key from t_id_tvl_docket_header where dkt_number = dkt_num;

     INSERT INTO t_id_tvl_docket_header_summary (dkt_key,dkt_number,dkt_date,dkt_partner_key,dkt_branch_key,dkt_doc_type_key,dkt_status,dkt_lead_pax_name,
dkt_transaction_reference,dkt_lpo_number,dkt_lpo_date,dkt_air_count,dkt_htl_count,
dkt_car_count,dkt_misc_count,dkt_awb_count,dkt_account_status,
dkt_created_by,dkt_created_on,lock_key,profile_key)
VALUES(dkt_num_key,dkt_num,tkt_date,cust_key,t_location_key,dkt_type_key,'A',tkt_dkt_pax,pnr_number,lpo,lpo_date,0,0,0,0,0,'Not Collected',user_created_key,CURRENT_TIMESTAMP,0,user_profile_key) ; 

   ELSEIF p_service_type IS NOT NULL  AND t_location_key IS NOT NULL AND src_agent_key IS NOT NULL THEN

     OPEN walk_brnch_cust_cursor;
     FETCH walk_brnch_cust_cursor INTO walk_cust_key,walk_cust_code;
     CLOSE walk_brnch_cust_cursor;
     IF walk_cust_key IS NULL THEN
      OPEN walk_customer_cursor;
      FETCH walk_customer_cursor INTO walk_cust_key,walk_cust_code;
      CLOSE walk_customer_cursor;    
     END IF;

    INSERT INTO t_id_tvl_docket_header (dkt_number,dkt_date,dkt_partner_key,dkt_branch_key,dkt_doc_type_key,dkt_status,
	 dkt_lead_pax_name,dkt_client_reference,dkt_transaction_reference,dkt_lpo_number,dkt_lpo_date,dkt_created_by,dkt_created_on,lock_key,profile_key) 
    VALUES(dkt_num,tkt_date,walk_cust_key,t_location_key,dkt_type_key,'A',
	 tkt_dkt_pax,NULL,pnr_number,lpo,lpo_date,user_created_key,CURRENT_TIMESTAMP,0,user_profile_key) ;   
 	  UPDATE t_id_num_gen_table SET flag = 1 WHERE num_gen = dkt_num;

 	   select dkt_key into dkt_num_key from t_id_tvl_docket_header where dkt_number = dkt_num;

     INSERT INTO t_id_tvl_docket_header_summary (dkt_key,dkt_number,dkt_date,dkt_partner_key,dkt_branch_key,dkt_doc_type_key,dkt_status,dkt_lead_pax_name,
dkt_transaction_reference,dkt_lpo_number,dkt_lpo_date,dkt_air_count,dkt_htl_count,
dkt_car_count,dkt_misc_count,dkt_awb_count,dkt_account_status,
dkt_created_by,dkt_created_on,lock_key,profile_key)
VALUES(dkt_num_key,dkt_num,tkt_date,walk_cust_key,t_location_key,dkt_type_key,'A',tkt_dkt_pax,pnr_number,lpo,lpo_date,0,0,0,0,0,'Not Collected',user_created_key,CURRENT_TIMESTAMP,0,user_profile_key) ; 

   END IF;
 END IF;
 
 	 OPEN dkt_head_sumry_cursor;
    FETCH dkt_head_sumry_cursor INTO dkt_sum_key,dkt_acc_status,dkt_ccr_cnt;
    CLOSE dkt_head_sumry_cursor; 
	
	SET v_locint_f	=  NULL;
	SET v_locint_t	=  NULL;

    SET DONE = FALSE;

	  OPEN  ama_i_pax_cursor;
     FETCH ama_i_pax_cursor INTO tkt_pax;
     CLOSE ama_i_pax_cursor;  

	 IF tkt_pax IS NOT NULL THEN
	  SET tkt_pax_name = tkt_pax;
	 END IF; 


    OPEN  currency_key_cursor;
    FETCH currency_key_cursor INTO tkt_curr_key;
    CLOSE currency_key_cursor;

    OPEN  inter_domestic_key_cursor;
    FETCH inter_domestic_key_cursor INTO inter_domestic_key;
    CLOSE inter_domestic_key_cursor; 
	

    INSERT INTO ID_KK_TEST(COL1,COL2) VALUES (7017,inter_domestic_key);	

    OPEN  service_type_key_cursor;
    FETCH service_type_key_cursor INTO service_type_key;
    CLOSE service_type_key_cursor;

	OPEN  CAR_CFR_NO_CHK;
    FETCH CAR_CFR_NO_CHK INTO v_conf_number_chk;
    CLOSE CAR_CFR_NO_CHK;

 
   OPEN process_type_cursor;
   FETCH process_type_cursor INTO procss_typ_key;
   CLOSE process_type_cursor; 

    SELECT dkt_key INTO @dkt_key_no FROM t_id_tvl_docket_header WHERE dkt_number=DKT_NUM;  

  SET p_cursor = CONCAT(p_service_type,t_agent_key,t_location_key);  

 INSERT INTO ID_KK_TEST(COL1,COL2) VALUES (7011,p_service_type);
 
 INSERT INTO ID_KK_TEST(COL1,COL2) VALUES (7012,t_location_key);
 
 INSERT INTO ID_KK_TEST(COL1,COL2) VALUES (7013,v_conf_number_chk);
 
 INSERT INTO ID_KK_TEST(COL1,COL2) VALUES (7014,src_agent_key);
 
INSERT INTO ID_KK_TEST(COL1,COL2) VALUES ('7016',v_car_chain_key);
 
 
 INSERT INTO ID_KK_TEST(COL1,COL2) VALUES (7015,v_id_value);
 
 	CALL PRC_DOC_NUMBER_GEN_REPEAT(DATE(tkt_date),'CARV',user_comp_profile_key);

	SELECT num_gen INTO p_tkt_number FROM t_id_num_gen_table WHERE doc_code = 'CARV' AND MONTH(doc_gen_date) = MONTH(tkt_date) 
	AND profile_key = user_comp_profile_key AND flag=0 ORDER BY num_gen ASC LIMIT 1;		


IF p_service_type IS NOT NULL  AND t_location_key IS NOT NULL AND v_conf_number_chk IS NULL THEN
INSERT INTO ID_KK_TEST(COL1,COL2) VALUES (1,CONCAT(dkt_num,' -DKT_NO')); 
SET p_cursor = 't_id_tvl_car_voucher_details';

if dkt_value = 'Inbound' THEN 
SET inter_domestic = 'I';
ELSE
SET inter_domestic = 'D';
END IF;

IF v_pickup_time = v_dropoff_time THEN
SET v_total_days = 1;
ELSE 
SET v_total_days = ABS(datediff(v_dropoff_time,v_pickup_time))+1;
END IF ;

INSERT INTO t_id_tvl_car_voucher_details 
(cvd_docket_key, cvd_product_key, cvd_voucher_number, cvd_voucher_status, cvd_date, 
cvd_trans_type, cvd_account_status, cvd_provider_key, cvd_location_key, cvd_branch_key, 
cvd_city_key, cvd_car_name, cvd_car_chain_key, cvd_pickup_place, cvd_dropoff_place, 
cvd_inbound_outbound, cvd_lead_pax_name, cvd_car_type_key, cvd_adult, cvd_child, 
cvd_infant, cvd_pickup_time, cvd_dropoff_time, cvd_not_no_of_days,
 cvd_not_no_of_cars, cvd_rate, cvd_lpo_number, cvd_lpo_date, cvd_booking_pcc,cvd_booking_date,
 cvd_issuing_pcc, cvd_booking_user_key, cvd_handling_user_key, cvd_sales_executive_key, cvd_issuing_user_key, 
 cvd_source_agent, cvd_confirmation_number, cvd_booking_reference, cvd_flex_1,cvd_net_collection, 
 cvd_payable_collection, lock_key, profile_key, created_by, created_on)
 values
(@dkt_key_no, tkt_prd_key, p_tkt_number, 'S', tkt_date,
 '332', 'N',src_agent_key, t_location_key, t_location_key, 
v_city_code_key, v_car_key, v_car_chain_key, v_pickup_key, v_dropoff_key,
v_id_value, tkt_pax_name, v_car_key, '1', 0, 
0, v_pickup_time, v_dropoff_time,  v_total_days,
 v_no_of_unit, v_car_rate_per_day, 'PENDING', tkt_date, NULL, CURRENT_DATE,
 NULL, ticket_clerk_key, NULL, ticket_clerk_key, ticket_clerk_key, 
  src_agent_key, v_conf_number, pnr_number,  'AMADEUS_CCR',trans_amount , 
  sell_fare, '1', user_profile_key, ticket_clerk_key, CURRENT_TIMESTAMP);

 	UPDATE t_id_num_gen_table SET flag = 1 WHERE num_gen = p_tkt_number;

    SET tot_tax = 0;
    SET tot_tax = tax_d + tax_1 + tax_2;

    SELECT cvd_key INTO @tkt_key FROM t_id_tvl_car_voucher_details  WHERE  cvd_voucher_number = p_tkt_number AND cvd_voucher_status = 'S'
    AND cvd_provider_key = src_agent_key ORDER BY cvd_key LIMIT 1;

    IF P_TKT_KEY IS  NULL THEN
      SET P_TKT_KEY = @tkt_key;
    ELSE
      SET P_TKT_KEY = CONCAT(P_TKT_KEY,':',@tkt_key);
    END IF;

   SET p_cursor    =   'default_service_fee_cursor';    
   SET total_serv_amount = 0;   
	SET DONE = FALSE; 

   IF cust_code IS NOT NULL THEN
    OPEN cust_service_fee_check;
    FETCH cust_service_fee_check INTO cust_serv;
    CLOSE cust_service_fee_check;
   END IF; 
   END IF;

INSERT INTO ID_KK_TEST(COL1,COL2) VALUES ('1324',P_TKT_KEY);
INSERT INTO ID_KK_TEST(COL1,COL2) VALUES ('134',@tkt_key);

SET DONE = FALSE;
   OPEN GDS_File_Service_Cursor;
   GDS_File_Service_Cursor: LOOP
   FETCH GDS_File_Service_Cursor INTO srv_fee_code,srv_file_code;
    IF DONE THEN
      LEAVE GDS_File_Service_Cursor;
    END IF; 
	
	
	
   INSERT INTO ID_KK_TEST(COL1,COL2) VALUES ('8881',concat('srv_fee_code',' ',srv_fee_code));
   INSERT INTO ID_KK_TEST(COL1,COL2) VALUES ('8882',concat('srv_file_code',' ',srv_file_code));
   
   SET p_cursor    =  'file_service_fee_cursor 1';   
   SET service_id = NULL;
   SET p_udid_code = NULL;
   SET file_serv_amount = 0;
   SET file_serv_amnt = NULL;
   SET p_udid_code = srv_file_code;
   
   
	 SET p_cursor    =   'air_udid_values_2';
   
   IF p_udid_code IS NOT NULL THEN
  	 OPEN air_udid_values_2;
  	 FETCH air_udid_values_2 INTO file_serv_amnt;
  	 CLOSE air_udid_values_2;
   END IF;
   SET file_serv_amnt=LTRIM(RTRIM(REPLACE(file_serv_amnt,'/','')));
   
   SET file_serv_amnt=LTRIM(RTRIM(REPLACE(file_serv_amnt,'-','')));
   SET file_serv_amount = CAST(file_serv_amnt AS DECIMAL(18,4));
   
   INSERT INTO ID_KK_TEST(COL1,COL2) VALUES ('8883',concat('file_serv_amount',' ',file_serv_amount));
   INSERT INTO ID_KK_TEST(COL1,COL2) VALUES ('88800',concat('srv_fee_code',' ',srv_fee_code));
   
   
	 SET p_cursor    =   'file_service_fee_cursor';
   
   OPEN file_service_fee_cursor;
   FETCH file_service_fee_cursor INTO service_id,service_key, service_name;
   CLOSE file_service_fee_cursor;
   
   
   INSERT INTO ID_KK_TEST(COL1,COL2) VALUES ('8884',concat('service_id',' ',service_id));
   
   INSERT INTO ID_KK_TEST(COL1,COL2) VALUES ('8884',concat('service_id',' ',@service_id));
   
   INSERT INTO ID_KK_TEST(COL1,COL2) VALUES ('8885',concat('service_key',' ',service_key));
   
   IF service_id IS NOT NULL AND file_serv_amount > 0 THEN
    
	 SET p_cursor    =   't_id_tvl_service_charges_details';    
      
      INSERT INTO t_id_tvl_service_charges_details (
  		tsc_docket_key,tsc_product_key,tsc_ticket_key,tsc_service_charge_id,tsc_charge_key,tsc_parent_key,
  		tsc_currency_key,tsc_ex_rate,tsc_base_amount,tsc_local_amount,tsc_type,tsc_payback_parner_key,tsc_payback_on,
  		tsc_payback_percent,tsc_tax_code,tsc_tax_percentage,tsc_tax_on_amount,tsc_tax_on_component,lock_key,profile_key) 
 		VALUES
  		( @dkt_key_no,tkt_prd_key,@tkt_key,service_id,service_key,NULL,
    	'1',1,file_serv_amount,file_serv_amount,'C',NULL,0,
    	NULL,NULL,NULL,NULL,NULL,0,user_profile_key) ;
     	SET total_serv_amount = IFNULL(total_serv_amount,0) + IFNULL(file_serv_amount,0);
     
     	SELECT tsc_key INTO @tkt_srv_key FROM t_id_tvl_service_charges_details WHERE tsc_ticket_key = @tkt_key AND 
     	tsc_charge_key = service_key AND tsc_service_charge_id = service_id AND tsc_docket_key = @dkt_key_no  ORDER BY tsc_key DESC;
     
    	SET vat_applied_on = 'S';
         
      IF cust_exempt_status = 'Y' THEN
	  	 OPEN vat_exempt_cursor;
         FETCH vat_exempt_cursor INTO srv_vat_code,srv_vat_description,srv_inclusive_exclusive_code,srv_collection_code,srv_io_type_code,srv_appliedon_value,srv_vat_percentage;
         CLOSE vat_exempt_cursor;
      ELSE
         OPEN vat_master_cursor;
         FETCH vat_master_cursor INTO srv_vat_code,srv_vat_description,srv_inclusive_exclusive_code,srv_collection_code,srv_io_type_code,srv_appliedon_value,srv_vat_percentage;
         CLOSE vat_master_cursor;
       END IF;
         
       SET srv_vat_amt = (IFNULL(file_serv_amount,0) * srv_vat_percentage)/100;
           
       IF  srv_vat_amt <> 0 THEN                          
         INSERT INTO t_id_tvl_vat_charge_details (
	 		tvc_docket_key,  tvc_product_key,  tvc_ticket_key,  tvc_parent_key,  tvc_vat_code,  tvc_appliedon_value,
	 		tvc_inclusive_exclsive_code,  tvc_collection_code,  tvc_inoutput_code,  tvc_percentage,  tvc_amount,  tvc_on_amount,tvc_sys_amount,
	 		lock_key,  profile_key ) 
	 		VALUES(
			@dkt_key_no,tkt_prd_key,@tkt_key,@tkt_srv_key,srv_vat_code,srv_appliedon_value,
		   srv_inclusive_exclusive_code,srv_collection_code,srv_io_type_code,srv_vat_percentage,srv_vat_amt,IFNULL(file_serv_amount,0),
	 		IFNULL(file_serv_amount,0),0,user_profile_key) ;  
        END IF;    
   END IF;
    SET DONE = FALSE;
    END LOOP GDS_File_Service_Cursor;
   CLOSE GDS_File_Service_Cursor; 


	SET collect_amount = CONVERT((IFNULL(tkt_card_amount,0) + IFNULL(cust_amt,0) + IFNULL(cash_amount,0) + IFNULL(total_serv_amount,0) + IFNULL(@tot_vat_amt,0)) , DECIMAL(18,4));
    SET p_cursor    =   't_id_tvl_fare_details';   


    SET pub_fare = ROUND(pub_fare,4);
    SET sell_fare = ROUND(sell_fare,4);
	 
   INSERT INTO ID_KK_TEST(COL1,COL2) VALUES ('7886',concat('pub_fare',' ',pub_fare));
   INSERT INTO ID_KK_TEST(COL1,COL2) VALUES ('7887',concat('sell_fare',' ',sell_fare));
   INSERT INTO ID_KK_TEST(COL1,COL2) VALUES ('7888',concat('tkt_curr_key',' ',tkt_curr_key));
   INSERT INTO ID_KK_TEST(COL1,COL2) VALUES ('7888',concat('total_serv_amount',' ',total_serv_amount));
   INSERT INTO ID_KK_TEST(COL1,COL2) VALUES ('7888',concat('collect_amount',' ',collect_amount));
SET p_cursor = 't_id_tvl_fare_details_1';

    INSERT INTO t_id_tvl_fare_details (
	tfd_docket_key,tfd_product_key,tfd_ticket_key,tfd_process_type,tfd_own_lodge_card_key,tfd_base_fare,tfd_deal_fare,tfd_total_tax,tfd_total_service_charge,
	tfd_comm_key1,tfd_comm_percent_1,tfd_comm_on_1,tfd_comm_amount_1,tfd_comm_key2,tfd_comm_percent_2,tfd_comm_on_2,tfd_comm_amount_2,
	tfd_disc_key1,tfd_disc_percent_1,tfd_disc_on_1,tfd_disc_amount_1,tfd_disc_percent_2,tfd_disc_on_2,tfd_disc_amount_2,
	tfd_cash_disc,tfd_settle_amount,tfd_tour_code,tfd_nego_fare,tfd_priv_fare,
	tfd_prom_fare,tfd_trans_currency_key,tfd_ex_rate,tfd_deal_code,tfd_incentive_paid,
	tfd_reason_code,tfd_base_fare_new,tfd_deal_fare_new,
	tfd_comm_percent_1_new,tfd_comm_on_1_new,tfd_comm_amount_1_new,
	tfd_comm_percent_2_new,tfd_comm_on_2_new,tfd_comm_amount_2_new,
	lock_key,profile_key) 
	VALUES
	(
    @dkt_key_no,tkt_prd_key,@tkt_key,procss_typ_key,NULL,pub_fare,sell_fare,ROUND(tot_tax,4),0,
    0,tkt_comm,sell_fare,tkt_comm_amt,0,0,
    sell_fare,0,0,0,pub_fare,0,
    0,pub_fare,0,
    0,ROUND(collect_amount,4),NULL,0,0,0,
    tkt_curr_key,ex_rate,rsn_code_key,0,NULL,pub_fare,sell_fare,
    tkt_comm,sell_fare,tkt_comm_amt,
    0,sell_fare,0,
    0,user_profile_key) ; 

     SELECT   tfd_key INTO @tkt_fare_key FROM t_id_tvl_fare_details 
     WHERE tfd_docket_key = @dkt_key_no AND tfd_product_key = tkt_prd_key AND tfd_ticket_key = @tkt_key ORDER BY tfd_key desc limit 1 ;  
	 
INSERT INTO ID_KK_TEST(COL1,COL2) VALUES ('132',CONCAT('FRE_KEY',' ',@tkt_fare_key));    

    SET DONE = FALSE; 
    SET p_cursor    =   'vat_cursor_main';	 
	
	 
if dkt_value = 'Inbound' THEN 
SET inter_domestic = 'I';
ELSE 
SET inter_domestic = 'D';
END IF;

	INSERT INTO ID_KK_TEST(COL1,COL2) VALUES ('8004',inter_domestic);

 IF cust_exempt_status = 'Y'  AND inter_domestic = 'D' THEN
   SET p_cursor    =   'vat_exempt_cursor_main';
     OPEN vat_exempt_cursor_main;
      vat_exempt_cursor_main: LOOP
     FETCH vat_exempt_cursor_main INTO v_applied_on_code,v_applied_on_value,v_inter_domestic_key,v_product_type,v_package_normal_key,
	v_output_input_type_key,v_percentage,v_applicable_on,v_applied_on_key,v_vat_code,v_vat_description,v_inclusive_exclusive_key,v_inclusive_exclusive_code,
	v_inclusive_exclusive_value,v_collection_type_key,v_collection_code,v_io_type_code,v_io_type_value;
      IF DONE THEN
       LEAVE vat_exempt_cursor_main;
      END IF;   

	INSERT INTO ID_KK_TEST(COL1,COL2) VALUES ('6ex',f_vat);
	
	INSERT INTO ID_KK_TEST(COL1,COL2) VALUES ('8001ex',sell_fare);
	
	INSERT INTO ID_KK_TEST(COL1,COL2) VALUES ('135ex',v_percentage);


	 IF v_applied_on_code = 'F' AND f_vat<=1 THEN 
		SET vat_on_amt = sell_fare;
		SET vat_amt = (sell_fare * v_percentage)/100;
		SET f_vat = f_vat + 1;
     ELSEIF v_applied_on_code = 'X' AND x_vat<=1  THEN
		SET vat_on_amt = canc_amt;
		SET vat_amt = (canc_amt * v_percentage)/100;
		SET x_vat = x_vat + 1;
     ELSEIF v_applied_on_code = 'C' AND c_vat<1  THEN
		SET vat_on_amt = comm_amt;
		SET vat_amt = (comm_amt * v_percentage)/100;
		SET c_vat = c_vat + 1;
     ELSEIF v_applied_on_code = 'D' AND d_vat<1  THEN
		SET vat_on_amt = disc_amt;
		SET vat_amt = (disc_amt * v_percentage)/100;
		SET d_vat = d_vat + 1;
     END IF;

	INSERT INTO ID_KK_TEST(COL1,COL2) VALUES ('7',vat_on_amt);
	INSERT INTO ID_KK_TEST(COL1,COL2) VALUES ('8',vat_amt);	
	INSERT INTO ID_KK_TEST(COL1,COL2) VALUES ('9',f_vat);	   

      IF vat_amt <> 0 THEN 
       INSERT INTO t_id_tvl_vat_charge_details (
        tvc_docket_key,  tvc_product_key,  tvc_ticket_key,  tvc_parent_key,  tvc_vat_code,  tvc_appliedon_value,
        tvc_inclusive_exclsive_code,  tvc_collection_code,  tvc_inoutput_code,  tvc_percentage,  tvc_amount,  tvc_on_amount,tvc_sys_amount,
        lock_key,  profile_key ) 
       VALUES
        (@dkt_key_no,tkt_prd_key,@tkt_key,@tkt_fare_key,v_vat_code,v_applied_on_value,
	v_inclusive_exclusive_code,v_collection_code,v_io_type_code,v_percentage,vat_amt,vat_on_amt,vat_amt,
	0,user_profile_key) ;
	END IF;

      	SET vat_on_amt = 0;
	SET vat_amt = 0;
     END LOOP vat_exempt_cursor_main;
     CLOSE vat_exempt_cursor_main;
   ELSE

	INSERT INTO ID_KK_TEST(COL1,COL2) VALUES ('10',prcss_code );
	INSERT INTO ID_KK_TEST(COL1,COL2) VALUES ('11',inter_domestic);

   SET p_cursor    =   'vat_master_cursor_main';
     OPEN vat_master_cursor_main;
      vat_master_cursor_main: LOOP
     FETCH vat_master_cursor_main INTO v_applied_on_code,v_applied_on_value,v_inter_domestic_key,v_product_type,v_package_normal_key,
	v_output_input_type_key,v_percentage,v_applicable_on,v_applied_on_key,v_vat_code,v_vat_description,v_inclusive_exclusive_key,v_inclusive_exclusive_code,
	v_inclusive_exclusive_value,v_collection_type_key,v_collection_code,v_io_type_code,v_io_type_value;
      IF DONE THEN
       LEAVE vat_master_cursor_main;
      END IF;
    INSERT INTO ID_KK_TEST(COL1,COL2) VALUES ('8001',sell_fare);
	INSERT INTO ID_KK_TEST(COL1,COL2) VALUES ('7001',v_percentage);
	INSERT INTO ID_KK_TEST(COL1,COL2) VALUES ('12',f_vat);

     IF v_applied_on_code = 'F' AND f_vat<=1 THEN 
        SET vat_on_amt = sell_fare;
		SET vat_amt = (sell_fare * v_percentage)/100;
		SET f_vat = f_vat + 1;
     ELSEIF v_applied_on_code = 'X' AND x_vat<=1  THEN
		SET vat_on_amt = canc_amt;
		SET vat_amt = (canc_amt * v_percentage)/100;
		SET x_vat = x_vat + 1;
     ELSEIF v_applied_on_code = 'C' AND c_vat<1  THEN
		SET vat_on_amt = comm_amt;
		SET vat_amt = (comm_amt * v_percentage)/100;
		SET c_vat = c_vat + 1;
     ELSEIF v_applied_on_code = 'D' AND d_vat<1  THEN
		SET vat_on_amt = disc_amt;
		SET vat_amt = (disc_amt * v_percentage)/100;
		SET d_vat = d_vat + 1;
     END IF;


	INSERT INTO ID_KK_TEST(COL1,COL2) VALUES ('13',vat_on_amt);
	INSERT INTO ID_KK_TEST(COL1,COL2) VALUES ('14',vat_amt);	
	INSERT INTO ID_KK_TEST(COL1,COL2) VALUES ('15',f_vat);	 

      IF vat_amt <> 0 AND inter_domestic = 'D'THEN 
       INSERT INTO t_id_tvl_vat_charge_details (
        tvc_docket_key,  tvc_product_key,  tvc_ticket_key,  tvc_parent_key,  tvc_vat_code,  tvc_appliedon_value,
        tvc_inclusive_exclsive_code,  tvc_collection_code,  tvc_inoutput_code,  tvc_percentage,  tvc_amount,  tvc_on_amount,tvc_sys_amount,
        lock_key,  profile_key ) 
       VALUES
        (@dkt_key_no,tkt_prd_key,@tkt_key,@tkt_fare_key,v_vat_code,v_applied_on_value,
	v_inclusive_exclusive_code,v_collection_code,v_io_type_code,v_percentage,vat_amt,vat_on_amt,vat_amt,
	0,user_profile_key) ;
	END IF;

INSERT INTO ID_KK_TEST(COL1,COL2) VALUES ('131',tkt_key);
	

      	SET vat_on_amt = 0;
	SET vat_amt = 0;
     END LOOP vat_master_cursor_main;
     CLOSE vat_master_cursor_main;
   END IF;

  SET DONE = FALSE;
  SET p_cursor = 't_id_tvl_service_charges_details'; 	

SET tot_vat_amt = 0 ;
 IF v_tax_k7_amt > 0 THEN

  SELECT SUM(IFNULL(tvc_amount,0)) INTO @v_k7_srv_amt FROM t_id_tvl_vat_charge_details 
  WHERE tvc_appliedon_value='Service Fee' AND  tvc_ticket_key=@TKT_KEY AND tvc_docket_key =  @dkt_key_no 
  AND tvc_ticket_key = tkt_prd_key;
  
  INSERT INTO ID_KK_TEST(COL1,COL2) VALUES ('132',tkt_key);

  INSERT INTO t_id_tvl_service_charges_details (
  tsc_docket_key,tsc_product_key,tsc_ticket_key,tsc_service_charge_id,tsc_charge_key,tsc_parent_key,
  tsc_currency_key,tsc_ex_rate,tsc_base_amount,tsc_local_amount,tsc_type,tsc_payback_parner_key,tsc_payback_on,
  tsc_payback_percent,tsc_tax_code,tsc_tax_percentage,tsc_tax_on_amount,tsc_tax_on_component,lock_key,profile_key) 
  VALUES
  ( @dkt_key_no,tkt_prd_key,@tkt_key,NULL,NULL,NULL,
    '1',1,IFNULL(v_tax_k7_amt,0) + IFNULL(v_k7_srv_amt,0) ,IFNULL(v_tax_k7_amt,0) + IFNULL(v_k7_srv_amt,0),'C',NULL,0,
    NULL,NULL,NULL,NULL,NULL,0,user_profile_key) ;

  INSERT INTO t_id_tvl_service_charges_details (
  tsc_docket_key,tsc_product_key,tsc_ticket_key,tsc_service_charge_id,tsc_charge_key,tsc_parent_key,
  tsc_currency_key,tsc_ex_rate,tsc_base_amount,tsc_local_amount,tsc_type,tsc_payback_parner_key,tsc_payback_on,
  tsc_payback_percent,tsc_tax_code,tsc_tax_percentage,tsc_tax_on_amount,tsc_tax_on_component,lock_key,profile_key) 
  VALUES
  ( @dkt_key_no,tkt_prd_key,@tkt_key,NULL,NULL,NULL,
    '1',1,IFNULL(v_tax_k7_amt,0),IFNULL(v_tax_k7_amt,0),'S',NULL,0,
    NULL,NULL,NULL,NULL,NULL,0,user_profile_key) ; 
 SET tot_vat_amt = IFNULL(v_tax_k7_amt,0) + IFNULL(v_k7_srv_amt,0);
 ELSE

 OPEN vat_in_out_cursor;
 vat_in_out_cursor : LOOP 
 FETCH vat_in_out_cursor INTO vat_in_out,vat_tot_amount;
  IF DONE THEN
    LEAVE vat_in_out_cursor;
  END IF;
 INSERT INTO `t_id_tvl_service_charges_details` (
  tsc_docket_key,tsc_product_key,tsc_ticket_key,tsc_service_charge_id,tsc_charge_key,tsc_parent_key,
  tsc_currency_key,tsc_ex_rate,tsc_base_amount,tsc_local_amount,tsc_type,tsc_payback_parner_key,tsc_payback_on,
  tsc_payback_percent,tsc_tax_code,tsc_tax_percentage,tsc_tax_on_amount,tsc_tax_on_component,lock_key,profile_key) 
 VALUES
  ( @dkt_key_no,tkt_prd_key,@tkt_key,NULL,NULL,NULL,
    '1',1,vat_tot_amount,vat_tot_amount,(CASE vat_in_out WHEN 'I' THEN 'C' ELSE 'S' END),NULL,0,
    NULL,NULL,NULL,NULL,NULL,0,user_profile_key) ;
    SET DONE = FALSE;
    END LOOP vat_in_out_cursor;
    CLOSE vat_in_out_cursor;
  END IF;  
  
  INSERT INTO ID_KK_TEST(COL1,COL2) VALUES ('136',@tkt_key);  
  
     SELECT SUM(IFNULL(tvc_amount,0)) INTO @tot_vat_amt FROM t_id_tvl_vat_charge_details 
     WHERE tvc_docket_key = @dkt_key_no AND tvc_ticket_key = @tkt_key AND tvc_product_key = tkt_prd_key AND tvc_collection_code = 'C';

    SET collect_amount = CONVERT((IFNULL(tkt_card_amount,0) + IFNULL(cust_amt,0) + IFNULL(cash_amount,0) + IFNULL(total_serv_amount,0) + IFNULL(@tot_vat_amt,0)) , DECIMAL(18,4));
	
INSERT INTO ID_KK_TEST(COL1,COL2) VALUES ('6006',CONCAT('collect_amount',collect_amount));

    UPDATE t_id_tvl_fare_details SET tfd_settle_amount = collect_amount,tfd_total_service_charge = IFNULL(total_serv_amount,0)
     WHERE tfd_docket_key = @dkt_key_no AND tfd_product_key = tkt_prd_key AND tfd_ticket_key = @tkt_key ;


INSERT INTO ID_KK_TEST(COL1,COL2) VALUES ('6006',CONCAT('tfd_settle_amount',collect_amount));
INSERT INTO ID_KK_TEST(COL1,COL2) VALUES ('133',CONCAT('tkt_key',' ',@tkt_key));

     SET p_cursor    =   't_id_tvl_fop_details'; 
	 

     SET trans_amount = 0;
     SET fd_local_amt = 0;
     SET FOP_VALUE = NULL;
     SET fop_settle_key = NULL;  

  IF sett_mode IN ('1','4','5','7') THEN
      SET trans_amount = IFNULL(cash_amount,0) + IFNULL(total_serv_amount,0) + IFNULL(@tot_vat_amt,0);
      SET fd_local_amt  = trans_amount * ex_rate;
      SET FOP_VALUE = 'CASH';
      OPEN fop_settlement_cursor;
      FETCH fop_settlement_cursor INTO fop_settle_key;
      CLOSE fop_settlement_cursor;

       INSERT INTO t_id_tvl_fop_details (
	fopd_docket_key,fopd_produt_key,fopd_ticket_key,fopd_settle_key,fopd_currency_key,fopd_ex_rate,fopd_trans_amount,
	fopd_local_amount,fopd_remarks,fopd_voucher_key,lock_key,profile_key) 
       VALUES  (
        @dkt_key_no,tkt_prd_key,@tkt_key,fop_settle_key,tkt_curr_key,ex_rate,ROUND(trans_amount,4),
        ROUND(fd_local_amt,4),NULL,0,0,user_profile_key) ;   

         SELECT fopd_key INTO @tkt_fopd_key FROM `t_id_tvl_fop_details` WHERE fopd_ticket_key = @tkt_key AND
    fopd_produt_key = tkt_prd_key AND fopd_docket_key = @dkt_key_no AND fopd_settle_key = 1 limit 1;

      SET  definition_code = 'fbbranch';
      OPEN fop_more_details_cursor;
      FETCH fop_more_details_cursor INTO fop_def_key;
      CLOSE fop_more_details_cursor;    

      INSERT INTO t_id_tvl_fop_more_details(fopmd_fopd_key,fopmd_order,fopmd_definition_key,fopmd_value_key,fopmd_value_code,fopmd_value_description,fopmd_value_date,lock_key,profile_key)
  VALUES(@tkt_fopd_key,1,fop_def_key,t_location_key,pcc_loc,NULL,NULL,0,user_profile_key);        

     END IF;

     SET trans_amount = 0;
     SET fd_local_amt = 0;
     SET FOP_VALUE = NULL;
     SET fop_settle_key = NULL;	 

   IF sett_mode IN ('2','4','6','7') THEN
       SET trans_amount = IFNULL(cust_amt,0) + IFNULL(total_serv_amount,0) + IFNULL(@tot_vat_amt,0);
       SET fd_local_amt  = trans_amount * ex_rate;
       SET FOP_VALUE = 'CREDIT';

      OPEN fop_settlement_cursor;
      FETCH fop_settlement_cursor INTO fop_settle_key;
      CLOSE fop_settlement_cursor;
      INSERT INTO t_id_tvl_fop_details (
	fopd_docket_key,fopd_produt_key,fopd_ticket_key,fopd_settle_key,fopd_customer_key,fopd_currency_key,fopd_ex_rate,fopd_trans_amount,
	fopd_local_amount,fopd_remarks,fopd_voucher_key,lock_key,profile_key) 
      VALUES  (
       @dkt_key_no,tkt_prd_key,@tkt_key,fop_settle_key,cust_key,tkt_curr_key,ex_rate,ROUND(trans_amount,4),
       ROUND(fd_local_amt,4),NULL,0,0,user_profile_key) ;     

      SELECT fopd_key INTO @tkt_fopd_key FROM `t_id_tvl_fop_details` WHERE fopd_ticket_key = @tkt_key AND
    fopd_produt_key = tkt_prd_key AND fopd_docket_key = @dkt_key_no AND fopd_settle_key = 2;       

      SET  definition_code = 'fbpcode';
     OPEN fop_more_details_cursor;
     FETCH fop_more_details_cursor INTO fop_def_key;
     CLOSE fop_more_details_cursor;    

      INSERT INTO t_id_tvl_fop_more_details(fopmd_fopd_key,fopmd_order,fopmd_definition_key,fopmd_value_key,fopmd_value_code,fopmd_value_description,fopmd_value_date,lock_key,profile_key)
		VALUES(@tkt_fopd_key,1,fop_def_key,cust_key,cust_code,NULL,NULL,0,user_profile_key); 

     SET  definition_code = 'flpnum';
     OPEN fop_more_details_cursor;
     FETCH fop_more_details_cursor INTO fop_def_key;
     CLOSE fop_more_details_cursor;    

      INSERT INTO t_id_tvl_fop_more_details(fopmd_fopd_key,fopmd_order,fopmd_definition_key,fopmd_value_key,fopmd_value_code,fopmd_value_description,
	  fopmd_value_date,lock_key,profile_key)
  VALUES(@tkt_fopd_key,2,fop_def_key,NULL,NULL,IFNULL(lpo,'PENDING'),NULL,0,user_profile_key); 

     SET  definition_code = 'flpdate';
     OPEN fop_more_details_cursor;
     FETCH fop_more_details_cursor INTO fop_def_key;
     CLOSE fop_more_details_cursor;    

      INSERT INTO t_id_tvl_fop_more_details(fopmd_fopd_key,fopmd_order,fopmd_definition_key,fopmd_value_key,fopmd_value_code,fopmd_value_description,fopmd_value_date,lock_key,profile_key)
		VALUES(@tkt_fopd_key,3,fop_def_key,NULL,NULL,lpo_date,lpo_date,0,user_profile_key);  
     END IF;	 

    SET trans_amount = 0;
     SET fd_local_amt = 0;
     SET FOP_VALUE = NULL;
     SET fop_settle_key = NULL;

     IF sett_mode IN('3','5','6','7') THEN
       SET trans_amount = IFNULL(tkt_card_amount,0) + IFNULL(total_serv_amount,0) + IFNULL(@tot_vat_amt,0);
       SET fd_local_amt  = trans_amount * ex_rate;
       SET FOP_VALUE = 'CARD';


       OPEN fop_settlement_cursor;
       FETCH fop_settlement_cursor INTO fop_settle_key;
       CLOSE fop_settlement_cursor;

       INSERT INTO t_id_tvl_fop_details (
	 fopd_docket_key,fopd_produt_key,fopd_ticket_key,fopd_settle_key,fopd_currency_key,fopd_ex_rate,fopd_trans_amount,
	 fopd_local_amount,fopd_remarks,fopd_voucher_key,lock_key,profile_key) 
       VALUES  (
         @dkt_key_no,tkt_prd_key,@tkt_key,fop_settle_key,tkt_curr_key,ex_rate,ROUND(trans_amount,4),
         ROUND(fd_local_amt,4),NULL,0,0,user_profile_key) ;     

         SELECT fopd_key INTO @tkt_fopd_key FROM `t_id_tvl_fop_details` WHERE fopd_ticket_key = @tkt_key AND
    fopd_produt_key = tkt_prd_key AND fopd_docket_key = @dkt_key_no AND fopd_settle_key = 3;

        IF P_FOP_KEY IS NULL THEN
         SET P_FOP_KEY = @tkt_fopd_key;
        ELSE
         SET P_FOP_KEY = CONCAT(P_FOP_KEY,':',@tkt_fopd_key);
        END IF;


     SET  definition_code = 'fcardtype';
     OPEN fop_more_details_cursor;
     FETCH fop_more_details_cursor INTO fop_def_key;
     CLOSE fop_more_details_cursor;    

      INSERT INTO t_id_tvl_fop_more_details(fopmd_fopd_key,fopmd_order,fopmd_definition_key,fopmd_value_key,fopmd_value_code,fopmd_value_description,fopmd_value_date,lock_key,profile_key)
		VALUES(@tkt_fopd_key,1,fop_def_key,card_key,card_type,NULL,NULL,0,user_profile_key); 

     SET  definition_code = 'fcardnum';
     OPEN fop_more_details_cursor;
     FETCH fop_more_details_cursor INTO fop_def_key;
     CLOSE fop_more_details_cursor;   

	  SET tkt_card_number = LTRIM(RTRIM(tkt_card_number));

	  IF LENGTH(tkt_card_number) = 15 THEN
	   SET tkt_card_num_x =  CONCAT(SUBSTR(tkt_card_number,1,4),'XXXXXXX',SUBSTR(tkt_card_number,-4));
	  ELSEIF LENGTH(tkt_card_number) = 16 THEN
	   SET tkt_card_num_x =  CONCAT(SUBSTR(tkt_card_number,1,4),'XXXXXXXX',SUBSTR(tkt_card_number,-4));
	  ELSEIF LENGTH(tkt_card_number) = 14 THEN
	   SET tkt_card_num_x =  CONCAT(SUBSTR(tkt_card_number,1,4),'XXXXXX',SUBSTR(tkt_card_number,-4)); 
	  END IF;  

      INSERT INTO t_id_tvl_fop_more_details(fopmd_fopd_key,fopmd_order,fopmd_definition_key,fopmd_value_key,fopmd_value_code,fopmd_value_description,fopmd_value_date,lock_key,profile_key)
		VALUES(@tkt_fopd_key,2,fop_def_key,NULL,NULL,tkt_card_num_x,NULL,0,user_profile_key); 

     SET  definition_code = 'fcardDate';
     OPEN fop_more_details_cursor;
     FETCH fop_more_details_cursor INTO fop_def_key;
     CLOSE fop_more_details_cursor;    

      INSERT INTO t_id_tvl_fop_more_details(fopmd_fopd_key,fopmd_order,fopmd_definition_key,fopmd_value_key,fopmd_value_code,fopmd_value_description,fopmd_value_date,lock_key,profile_key)
  VALUES(@tkt_fopd_key,3,fop_def_key,NULL,NULL,card_exp_dt,NULL,0,user_profile_key); 

     END IF;	

	OPEN  CAR_CFR_TKT_NO_CHK;
    FETCH CAR_CFR_TKT_NO_CHK INTO v_conf_tkt_number_chk;
    CLOSE CAR_CFR_TKT_NO_CHK;

IF IFNULL(v_conf_tkt_number_chk,'N') = 'Y' THEN 
     update t_id_tvl_docket_header_summary 
	  set dkt_car_count = ifnull(dkt_ccr_cnt,0) + 1,dkt_account_status = (case dkt_acc_status when 'Not Collected' then 'Not Collected' else 'Partially Collected' end),dkt_modified_by = user_created_key ,dkt_modified_on = CURRENT_DATE where dkt_number = dkt_num;
	  
 
 
	  END IF;

     SET p_udid_code = 'FF1'; 
     SET p_udid_value	= NULL;
     SET ud_def_key	= NULL;
     SET ud_mode_key	= NULL;
     SET ud_order	= NULL;    
     OPEN air_udid_values;
     FETCH air_udid_values INTO p_udid_value;
     CLOSE air_udid_values;

     IF p_udid_value IS NOT NULL AND p_udid_value != '' THEN 

      OPEN tvl_udid_def_key;
      FETCH tvl_udid_def_key INTO ud_def_key,ud_mode_key,ud_order;
      CLOSE tvl_udid_def_key;

      IF ud_def_key IS NOT NULL AND ud_def_key != '' THEN
       INSERT INTO t_id_tvl_udid_details(tud_docket_key,tud_mode_key,tud_product_key,tud_ticket_key,tud_defintion_key,tud_order,
		tud_value_value_key,tud_value_code,tud_value_description,tud_value_date,lock_key,profile_key)
       VALUES(@dkt_key_no,ud_mode_key,tkt_prd_key,@tkt_key,ud_def_key,ud_order,NULL,NULL,p_udid_value,NULL,0,user_profile_key);
      END IF;
     END IF;

     SET p_udid_code = 'FF2';
     SET p_udid_value	= NULL;
     SET ud_def_key	= NULL;
     SET ud_mode_key	= NULL;
     SET ud_order	= NULL;
     OPEN air_udid_values;
     FETCH air_udid_values INTO p_udid_value;
     CLOSE air_udid_values;

     IF p_udid_value IS NOT NULL AND p_udid_value != '' THEN 

      OPEN tvl_udid_def_key;
      FETCH tvl_udid_def_key INTO ud_def_key,ud_mode_key,ud_order;
      CLOSE tvl_udid_def_key;

      IF ud_def_key IS NOT NULL AND ud_def_key != '' THEN
       INSERT INTO t_id_tvl_udid_details(tud_docket_key,tud_mode_key,tud_product_key,tud_ticket_key,tud_defintion_key,tud_order,
		tud_value_value_key,tud_value_code,tud_value_description,tud_value_date,lock_key,profile_key)
       VALUES(@dkt_key_no,ud_mode_key,tkt_prd_key,@tkt_key,ud_def_key,ud_order,NULL,NULL,p_udid_value,NULL,0,user_profile_key);
      END IF;
     END IF;
  SET DONE = FALSE;
   OPEN tvl_udid_amadeus;
      tvl_udid_amadeus: LOOP
      FETCH tvl_udid_amadeus INTO am_udid_value,am_udid_abbreviation;
      IF DONE THEN
       LEAVE tvl_udid_amadeus;
      END IF;   

     SET p_udid_code = am_udid_abbreviation; 
     SET p_udid_value	= NULL;
     SET ud_def_key	= NULL;
     SET ud_mode_key	= NULL;
     SET ud_order	= NULL;
     SET dynamic_udid_key = NULL;  

     OPEN tvl_dynamic_def_key;
     FETCH tvl_dynamic_def_key INTO dynamic_udid_key;
     CLOSE tvl_dynamic_def_key;  

     OPEN air_udid_values_1;
     FETCH air_udid_values_1 INTO p_udid_value;
     CLOSE air_udid_values_1;

     IF p_udid_value IS NOT NULL AND p_udid_value != '' THEN 

      OPEN tvl_ama_udid_def_key;
      FETCH tvl_ama_udid_def_key INTO ud_def_key,ud_mode_key,ud_order;
      CLOSE tvl_ama_udid_def_key;

  OPEN udid_value_code_cursor;
  FETCH udid_value_code_cursor INTO value_key,value_code;
  CLOSE udid_value_code_cursor;

      IF ud_def_key IS NOT NULL AND ud_def_key != '' THEN
       INSERT INTO t_id_tvl_udid_details(tud_docket_key,tud_mode_key,tud_product_key,tud_ticket_key,tud_defintion_key,tud_order,
		tud_value_value_key,tud_value_code,tud_value_description,tud_value_date,lock_key,profile_key)
       VALUES(@dkt_key_no,ud_mode_key,tkt_prd_key,@tkt_key,ud_def_key,ud_order,IFNULL(value_key,NULL),IFNULL(value_code,NULL),p_udid_value,NULL,0,user_profile_key);
      END IF;
     END IF;

      SET DONE = FALSE;
     END LOOP tvl_udid_amadeus;
     CLOSE tvl_udid_amadeus;  

     SET DONE = FALSE;	 

SET P_SUCCESS = 'Y';
 ELSE
  SET msg = 'Car Details';
  SET p_cursor_1='Confirmation Number already available CAR details ';
    SET P_SUCCESS = 'N';
    INSERT INTO t_id_gds_loading_exception (LE_COMPANY,LE_CRS,LE_AIRLINE,LE_TICKET_NUMBER,LE_LOAD_DATE,LE_LOAD_ERROR,
					    LE_LOAD_PLACE,LE_REMARK_1,LE_REMARK_2,LE_REMARK_3,LE_REMARK_4,lock_key,profile_key) 
				VALUES('1','AMADEUS_CAR', NULL,v_conf_number,CURRENT_DATE,msg,p_cursor_1,CONCAT('Reference -',p_key),NULL,NULL,IFNULL(pnr_number,'NULL'),0,4);
    CLOSE ticket_check_cursor;
   END IF;

END IF;

SET DONE = FALSE;
END LOOP hotel_car_header;
CLOSE hotel_car_header;	

  END IF;  
SET DONE = FALSE;
SET BDF =0;
IF P_SUCCESS = 'Y' THEN
    UPDATE t_id_gds_details
    SET tigd_status = 'C'
    WHERE tigd_gds_key = P_KEY
    AND tigd_gds_type = 'AMADEUS';
  ELSEIF P_SUCCESS = 'N' THEN
    UPDATE t_id_gds_details
    SET tigd_status = 'E',
        tigd_flex_2 = p_cursor
    WHERE tigd_gds_key = P_KEY
    AND tigd_gds_type = 'AMADEUS';
  ELSE
    UPDATE t_id_gds_details
    SET tigd_status = 'N'
    WHERE tigd_gds_key = P_KEY
    AND tigd_gds_type = 'AMADEUS';
  END IF;
END;
 END IF; 
 IF IFNULL(air_find_code,'N')='Y' AND IFNULL(prd_code,'xxx') NOT IN('CCR') AND IFNULL(air_rfnd,'xyz') <> 'RF' THEN
   BEGIN
 DECLARE DONE 				BOOLEAN DEFAULT FALSE;
 DECLARE BDF 				INT DEFAULT 0;
 DECLARE errcount 		INT;
 DECLARE errno 			INT;
 DECLARE msg 				TEXT;
 DECLARE p_cursor       VARCHAR(240);
 DECLARE p_cursor_1     VARCHAR(240);
 DECLARE tkt_void_status VARCHAR(2);
 DECLARE ticket_check_cursor_tkt VARCHAR(25);
 DECLARE v_tmp_tfind			VARCHAR(2); 
 DECLARE p_tkt_number 		VARCHAR(240);
 DECLARE p_conj_number 	   VARCHAR(240);
 DECLARE sec_tkt_number 	VARCHAR(240);
 DECLARE p_air_serial 		BIGINT;
 DECLARE book_clerk        VARCHAR(10);
 DECLARE ticket_clerk      VARCHAR(10);
 DECLARE ticket_clerk_branch      VARCHAR(25);
 DECLARE book_clerk_key    BIGINT;
 DECLARE ticket_clerk_key  BIGINT;
 DECLARE tmp_class         VARCHAR(10);
DECLARE  pr_remarks        VARCHAR(240);
DECLARE sec_air_serial    BIGINT;
DECLARE  miles 			VARCHAR(10);
DECLARE fare_basis      VARCHAR(25);
DECLARE v_inv_chk_f				VARCHAR(15);
DECLARE ldge_crd_flag    VARCHAR(10);
  DECLARE srv_fee_chk       VARCHAR(10);   
 DECLARE tkt_location  		VARCHAR(10);
 DECLARE tkt_date      		DATETIME;
 DECLARE tvl_date      		DATETIME;
 DECLARE trvl_duration		varchar(20);
 DECLARE tkt_airline  		VARCHAR(10);
 DECLARE emd_mode_flage      VARCHAR(10);
 DECLARE s_airline 			VARCHAR(10);
 DECLARE tkt_air_release	VARCHAR(10);
 DECLARE exp_tkt_clerk     VARCHAR(10);
 DECLARE bsp_flag          VARCHAR(10);
 DECLARE tkt_class_emd		VARCHAR(10);
 DECLARE tkt_class			VARCHAR(10);
 DECLARE f_dest				VARCHAR(10);
 DECLARE t_dest				VARCHAR(10);
 DECLARE o_dest				VARCHAR(10);
 DECLARE final_dest			VARCHAR(10);
 DECLARE src_dest				VARCHAR(10);
 DECLARE final_key			BIGINT;
 DECLARE src_key				BIGINT;
 DECLARE s_serial				BIGINT;
 DECLARE e_f_sec				VARCHAR(10);
 DECLARE e_t_sec				VARCHAR(10);
 DECLARE rc_cr_dt				VARCHAR(10);
   DECLARE lcc_ex_num    VARCHAR(20);
 
 DECLARE tkt_exch_doc_number 	VARCHAR(25) DEFAULT  NULL;
 DECLARE pub_fare           	DOUBLE;
 DECLARE low_fare           	VARCHAR(10);
 DECLARE high_fare           	VARCHAR(10);
  DECLARE rsn_code       	    VARCHAR(200);
 DECLARE ec_code                VARCHAR(100); 
 DECLARE sell_fare      		DOUBLE;
 DECLARE ex_rate            	DOUBLE  DEFAULT  1;
 DECLARE tkt_currency       	VARCHAR(10);
 DECLARE tmp_sell_fare      	DOUBLE  DEFAULT  0;
 DECLARE tmp_ex_rate        	DOUBLE  DEFAULT  1;
 DECLARE tmp_currency       	VARCHAR(10);
 DECLARE base_currency      	VARCHAR(10);
 DECLARE tkt_fare_mode      	VARCHAR(5);
 DECLARE v_pub_fare          	DOUBLE;
 DECLARE v_ex_rate           	DOUBLE  DEFAULT  1;
 DECLARE v_tkt_currency      	VARCHAR(10);
 DECLARE exch_rate          	DOUBLE  DEFAULT  1;
 DECLARE v_issue_mode	      VARCHAR(10);
 DECLARE tkt_curr_key			BIGINT;
 DECLARE tkt_prd_key				VARCHAR(10);
 DECLARE issue_mode_key			BIGINT;
 DECLARE fd_local_amt			DOUBLE;
 DECLARE aln_pnr_num			varchar(50);
 DECLARE s_serial_key      VARCHAR(19);
 DECLARE rsn_code_key      BIGINT;
 
 DECLARE air_rls_key			INT;
 DECLARE dkt_key_no			BIGINT;
 DECLARE dkt_sum_key			BIGINT;
 DECLARE dkt_num_key			BIGINT;
 DECLARE dkt_acc_status		VARCHAR(25); 
 DECLARE tkt_key				BIGINT;
 DECLARE tkt_srv_key			BIGINT;
 DECLARE tkt_tax_key			BIGINT;
 DECLARE tkt_fopd_key		BIGINT;
 DECLARE prd_type				VARCHAR(10);
 DECLARE tmp_iata_code		VARCHAR(25);
 DECLARE t_iata_agent		VARCHAR(25);
 DECLARE t_iata_location	VARCHAR(25);
 DECLARE t_agent_key			BIGINT;
  DECLARE vendor_key			BIGINT;
  DECLARE vendor_exp_key        BIGINT;
 DECLARE v_conf_tkt_number_chk VARCHAR(10);
 DECLARE src_agent_key		BIGINT;
 DECLARE t_location_key		BIGINT;
 DECLARE t_location_code	VARCHAR(25);
 DECLARE t_location_name	VARCHAR(25);
 DECLARE v_brnch_code		VARCHAR(25);
 DECLARE v_deal_code		   VARCHAR(25);
 DECLARE pnr_number			VARCHAR(25);
 DECLARE ama_branch			VARCHAR(25);
 DECLARE fop_def_key			BIGINT;
 DECLARE dkt_air_cnt           BIGINT;
  DECLARE rm_mod_status          VARCHAR(2);
  DECLARE tot_rm_crd_amt      DOUBLE;  
DECLARE crd_fp_trans_amount DOUBLE;
DECLARE tkt_fp_crd_amt      DOUBLE;
DECLARE tkt_fp_card_amount  DOUBLE;
 
 DECLARE APP_NUM          VARCHAR(20);
 declare l_card_key       BIGINT;
 DECLARE tax1   		VARCHAR(10);
 DECLARE tax2   		VARCHAR(10);
 DECLARE tax3   		VARCHAR(10);
 DECLARE tax4   		VARCHAR(10);
 DECLARE tax5   		VARCHAR(10);
 DECLARE tax6   		VARCHAR(10);
 DECLARE tax7   		VARCHAR(10);
 DECLARE tax8   		VARCHAR(10);
 DECLARE tax9   		VARCHAR(10);
 DECLARE tax10  		VARCHAR(10);
 DECLARE tax11  		VARCHAR(10);
 DECLARE tax12  		VARCHAR(10);
 DECLARE tax13  		VARCHAR(10);
 DECLARE tax14   		VARCHAR(10);
 DECLARE tax15   		VARCHAR(10);
 DECLARE tax16   		VARCHAR(10);
 DECLARE tax17   		VARCHAR(10);
 DECLARE tax18   		VARCHAR(10);
 DECLARE tax19   		VARCHAR(10);
 DECLARE tax20  		VARCHAR(10);
 DECLARE tax45  		VARCHAR(10);
 DECLARE taxa1  		DOUBLE  DEFAULT  0;
 DECLARE taxa2  		DOUBLE  DEFAULT  0;
 DECLARE taxa3  		DOUBLE  DEFAULT  0;
 DECLARE taxa4  		DOUBLE  DEFAULT  0;
 DECLARE taxa5  		DOUBLE  DEFAULT  0;
 DECLARE taxa6  		DOUBLE  DEFAULT  0;
 DECLARE taxa7  		DOUBLE  DEFAULT  0;
 DECLARE taxa8  		DOUBLE  DEFAULT  0;
 DECLARE taxa9  		DOUBLE  DEFAULT  0;
 DECLARE taxa10 		DOUBLE  DEFAULT  0;
 DECLARE taxa11 		DOUBLE  DEFAULT  0;
 DECLARE taxa12 		DOUBLE  DEFAULT  0;
 DECLARE taxa13 		DOUBLE  DEFAULT  0;
 DECLARE taxa14  		DOUBLE  DEFAULT  0;
 DECLARE taxa15  		DOUBLE  DEFAULT  0;
 DECLARE taxa16  		DOUBLE  DEFAULT  0;
 DECLARE taxa17  		DOUBLE  DEFAULT  0;
 DECLARE taxa18  		DOUBLE  DEFAULT  0;
 DECLARE taxa19  		DOUBLE  DEFAULT  0;
 DECLARE taxa20 		DOUBLE  DEFAULT  0;
 DECLARE taxa45 		DOUBLE  DEFAULT  0;
 DECLARE tax_d       DOUBLE;
 DECLARE tax_1       DOUBLE;
 DECLARE tax_2       DOUBLE;
 DECLARE tax_code   	VARCHAR(10);
 DECLARE tax_amount 	DOUBLE DEFAULT 0;
 DECLARE tax_find    VARCHAR(1);
 DECLARE tax_cnt		INT;
 DECLARE tot_tax     DOUBLE;
 DECLARE tax_key		BIGINT;
 DECLARE tkt_destination_tax  DOUBLE;
 DECLARE excep_tkt_chk     VARCHAR(10);
 
   DECLARE arm_seg_key     BIGINT;
  DECLARE arm_dtls        VARCHAR(200);
  DECLARE prx_nme           VARCHAR(100);       
 DECLARE sale_exec          	VARCHAR(10);
 DECLARE cust_code          	VARCHAR(20);
 DECLARE walk_cust_code     	VARCHAR(30);
 DECLARE addi_selling       	DOUBLE  DEFAULT  0;
 DECLARE fare_comm_amtt        DOUBLE  DEFAULT  0; 
 DECLARE addi_collection    	DOUBLE  DEFAULT  0;
 DECLARE disc_amt           	DOUBLE  DEFAULT  0;
 DECLARE orc_amt            	DOUBLE  DEFAULT  0;
 DECLARE spl_disc           	DOUBLE  DEFAULT  0;
 DECLARE cash_amount  		DOUBLE;
 DECLARE sett_mode      	VARCHAR(1);
 DECLARE sett_mode_1     	VARCHAR(1);
 DECLARE sett_mode_2      	VARCHAR(1);
 DECLARE lpo               VARCHAR(24);
 DECLARE corporate 			VARCHAR(10);
 DECLARE pnrnumber 			VARCHAR(20);
 DECLARE default_msg       VARCHAR(240);
 
 DECLARE tkt_crd_amt         DOUBLE;
 DECLARE servicefees 		DOUBLE DEFAULT 0;
 DECLARE lpo_date 			DATETIME;
 DECLARE cust_amt          DOUBLE  DEFAULT  0;
 DECLARE tkt_card_find     VARCHAR(2);
 DECLARE tkt_card_type  	VARCHAR(10);
 DECLARE tkt_card_number 	VARCHAR(50);
 DECLARE tkt_card_num_x		VARCHAR(50);
 DECLARE tkt_card_amount 	DOUBLE;
 DECLARE amex_app_code 		VARCHAR(30);
 DECLARE expiry_date 		VARCHAR(30);
 DECLARE emd_flag  			VARCHAR(1)   DEFAULT  'N';
 DECLARE emd_sector_flag	VARCHAR(1)   DEFAULT  'N';
 DECLARE emd_tkt_ind 		VARCHAR(5);
 DECLARE tkt_pax           VARCHAR(75);
 DECLARE tkt_ty_pax        VARCHAR(75);
 DECLARE tkt_pax_name      VARCHAR(75);
 DECLARE tkt_dkt_pax       VARCHAR(75);
 DECLARE trans_amount 		DOUBLE;
 DECLARE tot_trans_amount    DOUBLE;
 DECLARE crd_fp           VARCHAR(100);
 DECLARE crd_csh          VARCHAR(300);
 DECLARE crd_fpo          VARCHAR(200);
 DECLARE cash_trans_amount 		DOUBLE;
 DECLARE cr_trans_amount 		DOUBLE;
 DECLARE crd_trans_amount 		DOUBLE;
 DECLARE collect_amount 	DECIMAL(18,4);
 DECLARE definition_code	VARCHAR(100);	
 DECLARE card_key				BIGINT;
 DECLARE card_type			VARCHAR(75);
 DECLARE card_name			VARCHAR(75);
 DECLARE card_an_key			BIGINT;
 DECLARE card_an_code		VARCHAR(75);
 DECLARE card_an_name		VARCHAR(75);
 DECLARE card_srv_fee		DOUBLE;
 DECLARE card_lodge_status	VARCHAR(75);
 DECLARE card_lodge_num		VARCHAR(75);
 DECLARE card_exp_dt			DATE;
 
 DECLARE t_sec_serial		INT;
 DECLARE t_sec_src  			VARCHAR(10);
 DECLARE t_sec_dest  		VARCHAR(10);
 DECLARE t_sec_class  		VARCHAR(10);
 DECLARE t_sec_airline  	VARCHAR(10);
 DECLARE t_sec_year  		VARCHAR(10);
 DECLARE t_sec_dept_dt  	VARCHAR(10);
 DECLARE t_sec_dept_tm  	VARCHAR(10);
 DECLARE t_sec_arrv_dt  	VARCHAR(10);
 DECLARE t_sec_arrv_tm  	VARCHAR(10);
 DECLARE t_sec_baggage		INT;
 DECLARE t_sec_flight  		VARCHAR(10);
 DECLARE tkt_dept_date		DATETIME;
 DECLARE tkt_arr_date  		DATETIME;
 DECLARE s_arr_key			INT;
 DECLARE s_dst_key			INT;
 DECLARE s_cls_key			INT;
 DECLARE s_air_key			INT;
 DECLARE s_coupon				INT;
 DECLARE conj_flg				INT;
  
 DECLARE DKT_NUM   			VARCHAR(4000);
 DECLARE DKT_STATUS    		VARCHAR(4000);
 DECLARE DKT_TEXT      		VARCHAR(4000);
 DECLARE dkt_type_value		VARCHAR(400);
 DECLARE dkt_type_key		BIGINT;
 
 DECLARE v_applied_on_code				VARCHAR(2);
 DECLARE v_applied_on_value			VARCHAR(240);
 DECLARE v_inter_domestic_key			INT;
 DECLARE v_product_type					INT;
 DECLARE v_package_normal_key			INT;
 DECLARE v_output_input_type_key		INT;
 DECLARE v_percentage					DOUBLE;
 DECLARE v_applicable_on				DATE;
 DECLARE v_applied_on_key				INT;
 DECLARE v_vat_code						VARCHAR(2000);
 DECLARE v_vat_description					VARCHAR(2000);
 DECLARE v_inclusive_exclusive_key		INT;
 DECLARE v_inclusive_exclusive_code		VARCHAR(2000);
 DECLARE v_inclusive_exclusive_value	VARCHAR(2000);
 DECLARE v_collection_type_key		INT;
 DECLARE v_collection_code		VARCHAR(2000);
 DECLARE v_io_type_code			VARCHAR(2000);
 DECLARE v_io_type_value		VARCHAR(2000);
 DECLARE vat_applied_on			VARCHAR(240);
 
 DECLARE vat_on_amt				DOUBLE;
 DECLARE vat_amt					DOUBLE;
 DECLARE canc_amt					DOUBLE;
 DECLARE comm_amt					DOUBLE;
 DECLARE tot_vat_amt				DOUBLE;
 DECLARE v_tax_k7_amt   		DECIMAL(16,2);
 DECLARE v_k7_tax_amt  			DECIMAL(16,2);
 DECLARE v_k7_srv_amt   		DECIMAL(16,2);
 DECLARE v_tax_k7_code  		VARCHAR(24);
 
 DECLARE tax_vat_code				VARCHAR(2000);
 DECLARE tax_vat_description		VARCHAR(2000);
 DECLARE tax_inclusive_exclusive_code	VARCHAR(2000);
 DECLARE tax_collection_code		VARCHAR(2000);
 DECLARE tax_io_type_code			VARCHAR(2000);
 DECLARE tax_vat_percentage		DOUBLE;
 DECLARE tax_vat_amt					DOUBLE;
 DECLARE tax_appliedon_code		VARCHAR(20);
 DECLARE tax_appliedon_value		VARCHAR(240);
 DECLARE tax_applicable_on					VARCHAR(2000);
 
 DECLARE air_seg_map            VARCHAR(20);
 DECLARE srv_vat_code			VARCHAR(2000);
 DECLARE srv_vat_description	VARCHAR(2000);
 DECLARE srv_inclusive_exclusive_code	VARCHAR(2000);
 DECLARE srv_collection_code	VARCHAR(2000);
 DECLARE srv_io_type_code		VARCHAR(2000);
 DECLARE srv_vat_percentage	DOUBLE;
 DECLARE srv_vat_amt				DOUBLE;
 DECLARE srv_appliedon_code	VARCHAR(20);
 DECLARE srv_appliedon_value	VARCHAR(240);
 DECLARE srv_vat_applicable	VARCHAR(2000);
  DECLARE value_key             VARCHAR(50);
 DECLARE value_code             VARCHAR(50);
 
 DECLARE vat_in_out				VARCHAR(2);
 DECLARE vat_tot_amount			DOUBLE;
 DECLARE atf_check_val          VARCHAR(10);
 DECLARE atf_amt              VARCHAR(10);
 DECLARE atf_tax_code         VARCHAR(10);
 DECLARE tot_tkt_crd_amt      DOUBLE;
 
 DECLARE fop_value				VARCHAR(25);
 DECLARE fop_settle_key 		BIGINT;
 DECLARE cust_exempt_status 	VARCHAR(2);
 DECLARE cust_key	 				VARCHAR(60);
 DECLARE walk_cust_key 			VARCHAR(60);
 DECLARE v_locint_f  			VARCHAR(2);
 DECLARE v_locint_t		  		VARCHAR(2);
 DECLARE inter_domestic  		VARCHAR(2);
 DECLARE inter_domestic_key	BIGINT;
 DECLARE service_type_key		BIGINT;
 DECLARE procss_typ	  			VARCHAR(24);
 DECLARE procss_typ_key			BIGINT;
 DECLARE prcss_code	  			VARCHAR(2);
 DECLARE passenger_age_key		BIGINT;
 DECLARE passenger_age_type	VARCHAR(4);
 DECLARE passenger_age_code	VARCHAR(4);
 
 DECLARE service_id				BIGINT;
 DECLARE service_key				BIGINT;
 DECLARE service_code			VARCHAR(240);
 DECLARE service_name 			VARCHAR(240);
 DECLARE discount_amount		DECIMAL(18,4);
 DECLARE charge_mode				VARCHAR(240);
 DECLARE charge_on				VARCHAR(240);
 DECLARE charge_amount			DECIMAL(18,4);
 DECLARE charge_adult_amount	DECIMAL(18,4);
 DECLARE charge_child_amount	DECIMAL(18,4);
 DECLARE charge_infant_amount	DECIMAL(18,4);
 DECLARE serv_amount				DECIMAL(18,4);
 DECLARE file_serv_amnt			VARCHAR(240);
 DECLARE file_serv_amount		DECIMAL(18,4);
 DECLARE total_serv_amount		DECIMAL(18,4);
 DECLARE srv_fee_code			VARCHAR(240);
 DECLARE srv_file_code			VARCHAR(240);
 DECLARE lcc_chk  VARCHAR(10);
 
 DECLARE cust_serv 				VARCHAR(5);
 DECLARE bk_pcc		   		VARCHAR(10);    
 DECLARE iss_pcc	  				VARCHAR(10);    
 DECLARE pcc_loc 					VARCHAR(10);    
 DECLARE t_iss_bk 				VARCHAR(5);
 DECLARE loc_iata_pcc 			VARCHAR(5);
  DECLARE ticket_clerk_code     VARCHAR(10);
 DECLARE book_clerk_code  VARCHAR(10);
 
 DECLARE book_clerk_check VARCHAR(19);
 DECLARE ticket_clerk_check VARCHAR(19);
 
 DECLARE p_udid_code				VARCHAR(240);
 DECLARE p_udid_value			VARCHAR(240);
 DECLARE ud_def_key				BIGINT;
 DECLARE ud_mode_key				BIGINT;
 DECLARE ud_order					BIGINT;
 DECLARE am_udid_value			VARCHAR(240);
 DECLARE am_udid_abbreviation	VARCHAR(240);
 DECLARE dynamic_udid_key		BIGINT;
 DECLARE user_created_key		BIGINT;
 DECLARE user_profile_key		BIGINT;
 DECLARE user_comp_profile_key BIGINT;
 DECLARE tkt_comm					DOUBLE;
 DECLARE tkt_comm_amt			DECIMAL(18,4);
 DECLARE fop_cust_link_code   BIGINT;
 
 DECLARE  company_code 			VARCHAR(10);
 DECLARE  base_curr_code 		VARCHAR(10);
 DECLARE  base_curr_key 		BIGINT(10);
 DECLARE  base_decimal  		BIGINT(10);
 
 DECLARE  air_void				VARCHAR(10);
 DECLARE  excep_tkt_num         VARCHAR(20);
 DECLARE	 air_rfnd				VARCHAR(10);
DECLARE    def_sec            VARCHAR(20);
 DECLARE f_vat						BIGINT;
 DECLARE x_vat						BIGINT;
 DECLARE c_vat						BIGINT;
 DECLARE d_vat						BIGINT;
 DECLARE o_vat						BIGINT;
 DECLARE t_vat						BIGINT;
 
 	 
	    DECLARE auto_inv_file_check CURSOR FOR
    SELECT DISTINCT 'Y' FROM id_air_r WHERE airr_key = p_key AND SUBSTR(airr_0,1,2) = 'RM'
	AND SUBSTR(airr_0,4,12) = 'AUTO INVOICE';
 
   
 DECLARE CURSOR_A CURSOR FOR   
       SELECT LTRIM(RTRIM(SUBSTR(airt_0, 8, 10))) tkt_no,      
        CASE IFNULL(SUBSTR(airt_0,18,1),'*')  WHEN '-' THEN  LTRIM(RTRIM(SUBSTR(airt_0, 19, 2)))  ELSE NULL END conj_no,
         ROW_NUMBER() OVER(ORDER BY ( LTRIM(RTRIM(SUBSTR(airt_0, 8, 10))))) serial_no
    FROM id_air_t
   WHERE airt_key = p_key
   AND LTRIM(RTRIM(SUBSTR(airt_0, 1, 2))) = 'T-'
   AND LENGTH(LTRIM(RTRIM(SUBSTR(airt_0, 8, 10)))) = 10
  UNION ALL
  SELECT LTRIM(RTRIM(SUBSTR(airt_0, 9, 10))) tkt_no,
         CASE IFNULL(SUBSTR(airt_0,18,1),'*')  WHEN '-' THEN  LTRIM(RTRIM(SUBSTR(airt_0, 19, 2)))  ELSE NULL END conj_no,
          ROW_NUMBER() OVER(ORDER BY (LTRIM(RTRIM(SUBSTR(airt_0, 9, 10))))) serial_no
     FROM id_air_t
    WHERE airt_key = p_key
      AND LTRIM(RTRIM(SUBSTR(airt_0, 1, 4))) IN  ('TMCM','TMCR','TMCS','TMCC','TMCP','TMCX','TMCB','TMCD','TMCO','TMCL')
		AND LENGTH(LTRIM(RTRIM(SUBSTR(airt_0, 9, 10)))) = 10;
		
DECLARE EXCEP_TKT_NUM_CURSOR CURSOR FOR   
       SELECT LTRIM(RTRIM(SUBSTR(airt_0, 8, 10))) tkt_no
    FROM id_air_t
   WHERE airt_key = p_key
   AND LTRIM(RTRIM(SUBSTR(airt_0, 1, 2))) = 'T-'
   AND LENGTH(LTRIM(RTRIM(SUBSTR(airt_0, 8, 10)))) = 10
  UNION ALL
  SELECT LTRIM(RTRIM(SUBSTR(airt_0, 9, 10))) tkt_no
     FROM id_air_t
    WHERE airt_key = p_key
      AND LTRIM(RTRIM(SUBSTR(airt_0, 1, 4))) IN  ('TMCM','TMCR','TMCS','TMCC','TMCP','TMCX','TMCB','TMCD','TMCO','TMCL')
		AND LENGTH(LTRIM(RTRIM(SUBSTR(airt_0, 9, 10)))) = 10;
 		
      
DECLARE ama_a_airline_cursor CURSOR FOR 
   SELECT LTRIM(RTRIM(SUBSTR(aira_1, 4, 3))) air_code
  FROM id_air_a
  WHERE aira_key = p_key
       AND LTRIM(RTRIM(SUBSTR(aira_1, 4, 3))) IS NOT NULL
       AND SUBSTR(aira_0,1,2)='A-'
  UNION
  SELECT LTRIM(RTRIM(SUBSTR(airk_2, 1, 3))) air_code
  FROM id_air_k
  WHERE airk_key = p_key
  AND LTRIM(RTRIM(SUBSTR(airk_0, 1, 3))) = 'EMD';
  
 DECLARE air_void_cursor CURSOR FOR 
  SELECT SUBSTR(air_2,1,4) FROM  id_air_amadeus WHERE air_key = p_key;
 
 DECLARE refund_exist_cursor CURSOR FOR 
  SELECT aira_1 FROM id_air_a WHERE aira_key= p_key;
  
 DECLARE ama_d_date_cursor CURSOR FOR
  SELECT STR_TO_DATE(LTRIM(RTRIM(aird_2)), '%y%m%d' ) sale_date
  FROM id_air_d
  WHERE aird_key = p_key;
  
 DECLARE find_iata_cursor CURSOR FOR
  SELECT CASE WHEN LTRIM(RTRIM(airm_9)) = '' THEN LTRIM(RTRIM(airm_7)) ELSE LTRIM(RTRIM(airm_9)) END IATA_CODE,
  SUBSTR(airm_0,(INSTR(airm_0, ' ')+1), 6) pnr,
  IFNULL(LTRIM(RTRIM(SUBSTR(AIRM_2,1,10))),'X') booking_pcc,
  IFNULL(LTRIM(RTRIM(SUBSTR(AIRM_8,1,10))),'X') issue_pcc
    FROM id_air_m
   WHERE airm_key = p_key
     AND SUBSTR(airm_0,1,5) = 'MUC1A';
	 
	  DECLARE AIRLINE_PNR_CURSOR CURSOR FOR
    SELECT 
  CONCAT(SUBSTR(airm_0,(INSTR(airm_0, ' ')+1), 6),'/',IFNULL(SUBSTR(airm_31,4),'NULL')) aln_pnr
  FROM id_air_m
   WHERE airm_key = p_key
     AND SUBSTR(airm_0,1,5) = 'MUC1A';
     
  
DECLARE air_h_tvl_date_cursor CURSOR FOR
  SELECT STR_TO_DATE(CONCAT(LTRIM(RTRIM(SUBSTR(airh_5,16,5))),(DATE_FORMAT(SYSDATE(),'%y'))),'%d%b%y' ) tvl_date,
  LTRIM(RTRIM(SUBSTR(airh_5,12,2))) booking_class
  FROM id_air_h
  WHERE airh_key = p_key AND airh_5 NOT IN ('VOID')
    AND airh_serial = 1;
    
 DECLARE air_u_tvl_date_cursor CURSOR FOR
  SELECT STR_TO_DATE(CONCAT(LTRIM(RTRIM(SUBSTR(airu_5,16,5))),(DATE_FORMAT(SYSDATE(),'%y'))),'%d%b%y' ) tvl_date,
  LTRIM(RTRIM(SUBSTR(airu_5,12,2))) booking_class
  FROM id_air_u
  WHERE airu_key = p_key AND airu_5 NOT IN ('VOID')
    AND airu_serial = 1;
    
  DECLARE ticket_sectors_route CURSOR FOR  
    SELECT  airh_serial sec_serial, LTRIM(RTRIM(SUBSTR(airh_1,5,3))) sec_src_sector,
          LTRIM(RTRIM(airh_3)) sec_dest_sector
     FROM id_air_h
     WHERE airh_key = p_key AND airh_5 NOT IN ('VOID')
  ORDER BY airh_serial; 
  
  
  DECLARE ticket_sectors_emd_route CURSOR FOR
  SELECT airu_serial sec_serial, LTRIM(RTRIM(SUBSTR(airu_1,5,3))) sec_src_sector,
        LTRIM(RTRIM(airu_3)) sec_dest_sector
  FROM id_air_u
  WHERE airu_key = p_key AND CHAR_LENGTH(LTRIM(RTRIM(SUBSTR(airu_1,5,3))))>2 AND airu_5 NOT IN ('VOID')
  ORDER BY airu_serial;

DECLARE fare_basis_cursor CURSOR FOR 
SELECT rtrim(ltrim(SUBSTR(airm_0,3,8))) fare_basis
FROM id_air_m 
WHERE airm_key = p_key
and substr(airm_0,2,1) = '-';
  
  DECLARE emd_sector_exist CURSOR FOR
  SELECT 'Y' FROM  id_air_u
  WHERE airu_key = p_key AND CHAR_LENGTH(LTRIM(RTRIM(SUBSTR(airu_1,5,3))))>2 AND airu_5 NOT IN ('VOID')
  ORDER BY airu_serial; 
  
DECLARE LCC_CHECK_CURSOR CURSOR FOR
SELECT DISTINCT 'Y' FROM id_air_h WHERE substr(airh_7,1,2)= 'GK' AND airh_key = p_key;
  
   DECLARE final_sector_key_cursor CURSOR FOR     
  SELECT airm_key FROM t_id_airport_master WHERE LTRIM(RTRIM(CODE)) =  LTRIM(RTRIM(final_dest)); 
  
   DECLARE src_sector_key_cursor CURSOR FOR
  SELECT airm_key FROM t_id_airport_master WHERE LTRIM(RTRIM(CODE)) =  LTRIM(RTRIM(src_dest)); 
    
 DECLARE booking_clerk_cursor CURSOR FOR
   SELECT LTRIM(RTRIM(SUBSTR(airr_0,7,6))) book_clerk
  FROM id_air_r
  WHERE airr_key = p_key
    AND SUBSTR(airr_0,1,6) = 'RM*BA/';
 
  DECLARE ticketing_clerk_cursor CURSOR FOR
 SELECT LTRIM(RTRIM(SUBSTR(airr_0,7,6))) ticket_clerk
  FROM id_air_r
  WHERE airr_key = p_key
    AND SUBSTR(airr_0,1,6) = 'RM*TA/';
	
	  DECLARE pr_remarks_cursor CURSOR FOR
 SELECT LTRIM(RTRIM(SUBSTR(airr_0,7))) pr_remarks
  FROM id_air_r
  WHERE airr_key = p_key
    AND SUBSTR(airr_0,1,6) = 'RM*PR/';
	
 DECLARE pcc_clerk_key_cursor CURSOR FOR
  SELECT B.exec_user_key,B.exec_allocated_branch FROM t_id_reference_codes_detail_view A,v_id_executive_master B  WHERE A.domain_name='PCC_USER_CODE' AND LTRIM(RTRIM(A.CODE)) = pcc_loc
  AND LTRIM(RTRIM(A.VALUE)) = LTRIM(RTRIM(B.exec_user_code)) ;
 
 DECLARE book_clerk_key_cursor CURSOR FOR
  SELECT exec_user_key FROM t_id_executive_master WHERE exec_remarks = LTRIM(RTRIM(book_clerk));
 
 DECLARE ticket_clerk_key_cursor CURSOR FOR 
  SELECT exec_user_key,exec_allocated_branch FROM t_id_executive_master WHERE exec_remarks = LTRIM(RTRIM(ticket_clerk));
    
DECLARE ama_t_airline_cursor CURSOR FOR
 SELECT (CASE  WHEN SUBSTR(airt_0,1,4)='TMCD' THEN SUBSTR(AIRT_0,5,3)
  ELSE SUBSTR(AIRT_0,4,3) END) AS tkt_airline
 FROM id_air_t
     WHERE airt_key =p_key
     AND CHAR_LENGTH (LTRIM (RTRIM (SUBSTR(airt_0, 8, 10)))) = 10 ORDER BY airt_serial; 

	 DECLARE SRV_FEE_CHECK_CURSOR CURSOR FOR
SELECT 'Y' FROM id_air_r WHERE substr(airr_0,1,11)='RM*TXN FEE*'

AND airr_key = p_key;	
     
DECLARE  class_cursor CURSOR FOR
 SELECT clsm_key
 FROM   t_id_tvl_class_master
 WHERE  LTRIM(RTRIM(CODE)) = IFNULL(LTRIM(RTRIM(tkt_class)),LTRIM(RTRIM(tkt_class_emd)));
 
  DECLARE ticket_status_details CURSOR FOR  
  SELECT atd_ticket_status FROM t_id_tvl_air_ticket_details 
   WHERE atd_ticket_number = P_TKT_NUMBER AND atd_ticket_status = 'V'
    AND atd_airline_key = air_rls_key;
 
DECLARE  exch_doc_cursor CURSOR FOR
 SELECT LTRIM(RTRIM(SUBSTR(airf_0, 7,10))) exch_doc_number
    FROM id_air_f
   WHERE airf_key = p_key
     AND SUBSTR(airf_0,1,2) = 'FO'
     AND LENGTH(LTRIM(RTRIM(SUBSTR(airf_0, 7,10)))) = 10;
	 
DECLARE ama_k_pub_fare_cursor CURSOR FOR
  SELECT DISTINCT 
  CASE LTRIM(RTRIM(airk_1))
   WHEN  NULL THEN CAST(LTRIM(RTRIM(SUBSTR(airk_0, 7) )) AS DECIMAL(20,4))
   WHEN  '' THEN CAST(LTRIM(RTRIM(SUBSTR(airk_0, 7) )) AS DECIMAL(20,4))
   ELSE CAST(LTRIM(RTRIM(SUBSTR(airk_1,4) )) AS DECIMAL(20,4)) END AS pub_fare  
 FROM id_air_k
  WHERE airk_key = p_key
  AND (SUBSTR(airk_0,1,3) = 'K-F')
  UNION ALL
  SELECT DISTINCT 
   CASE LTRIM(RTRIM(airk_1))
    WHEN NULL THEN CAST(LTRIM(RTRIM(SUBSTR(airk_0, 8) )) AS DECIMAL(20,4))
    WHEN '' THEN CAST(LTRIM(RTRIM(SUBSTR(airk_0, 8) )) AS DECIMAL(20,4))
    ELSE CAST(LTRIM(RTRIM(SUBSTR(airk_1,4) )) AS DECIMAL(20,4)) END AS pub_fare
     FROM id_air_k
  WHERE airk_key = p_key
  AND (SUBSTR(airk_0,1,3) = 'KS-')
  UNION ALL
  SELECT DISTINCT 
   CASE LTRIM(RTRIM(airk_1))
    WHEN NULL THEN CAST(LTRIM(RTRIM(SUBSTR(airk_0, 7) )) AS DECIMAL(20,4))
    WHEN '' THEN CAST(LTRIM(RTRIM(SUBSTR(airk_0, 7) )) AS DECIMAL(20,4))
     ELSE CAST(LTRIM(RTRIM(SUBSTR(airk_1,4) )) AS DECIMAL(20,4)) END AS pub_fare
   FROM id_air_k
   WHERE airk_key = p_key
   AND (SUBSTR(airk_0,1,3) = 'K-I')
   UNION ALL
   SELECT DISTINCT CAST(IFNULL(LTRIM(RTRIM(SUBSTR(airk_12,4))),0)AS DECIMAL(20,4)) pub_fare
     FROM id_air_k
   WHERE airk_key = p_key
   AND (SUBSTR(airk_0,1,3) = 'K-Y')
   UNION ALL
   SELECT DISTINCT CAST(IFNULL(LTRIM(RTRIM(SUBSTR(airk_12,4))),0)AS DECIMAL(20,4)) pub_fare
     FROM id_air_k
   WHERE airk_key = p_key
   AND (SUBSTR(airk_0,1,3) = 'K-R')
   ORDER BY pub_fare ASC;

     
DECLARE ama_k_fare_cursor CURSOR FOR    
   SELECT DISTINCT 
  CAST(IFNULL(ROUND(LTRIM(RTRIM(airk_13)),4),1) AS DECIMAL(20,4)) ex_rate,
  CASE LTRIM(RTRIM(airk_1))
   WHEN NULL THEN LTRIM(RTRIM(SUBSTR(airk_0,4,3)))
   WHEN '' THEN LTRIM(RTRIM(SUBSTR(airk_0,4,3)))
   ELSE LTRIM(RTRIM(SUBSTR(airk_1,1,3))) END AS currency,'K-F'
 FROM id_air_k
  WHERE airk_key = p_key
  AND (SUBSTR(airk_0,1,3) = 'K-F')
  UNION ALL
  SELECT DISTINCT 
   CAST(IFNULL(ROUND(LTRIM(RTRIM(airk_13)),4),1)AS DECIMAL(20,4)) ex_rate,
   CASE LTRIM(RTRIM(airk_1))
    WHEN NULL THEN LTRIM(RTRIM(SUBSTR(airk_0,5,3)))
    WHEN '' THEN LTRIM(RTRIM(SUBSTR(airk_0,5,3)))
    ELSE LTRIM(RTRIM(SUBSTR(airk_1,1,3))) END AS currency,'KS-'
     FROM id_air_k
  WHERE airk_key = p_key
  AND (SUBSTR(airk_0,1,3) = 'KS-')
  UNION ALL
  SELECT DISTINCT 
   CAST(IFNULL(ROUND(LTRIM(RTRIM(airk_13)),4),1)AS DECIMAL(20,4)) ex_rate,
   CASE LTRIM(RTRIM(airk_1)) 
    WHEN NULL THEN LTRIM(RTRIM(SUBSTR(airk_0,4,3)))
    WHEN '' THEN LTRIM(RTRIM(SUBSTR(airk_0,4,3)))
    ELSE LTRIM(RTRIM(SUBSTR(airk_1,1,3))) END AS currency,'K-I'
   FROM id_air_k
   WHERE airk_key = p_key
   AND (SUBSTR(airk_0,1,3) = 'K-I')
   UNION ALL
   SELECT DISTINCT 
     CAST(IFNULL(ROUND(LTRIM(RTRIM(airk_13)),4),1)AS DECIMAL(20,4)) ex_rate,
     LTRIM(RTRIM(SUBSTR(airk_12,1,3))) currency,'K-R'
     FROM id_air_k
   WHERE airk_key = p_key
   AND (SUBSTR(airk_0,1,3) = 'K-Y')
   UNION ALL
   SELECT DISTINCT 
     CAST(IFNULL(ROUND(LTRIM(RTRIM(airk_13)),4),1)AS DECIMAL(20,4)) ex_rate,
     LTRIM(RTRIM(SUBSTR(airk_12,1,3))) currency,'K-R'
     FROM id_air_k
   WHERE airk_key = p_key
   AND (SUBSTR(airk_0,1,3) = 'K-R');
   
  
  DECLARE ama_k1_fare_cursor CURSOR FOR  
  SELECT DISTINCT 
  CASE LTRIM(RTRIM(airk_1))
    WHEN NULL THEN CAST(LTRIM(RTRIM(SUBSTR(airk_0, 8) )) AS DECIMAL(20,4))
    WHEN '' THEN CAST(LTRIM(RTRIM(SUBSTR(airk_0, 8) )) AS DECIMAL(20,4))
    ELSE CAST(LTRIM(RTRIM(SUBSTR(airk_1,4) )) AS DECIMAL(20,4)) END AS pub_fare,
    CAST(IFNULL(ROUND(LTRIM(RTRIM(airk_13)),4),1)AS DECIMAL(20,4)) ex_rate,
    CASE LTRIM(RTRIM(airk_1))
    WHEN NULL THEN LTRIM(RTRIM(SUBSTR(airk_0,5,3)))
    WHEN '' THEN LTRIM(RTRIM(SUBSTR(airk_0,5,3)))
    ELSE LTRIM(RTRIM(SUBSTR(airk_1,1,3))) END AS currency,'KN-'
  FROM id_air_k
  WHERE airk_key = p_key
  AND (SUBSTR(airk_0,1,3) = 'KN-')
  ORDER BY pub_fare ASC;
   
  DECLARE reissue_fare_cursor CURSOR FOR  
  SELECT DISTINCT CAST(IFNULL(LTRIM(RTRIM(SUBSTR(airk_12,4))),0)AS DECIMAL(20,4)) pub_fare,
    CAST(IFNULL(ROUND(LTRIM(RTRIM(airk_13)),4),1)AS DECIMAL(20,4)) ex_rate,
   LTRIM(RTRIM(SUBSTR(airk_12,1,3))) currency,'K-R'
  FROM id_air_k
  WHERE airk_key = p_key
  AND ((SUBSTR(airk_0,1,4) = 'KS-R') OR (SUBSTR(airk_0,1,3) = 'K-R') OR (SUBSTR(airk_0,1,4) = 'KS-Y') OR (SUBSTR(airk_0,1,4) = 'KS-I'))
  ORDER BY pub_fare ASC;
  
DECLARE base_currency_cursor CURSOR FOR
  SELECT t_id_company_master.comp_code,t_id_company_master.comp_base_currency ,
 v_id_tvl_branch_master.currency_code, t_id_company_master.comp_decimal_size  
 FROM   t_id_company_master,v_id_tvl_branch_master
 WHERE v_id_tvl_branch_master.bm_key = t_location_key AND 
 v_id_tvl_branch_master.bm_group_comp_key = t_id_company_master.comp_id AND 
 v_id_tvl_branch_master.bm_group_comp_code = t_id_company_master.comp_code;
 
    
DECLARE exchange_rate_cursor CURSOR FOR
     SELECT IFNULL(conversion_Rate,1)
     FROM v_id_exchange_rate_master
    WHERE from_currency_code    = tkt_currency    
     AND (tkt_date BETWEEN active_from AND active_to)
      AND active_status = 'A'
 ORDER BY exc_key DESC limit 1;
 
DECLARE air_udid_values CURSOR FOR
SELECT SUBSTR(airr_0, INSTR(airr_0, p_udid_code) + LENGTH(p_udid_code)+1) 
       FROM id_air_r 
        WHERE airr_key = p_key
          AND airr_0 LIKE CONCAT('%',p_udid_code,'/','%')
		  AND airr_1 is null; 
          
DECLARE air_udid_values_4 CURSOR FOR
SELECT SUBSTR(airr_0, INSTR(airr_0, p_udid_code) + LENGTH(p_udid_code)) 
       FROM id_air_r 
        WHERE airr_key = p_key
          AND airr_0 LIKE CONCAT('%',p_udid_code,'%')
	AND  airr_1 is not null
	
ORDER BY SUBSTR(airr_1,2,1);
		  
DECLARE air_udid_values_1 CURSOR FOR
SELECT SUBSTR(airr_0, INSTR(airr_0, p_udid_code) + LENGTH(p_udid_code)) 
       FROM id_air_r 
        WHERE airr_key = p_key
          AND airr_0 LIKE CONCAT('%',p_udid_code,'%')
		AND  airr_1 is null; 	

	DECLARE DEFAULT_SEC_CURSOR CURSOR FOR
SELECT value FROM t_id_reference_codes_detail_view WHERE domain_name = 'GDS_File_Load'
AND CODE = 'DEFAULT_SECTOR';	
		  
DECLARE air_udid_values_2 CURSOR FOR
SELECT SUBSTR(airr_0, INSTR(airr_0, p_udid_code) + LENGTH(p_udid_code)) 
  FROM id_air_r 
  WHERE airr_key = p_key
  AND airr_0 LIKE CONCAT('%',p_udid_code,'%')
	AND  airr_1 is not null
	AND substr(airr_0,1,11) in (substr(arm_dtls,1,11))
ORDER BY SUBSTR(airr_1,2,1);
		  
DECLARE air_udid_values_21 CURSOR FOR
SELECT SUBSTR(airr_0, INSTR(airr_0, p_udid_code) + LENGTH(p_udid_code)) 
       FROM id_air_r 
        WHERE airr_key = p_key
          AND airr_0 LIKE CONCAT('%',p_udid_code,'%')
		  AND substr(airr_0,1,11)='RM*TXN FEE*';
		  
DECLARE AIR_TKT_NO_CHK CURSOR FOR
SELECT distinct 'Y' FROM t_id_tvl_air_ticket_details WHERE atd_ticket_number = P_TKT_NUMBER; 
		       
DECLARE tvl_udid_def_key CURSOR FOR
 SELECT pdis_defintion_key,pdis_mode_key,pdis_order
  FROM t_id_tvl_partner_info_setup 
   WHERE pdis_cms_key=cust_key AND pdis_defintion_key = dynamic_udid_key;
     
 DECLARE tvl_udid_amadeus CURSOR FOR 
  SELECT rcd_value,rcd_abbreviation FROM t_id_reference_codes_detail,t_id_reference_codes_header 
      WHERE rcd_header_key = rch_header_key AND rch_domain_name='Amadeus_GDS';  
      
 DECLARE ticket_user_key_cursor CURSOR FOR 
   SELECT user_key,user_default_profile_key FROM t_id_user_master WHERE user_key = 
	(SELECT exec_user_key FROM t_id_executive_master WHERE exec_remarks = LTRIM(RTRIM(ticket_clerk)));      
      
 DECLARE user_created_cursor CURSOR FOR
  SELECT user_key,user_default_profile_key FROM t_id_user_master WHERE LTRIM(TRIM(user_code)) IN (  
    SELECT rcd_abbreviation FROM t_id_reference_codes_detail,t_id_reference_codes_header 
      WHERE rcd_header_key = rch_header_key AND rch_domain_name='GDS_File_Load' AND rcd_value='AMADEUS');  
      
 DECLARE user_comp_profile_cursor  CURSOR FOR   
    SELECT user_default_profile_key FROM t_id_user_master WHERE LTRIM(TRIM(user_code)) IN (  
    SELECT rcd_abbreviation FROM t_id_reference_codes_detail,t_id_reference_codes_header 
      WHERE rcd_header_key = rch_header_key AND rch_domain_name='GDS_File_Load' AND rcd_value='AMADEUS');      
      
 DECLARE tvl_dynamic_def_key CURSOR FOR
  SELECT add_key FROM T_ID_DYNAMIC_DEFINITION WHERE add_code = am_udid_value;
  
  DECLARE air_sec_serial_key CURSOR FOR
SELECT DISTINCT(CONCAT('S',REPLACE(SUBSTR(airh_0,3),0,''))) FROM 
id_air_h WHERE airh_key = p_key
ORDER BY 1 DESC LIMIT 1;
   
 DECLARE tvl_ama_udid_def_key CURSOR FOR
  SELECT pdis_defintion_key,pdis_mode_key,pdis_order
   FROM t_id_tvl_partner_info_setup 
    WHERE pdis_cms_key=cust_key AND pdis_defintion_key = dynamic_udid_key;
	
DECLARE ATF_TAX_CODE_CURSOR CURSOR FOR
SELECT SUBSTR(aira_0,1,3) FROM id_air_a WHERE aira_key = p_key AND SUBSTR(aira_0,1,3)='ATF';
		
DECLARE ATF_TAX_CHK_CURSOR CURSOR FOR
SELECT DISTINCT 'Y' FROM id_air_a WHERE aira_key = p_key AND SUBSTR(aira_0,1,3)='ATF';
	
DECLARE ATF_TAX_CURSOR CURSOR FOR
SELECT LTRIM(RTRIM(SUBSTR(aira_0,8))) FROM id_air_a WHERE aira_key = p_key AND SUBSTR(aira_0,1,3)='ATF';
    
 DECLARE K7_FILE_CURSOR CURSOR FOR
 
    
  SELECT       
  CASE SUBSTR(airk_1,1,1) WHEN 'O' THEN NULL ELSE CASE SUBSTR(airk_1,14,2) WHEN 'K7' THEN  SUBSTR(airk_1,14,2)  ELSE NULL END END v_tax_k7_code,
  CASE SUBSTR(airk_1,1,1) WHEN 'O' THEN 0 ELSE CASE SUBSTR(airk_1,14,2) WHEN 'K7' THEN IFNULL(CAST(SUBSTR(airk_1,5, INSTR(SUBSTR(airk_1,5),' '))AS DECIMAL(16,2)), 0) ELSE 0  END END v_tax_k7_amt
FROM id_air_k
  WHERE AIRK_KEY = p_key AND SUBSTR(airk_1,14,2) = 'K7'
    AND (SUBSTR(AIRK_0,1,3) = 'KFT' OR SUBSTR(AIRK_0,1,3) = 'KNT' OR SUBSTR(AIRK_0,1,3) = 'KST')
UNION ALL
 SELECT       
  CASE SUBSTR(airk_2,1,1) WHEN 'O' THEN NULL ELSE CASE SUBSTR(airk_2,14,2) WHEN 'K7' THEN  SUBSTR(airk_2,14,2)  ELSE NULL END END v_tax_k7_code,
  CASE SUBSTR(airk_2,1,1) WHEN 'O' THEN 0 ELSE CASE SUBSTR(airk_2,14,2) WHEN 'K7' THEN IFNULL(CAST(SUBSTR(airk_2,5, INSTR(SUBSTR(airk_2,5),' '))AS DECIMAL(16,2)), 0) ELSE 0  END END v_tax_k7_amt
FROM id_air_k
  WHERE AIRK_KEY = p_key AND SUBSTR(airk_2,14,2) = 'K7'
    AND (SUBSTR(AIRK_0,1,3) = 'KFT' OR SUBSTR(AIRK_0,1,3) = 'KNT' OR SUBSTR(AIRK_0,1,3) = 'KST')
UNION ALL
 SELECT       
  CASE SUBSTR(airk_3,1,1) WHEN 'O' THEN NULL ELSE CASE SUBSTR(airk_3,14,2) WHEN 'K7' THEN  SUBSTR(airk_3,14,2)  ELSE NULL END END v_tax_k7_code,
  CASE SUBSTR(airk_3,1,1) WHEN 'O' THEN 0 ELSE CASE SUBSTR(airk_3,14,2) WHEN 'K7' THEN IFNULL(CAST(SUBSTR(airk_3,5, INSTR(SUBSTR(airk_3,5),' '))AS DECIMAL(16,2)), 0) ELSE 0  END END v_tax_k7_amt
FROM id_air_k
  WHERE AIRK_KEY = p_key AND SUBSTR(airk_3,14,2) = 'K7'
    AND (SUBSTR(AIRK_0,1,3) = 'KFT' OR SUBSTR(AIRK_0,1,3) = 'KNT' OR SUBSTR(AIRK_0,1,3) = 'KST')
UNION ALL
 SELECT       
  CASE SUBSTR(airk_4,1,1) WHEN 'O' THEN NULL ELSE CASE SUBSTR(airk_4,14,2) WHEN 'K7' THEN  SUBSTR(airk_4,14,2)  ELSE NULL END END v_tax_k7_code,
  CASE SUBSTR(airk_4,1,1) WHEN 'O' THEN 0 ELSE CASE SUBSTR(airk_4,14,2) WHEN 'K7' THEN IFNULL(CAST(SUBSTR(airk_4,5, INSTR(SUBSTR(airk_4,5),' '))AS DECIMAL(16,2)), 0) ELSE 0  END END v_tax_k7_amt
FROM id_air_k
  WHERE AIRK_KEY = p_key AND SUBSTR(airk_4,14,2) = 'K7'
    AND (SUBSTR(AIRK_0,1,3) = 'KFT' OR SUBSTR(AIRK_0,1,3) = 'KNT' OR SUBSTR(AIRK_0,1,3) = 'KST')    
UNION ALL
SELECT  DISTINCT     
  CASE SUBSTR(airk_5,1,1) WHEN 'O' THEN NULL ELSE CASE SUBSTR(airk_5,14,2) WHEN 'K7' THEN  SUBSTR(airk_5,14,2)  ELSE NULL END END v_tax_k7_code,
  CASE SUBSTR(airk_5,1,1) WHEN 'O' THEN 0 ELSE CASE SUBSTR(airk_5,14,2) WHEN 'K7' THEN IFNULL(CAST(SUBSTR(airk_5,5, INSTR(SUBSTR(airk_5,5),' '))AS DECIMAL(16,2)), 0) ELSE 0  END END v_tax_k7_amt
FROM id_air_k
  WHERE AIRK_KEY = p_key AND SUBSTR(airk_5,14,2) = 'K7'
    AND (SUBSTR(AIRK_0,1,3) = 'KFT' OR SUBSTR(AIRK_0,1,3) = 'KNT' OR SUBSTR(AIRK_0,1,3) = 'KST')
UNION ALL
 SELECT       
  CASE SUBSTR(airk_6,1,1) WHEN 'O' THEN NULL ELSE CASE SUBSTR(airk_6,14,2) WHEN 'K7' THEN  SUBSTR(airk_6,14,2)  ELSE NULL END END v_tax_k7_code,
  CASE SUBSTR(airk_6,1,1) WHEN 'O' THEN 0 ELSE CASE SUBSTR(airk_6,14,2) WHEN 'K7' THEN IFNULL(CAST(SUBSTR(airk_6,5, INSTR(SUBSTR(airk_6,5),' '))AS DECIMAL(16,2)), 0) ELSE 0  END END v_tax_k7_amt
FROM id_air_k
  WHERE AIRK_KEY = p_key AND SUBSTR(airk_6,14,2) = 'K7'
    AND (SUBSTR(AIRK_0,1,3) = 'KFT' OR SUBSTR(AIRK_0,1,3) = 'KNT' OR SUBSTR(AIRK_0,1,3) = 'KST')
UNION ALL
 SELECT       
  CASE SUBSTR(airk_7,1,1) WHEN 'O' THEN NULL ELSE CASE SUBSTR(airk_7,14,2) WHEN 'K7' THEN  SUBSTR(airk_7,14,2)  ELSE NULL END END v_tax_k7_code,
  CASE SUBSTR(airk_7,1,1) WHEN 'O' THEN 0 ELSE CASE SUBSTR(airk_7,14,2) WHEN 'K7' THEN IFNULL(CAST(SUBSTR(airk_7,5, INSTR(SUBSTR(airk_7,5),' '))AS DECIMAL(16,2)), 0) ELSE 0  END END v_tax_k7_amt
FROM id_air_k
  WHERE AIRK_KEY = p_key AND SUBSTR(airk_7,14,2) = 'K7'
    AND (SUBSTR(AIRK_0,1,3) = 'KFT' OR SUBSTR(AIRK_0,1,3) = 'KNT' OR SUBSTR(AIRK_0,1,3) = 'KST')
UNION ALL
SELECT       
  CASE SUBSTR(airk_8,1,1) WHEN 'O' THEN NULL ELSE CASE SUBSTR(airk_8,14,2) WHEN 'K7' THEN  SUBSTR(airk_8,14,2)  ELSE NULL END END v_tax_k7_code,
  CASE SUBSTR(airk_8,1,1) WHEN 'O' THEN 0 ELSE CASE SUBSTR(airk_8,14,2) WHEN 'K7' THEN IFNULL(CAST(SUBSTR(airk_8,5, INSTR(SUBSTR(airk_8,5),' '))AS DECIMAL(16,2)), 0) ELSE 0  END END v_tax_k7_amt
FROM id_air_k
  WHERE AIRK_KEY = p_key AND SUBSTR(airk_8,14,2) = 'K7'
    AND (SUBSTR(AIRK_0,1,3) = 'KFT' OR SUBSTR(AIRK_0,1,3) = 'KNT' OR SUBSTR(AIRK_0,1,3) = 'KST')
UNION ALL
SELECT       
  CASE SUBSTR(airk_9,1,1) WHEN 'O' THEN NULL ELSE CASE SUBSTR(airk_9,14,2) WHEN 'K7' THEN  SUBSTR(airk_9,14,2)  ELSE NULL END END v_tax_k7_code,
  CASE SUBSTR(airk_9,1,1) WHEN 'O' THEN 0 ELSE CASE SUBSTR(airk_9,14,2) WHEN 'K7' THEN IFNULL(CAST(SUBSTR(airk_9,5, INSTR(SUBSTR(airk_9,5),' '))AS DECIMAL(16,2)), 0) ELSE 0  END END v_tax_k7_amt
FROM id_air_k
  WHERE AIRK_KEY = p_key AND SUBSTR(airk_9,14,2) = 'K7'
    AND (SUBSTR(AIRK_0,1,3) = 'KFT' OR SUBSTR(AIRK_0,1,3) = 'KNT' OR SUBSTR(AIRK_0,1,3) = 'KST')
UNION ALL
SELECT       
  CASE SUBSTR(airk_10,1,1) WHEN 'O' THEN NULL ELSE CASE SUBSTR(airk_10,14,2) WHEN 'K7' THEN  SUBSTR(airk_10,14,2)  ELSE NULL END END v_tax_k7_code,
  CASE SUBSTR(airk_10,1,1) WHEN 'O' THEN 0 ELSE CASE SUBSTR(airk_10,14,2) WHEN 'K7' THEN IFNULL(CAST(SUBSTR(airk_10,5, INSTR(SUBSTR(airk_10,5),' '))AS DECIMAL(16,2)), 0) ELSE 0  END END v_tax_k7_amt
FROM id_air_k
  WHERE AIRK_KEY = p_key AND SUBSTR(airk_10,14,2) = 'K7'
    AND (SUBSTR(AIRK_0,1,3) = 'KFT' OR SUBSTR(AIRK_0,1,3) = 'KNT' OR SUBSTR(AIRK_0,1,3) = 'KST')
UNION ALL
SELECT       
  CASE SUBSTR(airk_11,1,1) WHEN 'O' THEN NULL ELSE CASE SUBSTR(airk_11,14,2) WHEN 'K7' THEN  SUBSTR(airk_11,14,2)  ELSE NULL END END v_tax_k7_code,
  CASE SUBSTR(airk_11,1,1) WHEN 'O' THEN 0 ELSE CASE SUBSTR(airk_11,14,2) WHEN 'K7' THEN IFNULL(CAST(SUBSTR(airk_11,5, INSTR(SUBSTR(airk_11,5),' '))AS DECIMAL(16,2)), 0) ELSE 0  END END v_tax_k7_amt
FROM id_air_k
  WHERE AIRK_KEY = p_key AND SUBSTR(airk_11,14,2) = 'K7'
    AND (SUBSTR(AIRK_0,1,3) = 'KFT' OR SUBSTR(AIRK_0,1,3) = 'KNT' OR SUBSTR(AIRK_0,1,3) = 'KST')
UNION ALL
 SELECT       
  CASE SUBSTR(airk_12,1,1) WHEN 'O' THEN NULL ELSE CASE SUBSTR(airk_12,14,2) WHEN 'K7' THEN  SUBSTR(airk_12,14,2)  ELSE NULL END END v_tax_k7_code,
  CASE SUBSTR(airk_12,1,1) WHEN 'O' THEN 0 ELSE CASE SUBSTR(airk_12,14,2) WHEN 'K7' THEN IFNULL(CAST(SUBSTR(airk_12,5, INSTR(SUBSTR(airk_12,5),' '))AS DECIMAL(16,2)), 0) ELSE 0  END END v_tax_k7_amt
FROM id_air_k
  WHERE AIRK_KEY = p_key AND SUBSTR(airk_12,14,2) = 'K7'
    AND (SUBSTR(AIRK_0,1,3) = 'KFT' OR SUBSTR(AIRK_0,1,3) = 'KNT' OR SUBSTR(AIRK_0,1,3) = 'KST')
UNION ALL
 SELECT       
  CASE SUBSTR(airk_13,1,1) WHEN 'O' THEN NULL ELSE CASE SUBSTR(airk_13,14,2) WHEN 'K7' THEN  SUBSTR(airk_13,14,2)  ELSE NULL END END v_tax_k7_code,
  CASE SUBSTR(airk_13,1,1) WHEN 'O' THEN 0 ELSE CASE SUBSTR(airk_13,14,2) WHEN 'K7' THEN IFNULL(CAST(SUBSTR(airk_13,5, INSTR(SUBSTR(airk_13,5),' '))AS DECIMAL(16,2)), 0) ELSE 0  END END v_tax_k7_amt
FROM id_air_k
  WHERE AIRK_KEY = p_key AND SUBSTR(airk_13,14,2) = 'K7'
    AND (SUBSTR(AIRK_0,1,3) = 'KFT' OR SUBSTR(AIRK_0,1,3) = 'KNT' OR SUBSTR(AIRK_0,1,3) = 'KST')
UNION ALL
 SELECT       
  CASE SUBSTR(airk_14,1,1) WHEN 'O' THEN NULL ELSE CASE SUBSTR(airk_14,14,2) WHEN 'K7' THEN  SUBSTR(airk_14,14,2)  ELSE NULL END END v_tax_k7_code,
  CASE SUBSTR(airk_14,1,1) WHEN 'O' THEN 0 ELSE CASE SUBSTR(airk_14,14,2) WHEN 'K7' THEN IFNULL(CAST(SUBSTR(airk_14,5, INSTR(SUBSTR(airk_14,5),' '))AS DECIMAL(16,2)), 0) ELSE 0  END END v_tax_k7_amt
FROM id_air_k
  WHERE AIRK_KEY = p_key AND SUBSTR(airk_14,14,2) = 'K7'
    AND (SUBSTR(AIRK_0,1,3) = 'KFT' OR SUBSTR(AIRK_0,1,3) = 'KNT' OR SUBSTR(AIRK_0,1,3) = 'KST')
UNION ALL
 SELECT       
  CASE SUBSTR(airk_15,1,1) WHEN 'O' THEN NULL ELSE CASE SUBSTR(airk_15,14,2) WHEN 'K7' THEN  SUBSTR(airk_15,14,2)  ELSE NULL END END v_tax_k7_code,
  CASE SUBSTR(airk_15,1,1) WHEN 'O' THEN 0 ELSE CASE SUBSTR(airk_15,14,2) WHEN 'K7' THEN IFNULL(CAST(SUBSTR(airk_15,5, INSTR(SUBSTR(airk_15,5),' '))AS DECIMAL(16,2)), 0) ELSE 0  END END v_tax_k7_amt
FROM id_air_k
  WHERE AIRK_KEY = p_key AND SUBSTR(airk_15,14,2) = 'K7'
    AND (SUBSTR(AIRK_0,1,3) = 'KFT' OR SUBSTR(AIRK_0,1,3) = 'KNT' OR SUBSTR(AIRK_0,1,3) = 'KST');   
  
DECLARE K7_FILE_EMD_CURSOR CURSOR FOR
 SELECT  DISTINCT     
  CASE SUBSTR(airk_33,3,1) WHEN 'O' THEN NULL ELSE CASE SUBSTR(airk_33,16,2) WHEN 'K7' THEN  SUBSTR(airk_33,16,2)  ELSE NULL END END v_tax_k7_code,
  CASE SUBSTR(airk_33,3,1) WHEN 'O' THEN 0 ELSE CASE SUBSTR(airk_33,16,2) WHEN 'K7' THEN IFNULL(CAST(SUBSTR(airk_33,5, INSTR(SUBSTR(airk_33,7, 9),' '))AS DECIMAL(16,2)), 0) ELSE 0  END END v_tax_k7_amt
FROM id_air_k
  WHERE AIRK_KEY = p_key AND SUBSTR(airk_33,16,2) = 'K7'  AND (SUBSTR(airk_0,1,3) = 'EMD');   
  
  
 DECLARE ticket_clerk_key_check_cursor CURSOR FOR 
  SELECT 'Y' FROM t_id_executive_master WHERE exec_remarks = LTRIM(RTRIM(ticket_clerk));
  
  
 DECLARE book_clerk_key_check_cursor CURSOR FOR 
  SELECT 'Y' FROM t_id_executive_master WHERE exec_remarks = LTRIM(RTRIM(book_clerk));
  
  	DECLARE ama_tc_clerk_cursor CURSOR FOR 
	SELECT exec_remarks FROM t_id_executive_master WHERE exec_amadeus_sign_in_code = ticket_clerk_code;


DECLARE udid_value_code_cursor CURSOR FOR
SELECT detail_key,code FROM t_id_reference_codes_detail_view
WHERE  CODE IN (
SELECT ADD_CODE FROM T_ID_DYNAMIC_DEFINITION 
WHERE ADD_LOV_SQL LIKE '%addLovSql%' AND ADD_KEY = dynamic_udid_key);
 
DECLARE ama_k_tax_cursor CURSOR FOR
 SELECT DISTINCT
     CASE SUBSTR(airk_1,1,1) WHEN 'O' THEN NULL ELSE CASE SUBSTR(airk_1,14,2) WHEN 'K7' THEN 'K7' ELSE SUBSTR(airk_1,14,2) END END tax1,CASE SUBSTR(airk_1,1,1) WHEN 'O' THEN 0 ELSE  IFNULL(CAST(SUBSTR(airk_1,5, INSTR(SUBSTR(airk_1,5),' '))AS DECIMAL(16,2)), 0) END taxa_1,
     CASE SUBSTR(airk_2,1,1) WHEN 'O' THEN NULL ELSE CASE SUBSTR(airk_2,14,2) WHEN 'K7' THEN 'K7' ELSE SUBSTR(airk_2,14,2) END END tax2,CASE SUBSTR(airk_2,1,1) WHEN 'O' THEN 0 ELSE  IFNULL(CAST(SUBSTR(airk_2,5, INSTR(SUBSTR(airk_2,5),' '))AS DECIMAL(16,2)), 0) END taxa_2,
     CASE SUBSTR(airk_3,1,1) WHEN 'O' THEN NULL ELSE CASE SUBSTR(airk_3,14,2) WHEN 'K7' THEN 'K7' ELSE SUBSTR(airk_3,14,2) END END tax3,CASE SUBSTR(airk_3,1,1) WHEN 'O' THEN 0 ELSE  IFNULL(CAST(SUBSTR(airk_3,5, INSTR(SUBSTR(airk_3,5),' '))AS DECIMAL(16,2)), 0) END taxa_3,
     CASE SUBSTR(airk_4,1,1) WHEN 'O' THEN NULL ELSE CASE SUBSTR(airk_4,14,2) WHEN 'K7' THEN 'K7' ELSE SUBSTR(airk_4,14,2) END END tax4,CASE SUBSTR(airk_4,1,1) WHEN 'O' THEN 0 ELSE  IFNULL(CAST(SUBSTR(airk_4,5, INSTR(SUBSTR(airk_4,5),' '))AS DECIMAL(16,2)), 0) END taxa_4,
     CASE SUBSTR(airk_5,1,1) WHEN 'O' THEN NULL ELSE CASE SUBSTR(airk_5,14,2) WHEN 'K7' THEN 'K7' ELSE SUBSTR(airk_5,14,2) END END tax5,CASE SUBSTR(airk_5,1,1) WHEN 'O' THEN 0 ELSE  IFNULL(CAST(SUBSTR(airk_5,5, INSTR(SUBSTR(airk_5,5),' '))AS DECIMAL(16,2)), 0) END taxa_5,
     CASE SUBSTR(airk_6,1,1) WHEN 'O' THEN NULL ELSE CASE SUBSTR(airk_6,14,2) WHEN 'K7' THEN 'K7' ELSE SUBSTR(airk_6,14,2) END END tax6,CASE SUBSTR(airk_6,1,1) WHEN 'O' THEN 0 ELSE  IFNULL(CAST(SUBSTR(airk_6,5, INSTR(SUBSTR(airk_6,5),' '))AS DECIMAL(16,2)), 0) END taxa_6,
     CASE SUBSTR(airk_7,1,1) WHEN 'O' THEN NULL ELSE CASE SUBSTR(airk_7,14,2) WHEN 'K7' THEN 'K7' ELSE SUBSTR(airk_7,14,2) END END tax7,CASE SUBSTR(airk_7,1,1) WHEN 'O' THEN 0 ELSE  IFNULL(CAST(SUBSTR(airk_7,5, INSTR(SUBSTR(airk_7,5),' '))AS DECIMAL(16,2)), 0) END taxa_7,
     CASE SUBSTR(airk_8,1,1) WHEN 'O' THEN NULL ELSE CASE SUBSTR(airk_8,14,2) WHEN 'K7' THEN 'K7' ELSE SUBSTR(airk_8,14,2) END END tax8,CASE SUBSTR(airk_8,1,1) WHEN 'O' THEN 0 ELSE  IFNULL(CAST(SUBSTR(airk_8,5, INSTR(SUBSTR(airk_8,5),' '))AS DECIMAL(16,2)), 0) END taxa_8,
     CASE SUBSTR(airk_9,1,1) WHEN 'O' THEN NULL ELSE CASE SUBSTR(airk_9,14,2) WHEN 'K7' THEN 'K7' ELSE SUBSTR(airk_9,14,2) END END tax9,CASE SUBSTR(airk_9,1,1) WHEN 'O' THEN 0 ELSE  IFNULL(CAST(SUBSTR(airk_9,5, INSTR(SUBSTR(airk_9,5),' '))AS DECIMAL(16,2)), 0) END taxa_9,
     CASE SUBSTR(airk_10,1,1) WHEN 'O' THEN NULL ELSE CASE SUBSTR(airk_10,14,2) WHEN 'K7' THEN 'K7' ELSE SUBSTR(airk_10,14,2) END END tax10,CASE SUBSTR(airk_10,1,1) WHEN 'O' THEN 0 ELSE  IFNULL(CAST(SUBSTR(airk_10,5, INSTR(SUBSTR(airk_10,5),' '))AS DECIMAL(16,2)), 0) END taxa_10,
     CASE SUBSTR(airk_11,1,1) WHEN 'O' THEN NULL ELSE CASE SUBSTR(airk_11,14,2) WHEN 'K7' THEN 'K7' ELSE SUBSTR(airk_11,14,2) END END tax11,CASE SUBSTR(airk_11,1,1) WHEN 'O' THEN 0 ELSE  IFNULL(CAST(SUBSTR(airk_11,5, INSTR(SUBSTR(airk_11,5),' '))AS DECIMAL(16,2)), 0) END taxa_11,
     CASE SUBSTR(airk_12,1,1) WHEN 'O' THEN NULL ELSE CASE SUBSTR(airk_12,14,2) WHEN 'K7' THEN 'K7' ELSE SUBSTR(airk_12,14,2) END END tax12,CASE SUBSTR(airk_12,1,1) WHEN 'O' THEN 0 ELSE  IFNULL(CAST(SUBSTR(airk_12,5, INSTR(SUBSTR(airk_12,5),' '))AS DECIMAL(16,2)), 0) END taxa_12,
     CASE SUBSTR(airk_13,1,1) WHEN 'O' THEN NULL ELSE CASE SUBSTR(airk_13,14,2) WHEN 'K7' THEN 'K7' ELSE SUBSTR(airk_13,14,2) END END tax13,CASE SUBSTR(airk_13,1,1) WHEN 'O' THEN 0 ELSE  IFNULL(CAST(SUBSTR(airk_13,5, INSTR(SUBSTR(airk_13,5),' '))AS DECIMAL(16,2)), 0) END taxa_13,
     CASE SUBSTR(airk_14,1,1) WHEN 'O' THEN NULL ELSE CASE SUBSTR(airk_14,14,2) WHEN 'K7' THEN 'K7' ELSE SUBSTR(airk_14,14,2) END END tax14,CASE SUBSTR(airk_14,1,1) WHEN 'O' THEN 0 ELSE  IFNULL(CAST(SUBSTR(airk_14,5, INSTR(SUBSTR(airk_14,5),' '))AS DECIMAL(16,2)), 0) END taxa_14,
     CASE SUBSTR(airk_15,1,1) WHEN 'O' THEN NULL ELSE CASE SUBSTR(airk_15,14,2) WHEN 'K7' THEN 'K7' ELSE SUBSTR(airk_15,14,2) END END tax15,CASE SUBSTR(airk_15,1,1) WHEN 'O' THEN 0 ELSE  IFNULL(CAST(SUBSTR(airk_15,5, INSTR(SUBSTR(airk_15,5),' '))AS DECIMAL(16,2)), 0) END taxa_15,
     CASE SUBSTR(airk_16,1,1) WHEN 'O' THEN NULL ELSE CASE SUBSTR(airk_16,14,2) WHEN 'K7' THEN 'K7' ELSE SUBSTR(airk_16,14,2) END END tax16,CASE SUBSTR(airk_16,1,1) WHEN 'O' THEN 0 ELSE  IFNULL(CAST(SUBSTR(airk_16,5, INSTR(SUBSTR(airk_16,5),' '))AS DECIMAL(16,2)), 0) END taxa_16,
     CASE SUBSTR(airk_17,1,1) WHEN 'O' THEN NULL ELSE CASE SUBSTR(airk_17,14,2) WHEN 'K7' THEN 'K7' ELSE SUBSTR(airk_17,14,2) END END tax17,CASE SUBSTR(airk_17,1,1) WHEN 'O' THEN 0 ELSE  IFNULL(CAST(SUBSTR(airk_17,5, INSTR(SUBSTR(airk_17,5),' '))AS DECIMAL(16,2)), 0) END taxa_17,
     CASE SUBSTR(airk_18,1,1) WHEN 'O' THEN NULL ELSE CASE SUBSTR(airk_18,14,2) WHEN 'K7' THEN 'K7' ELSE SUBSTR(airk_18,14,2) END END tax18,CASE SUBSTR(airk_18,1,1) WHEN 'O' THEN 0 ELSE  IFNULL(CAST(SUBSTR(airk_18,5, INSTR(SUBSTR(airk_18,5),' '))AS DECIMAL(16,2)), 0) END taxa_18,
     CASE SUBSTR(airk_19,1,1) WHEN 'O' THEN NULL ELSE CASE SUBSTR(airk_19,14,2) WHEN 'K7' THEN 'K7' ELSE SUBSTR(airk_19,14,2) END END tax19,CASE SUBSTR(airk_19,1,1) WHEN 'O' THEN 0 ELSE  IFNULL(CAST(SUBSTR(airk_19,5, INSTR(SUBSTR(airk_19,5),' '))AS DECIMAL(16,2)), 0) END taxa_19,
     CASE SUBSTR(airk_20,1,1) WHEN 'O' THEN NULL ELSE CASE SUBSTR(airk_20,14,2) WHEN 'K7' THEN 'K7' ELSE SUBSTR(airk_20,14,2) END END tax20,CASE SUBSTR(airk_20,1,1) WHEN 'O' THEN 0 ELSE  IFNULL(CAST(SUBSTR(airk_20,5, INSTR(SUBSTR(airk_20,5),' '))AS DECIMAL(16,2)), 0) END taxa_20
       FROM id_air_k
  WHERE airk_key = p_key
    AND (SUBSTR(airk_0,1,3) = 'KFT' OR SUBSTR(airk_0,1,3) = 'KNT' OR SUBSTR(airk_0,1,3) = 'KST');



    
     DECLARE ama_c_clerk_cursor CURSOR FOR
     SELECT LTRIM(RTRIM(SUBSTR(airc_0, 13,2))) book_clerk,LTRIM(RTRIM(SUBSTR(airc_0, 22,2))) ticket_clerk
  FROM id_air_c
  WHERE airc_key = p_key  AND (  LTRIM(RTRIM(SUBSTR(airc_0, 22,2))) !='')
  UNION ALL
     SELECT LTRIM(RTRIM(SUBSTR(airc_0, 9,2))) book_clerk,LTRIM(RTRIM(SUBSTR(airc_0, 14,2))) ticket_clerk
  FROM id_air_c
  WHERE airc_key = p_key  AND (  LTRIM(RTRIM(SUBSTR(airc_0, 22,2))) ='');  

DECLARE default_clerk_cursor CURSOR FOR 
SELECT value FROM t_id_reference_codes_detail_view WHERE domain_name = 'GDS_File_Load'
AND CODE = 'DEFAULT_CLERK';	
	
 DECLARE tax_code_key CURSOR FOR 
 SELECT ttax_tax_key FROM t_id_tvl_tax_master WHERE ttax_code = tax_code;   
   
 DECLARE air_r_customer_cursor CURSOR FOR
  SELECT LPAD(LTRIM(RTRIM(SUBSTR(airr_0,7,10))),10,0) cust_code
  FROM id_air_r
  WHERE airr_key = p_key
    AND SUBSTR(airr_0,1,5) = 'RM*CN'
UNION ALL
  SELECT LPAD(LTRIM(RTRIM(SUBSTR(aira_0,6,10))),10,0) cust_code
  FROM id_air_a
  WHERE aira_key = p_key
    AND SUBSTR(aira_0,1,5) = 'AITAN';
	
	 DECLARE lcc_ex_rm_num CURSOR FOR
     SELECT SUBSTR(airr_0,7) FROM id_air_r WHERE substr(airr_0,1,6) = 'RM*EX/' AND airr_key =p_key;
    
	
	 DECLARE vendor_key_cursor CURSOR FOR
  SELECT LPAD(LTRIM(RTRIM(REPLACE(SUBSTR(airr_0,7,10),'/',''))),8,0) vendor_key
  FROM id_air_r
  WHERE airr_key = p_key
    AND SUBSTR(airr_0,1,6) = 'RM*VNO'
	AND  airr_1 is not null
	AND   SUBSTR(airr_0,1,6) LIKE CONCAT('%',substr(prx_nme,1,6),'%');
	
DECLARE vendor_key_cursor_1 CURSOR FOR
  SELECT LPAD(LTRIM(RTRIM(REPLACE(SUBSTR(airr_0,7,10),'/',''))),8,0) vendor_key
  FROM id_air_r
  WHERE airr_key = p_key
    AND SUBSTR(airr_0,1,6) = 'RM*VNO'
	AND airr_1 IS NULL;
	 
	 DECLARE LDGE_CRD_SUPPLIER_CURSOR CURSOR FOR
     SELECT LPAD(LTRIM(RTRIM(SUBSTR(airr_0,10))),8,0)
  FROM id_air_r
  WHERE airr_key = p_key
    AND SUBSTR(airr_0,1,8) = 'RM*CCADJ';
	
	   DECLARE LDGE_CRD_FLAG_CURSOR CURSOR FOR
     SELECT DISTINCT 'Y'
  FROM id_air_r
  WHERE airr_key = p_key
    AND SUBSTR(airr_0,1,8) = 'RM*CCADJ'
	AND LENGTH(LTRIM(RTRIM(SUBSTR(airr_0,10))))>1;
    
    
    
DECLARE air_r_lpo_cursor CURSOR FOR
  SELECT LTRIM(RTRIM(SUBSTR(airr_0,7,24))) lpo
  FROM id_air_r
  WHERE airr_key = p_key
    AND SUBSTR(airr_0,1,6) = 'RM*PO/';
    
DECLARE air_r_sell_fare_cursor CURSOR FOR
SELECT LTRIM(RTRIM(SUBSTR(airr_0,8))) 
  FROM id_air_r
  WHERE airr_key = p_key
    AND SUBSTR(airr_0,1,6) = 'RM*SLF';
	
	DECLARE air_r_pub_fare_cursor CURSOR FOR
  SELECT LTRIM(RTRIM(SUBSTR(airr_0,8))) 
  FROM id_air_r
  WHERE airr_key = p_key
    AND SUBSTR(airr_0,1,6) = 'RM*PFD';
	
	DECLARE air_r_rsn_code_cursor CURSOR FOR
  SELECT LTRIM(RTRIM(SUBSTR(airf_0,6))) rsn_code
  FROM id_air_f
  WHERE airf_key = p_key
    AND SUBSTR(airf_0,1,5) = 'FT*F*';
	
  DECLARE air_r_EC_code_cursor CURSOR FOR
  SELECT LTRIM(RTRIM(SUBSTR(airr_0,7,2))) EC_code
  FROM id_air_r
  WHERE airr_key = p_key
    AND SUBSTR(airr_0,1,6) = 'RM*EC/';

DECLARE air_r_low_fare_cursor CURSOR FOR
    SELECT DISTINCT CAST(LTRIM(RTRIM(SUBSTR(airr_0,7))) AS DECIMAL(18,0)) low_fare FROM  id_air_r
  WHERE airr_key = p_key
    AND SUBSTR(airr_0,1,6) = 'RM*LF/'
	AND airr_1 is null;

DECLARE air_r_low_fare_cursor_1 CURSOR FOR	
  
SELECT DISTINCT CAST(LTRIM(RTRIM(SUBSTR(airr_0,7))) AS DECIMAL(18,0))low_fare
  FROM id_air_r
  WHERE airr_key = p_key
    AND SUBSTR(airr_0,1,5) = 'RM*LF';
   
	

	DECLARE REMARKS_DEATIL_CURSOR CURSOR FOR
SELECT airr_key,airr_0,SUBSTR(airr_0,1,INSTR(airr_0,'/')-1) prx from id_air_r
WHERE substr(airr_1,1,2) IN (SELECT CONCAT('S',REPLACE(SUBSTR(airh_0,3),0,''))
FROM id_air_h
WHERE airh_key = p_key AND airh_5 NOT IN ('VOID')
ORDER BY airh_serial)
AND airr_key = p_key
UNION ALL
SELECT airr_key,airr_0,SUBSTR(airr_0,1,INSTR(airr_0,'/')-1) prx  from id_air_r
WHERE airr_1 = 'P1'
AND airr_key = p_key;

DECLARE air_r_high_fare_cursor CURSOR FOR
    SELECT DISTINCT CAST(LTRIM(RTRIM(SUBSTR(airr_0,7))) AS DECIMAL(18,0)) low_fare FROM  id_air_r
  WHERE airr_key = p_key
    AND SUBSTR(airr_0,1,6) = 'RM*RF/';		

 DECLARE air_r_high_fare_cursor_1 CURSOR FOR    
SELECT DISTINCT CAST(LTRIM(RTRIM(SUBSTR(airr_0,7))) AS DECIMAL(18,0)) high_fare
  FROM id_air_r
  WHERE airr_key = p_key
    AND SUBSTR(airr_0,1,5) = 'RM*RF';
		 
	 
DECLARE air_r_coll_fare_cursor CURSOR FOR
  SELECT LTRIM(RTRIM(SUBSTR(airr_0,8))) coll_fare
  FROM id_air_r
  WHERE airr_key = p_key
    AND SUBSTR(airr_0,4,4) = 'COLL';
    
DECLARE air_r_sales_exec_cursor CURSOR FOR
  SELECT LTRIM(RTRIM(SUBSTR(airr_0,8,10))) sales_exec
  FROM id_air_r
  WHERE airr_key = p_key
    AND SUBSTR(airr_0,4,4) = 'EXEC';
    
DECLARE ama_fm_comm_cursor CURSOR FOR
  SELECT LTRIM(RTRIM(TRIM(TRAILING 'N' FROM SUBSTR(airf_0, 6)))) comm_per
  FROM id_air_f
  WHERE airf_key = p_key
    AND SUBSTR(airf_0,1,3) = 'FM*';  
	
		DECLARE  FOP_DTLS_CHK_CURSOR CURSOR FOR
SELECT DISTINCT('Y') FROM id_air_r WHERE airr_key = p_key and SUBSTR(airr_0,1,6) = 'RM*MOD';
    
	 
	 DECLARE FOP_DTLS_CURSOR CURSOR FOR
SELECT ROW_NUMBER() OVER(ORDER BY ( LTRIM(RTRIM(SUBSTR(airr_0,1))))) cnt,
LTRIM(RTRIM(SUBSTR(airr_0,7,INSTR(SUBSTR(airr_0,7),'/')-1))) fop_mode,
LTRIM(RTRIM(SUBSTR(airr_0,LOCATE('AMT',airr_0)+3,LOCATE('/',SUBSTR(airr_0,LOCATE('AMT',airr_0)+3))-1)))crd_amt,
  LTRIM(RTRIM(SUBSTR(substr(airr_0,LOCATE('AMT',airr_0)+3),LOCATE('CARD',substr(airr_0,LOCATE('AMT',airr_0)+3))+4,
LOCATE('/',SUBSTR(substr(airr_0,LOCATE('AMT',airr_0)+3),LOCATE('CARD',substr(airr_0,LOCATE('AMT',airr_0)+3))+4))-1))) CRD_TYPE,
LTRIM(RTRIM(SUBSTR(airr_0,LOCATE('CCNO',airr_0)+4,LOCATE('/',SUBSTR(airr_0,LOCATE('CCNO',airr_0)+4))-1))) crd_num,
LTRIM(RTRIM(SUBSTR(airr_0,LOCATE('APP',airr_0)+3,LOCATE('/',SUBSTR(airr_0,LOCATE('APP',airr_0)+3))-1))) app_num,
SUBSTR(airr_0,LOCATE('EXP',airr_0)+3) exp_dte
FROM id_air_r WHERE airr_key = p_key 
 AND substr(airr_0,1,6) = 'RM*MOD'
 and ((substr(airr_1,1,2) IN (air_seg_map)) OR (airr_1 IS NULL))
 group by LTRIM(RTRIM(SUBSTR(airr_0,LOCATE('AMT',airr_0)+3,LOCATE('/',SUBSTR(airr_0,LOCATE('AMT',airr_0)+3))-1))),
  LTRIM(RTRIM(SUBSTR(substr(airr_0,LOCATE('AMT',airr_0)+3),LOCATE('CARD',substr(airr_0,LOCATE('AMT',airr_0)+3))+4,
LOCATE('/',SUBSTR(substr(airr_0,LOCATE('AMT',airr_0)+3),LOCATE('CARD',substr(airr_0,LOCATE('AMT',airr_0)+3))+4))-1))),
LTRIM(RTRIM(SUBSTR(airr_0,LOCATE('CCNO',airr_0)+4,LOCATE('/',SUBSTR(airr_0,LOCATE('CCNO',airr_0)+4))-1))),
LTRIM(RTRIM(SUBSTR(airr_0,LOCATE('APP',airr_0)+3,LOCATE('/',SUBSTR(airr_0,LOCATE('APP',airr_0)+3))-1))),
SUBSTR(airr_0,LOCATE('EXP',airr_0)+3)
ORDER BY airr_serial,LTRIM(RTRIM(SUBSTR(airr_0,LOCATE('CCNO',airr_0)+4,LOCATE('/',SUBSTR(airr_0,LOCATE('CCNO',airr_0)+4))-1)));

DECLARE ama_fm_comm_cursor_1 CURSOR FOR
  SELECT LTRIM(RTRIM(TRIM(TRAILING 'P' FROM SUBSTR(airf_0, 3)))) comm_per
  FROM id_air_f
  WHERE airf_key = p_key
    AND SUBSTR(airf_0,1,3) != 'FM*' AND SUBSTR(airf_0,1,2) = 'FM';   
    
DECLARE customer_check_cursor CURSOR FOR
  SELECT CUSTOMER_KEY,CODE FROM t_id_cms_master WHERE LTRIM(TRIM(CODE)) = cust_code;
  
  DECLARE file_agent_key CURSOR FOR
  SELECT CUSTOMER_KEY FROM t_id_cms_master WHERE LTRIM(TRIM(CODE)) = vendor_key;

 DECLARE walk_brnch_cust_cursor CURSOR FOR
  SELECT CUSTOMER_KEY,CODE FROM t_id_cms_master WHERE LTRIM(TRIM(CODE)) IN (  
    SELECT rcd_abbreviation FROM t_id_reference_codes_detail,t_id_reference_codes_header 
      WHERE rcd_header_key = rch_header_key AND rch_domain_name='Branch_Walkin_Cust' AND rcd_value = t_location_name);  
 
DECLARE walk_customer_cursor CURSOR FOR
  SELECT CUSTOMER_KEY,CODE FROM t_id_cms_master WHERE LTRIM(TRIM(CODE)) IN (  
    SELECT rcd_abbreviation FROM t_id_reference_codes_detail,t_id_reference_codes_header 
      WHERE rcd_header_key = rch_header_key AND rch_domain_name='GDS_File_Load' AND rcd_value='WALK_IN_CUST');    
  
DECLARE ama_fp_pay_type_cursor CURSOR FOR
 
    SELECT  INSTR(airf_0,'CC') cnt, 
  SUBSTR(airf_0, INSTR(airf_0,'CC')+2 , 2 ) card_type,
   SUBSTR(airf_0, INSTR(airf_0,'CC')+4,INSTR( SUBSTR(airf_0, INSTR(airf_0,'CC')+4),'/' ) -1 ) card_number,
 SUBSTR(airf_0,INSTR(airf_0,'/')+1,4) expiry_date,
 SUBSTR(SUBSTR(airf_0,INSTR(airf_0,'/')+1),
  INSTR(SUBSTR(airf_0,INSTR(airf_0,'/')+1),'/')+2) a,
SUBSTR(airf_0,1,2) fp,
 SUBSTR(airf_0,1,6) b,SUBSTR(airf_0,1,3) <> 'FPO' FPO
 FROM id_air_f
  WHERE airf_key = p_key
  AND ((SUBSTR(airf_0,1,2) = 'FP' AND SUBSTR(airf_0,1,3) <> 'FPO') OR
(SUBSTR(airf_0,1,3) = 'MFP' AND SUBSTR(airf_0,1,4) <> 'MFPO'));
 
  
    
 DECLARE card_type_cursor CURSOR FOR   
    SELECT cc_key crd_key,CODE crd_type,NAME crd_name,cc_status crd_an_key,cc_status_code crd_an_code,cc_status_name crd_an_name,cc_service_fee_percentage crd_srv_fee,cc_own_lodge_card_status crd_lodge_status,cc_own_lodge_card_number crd_lodge_num,cc_account_link fop_cust_link_code FROM `v_id_credit_card_type_master`
  WHERE active_status='A' AND CODE = tkt_card_type;
  
 DECLARE fop_more_details_cursor CURSOR FOR  
  SELECT tsd_definition_key FROM `v_id_tvl_settlement_setup_dtl` WHERE tsd_setup_code = FOP_VALUE
  AND tsd_definition_code = definition_code ;
    
DECLARE ama_t_number_cursor_emd CURSOR  FOR
      SELECT 'Y' emd,airt_2 e_tkt_ind
       FROM id_air_t
      WHERE airt_key = p_key
        AND SUBSTR(airt_0,1,4)='TMCD'
        AND (LTRIM(RTRIM(SUBSTR(airt_0, 9, 10)))) = P_TKT_NUMBER;
		
        
DECLARE ama_emd_fare_cursor CURSOR FOR
    SELECT DISTINCT  (CASE WHEN LTRIM(RTRIM(SUBSTR(AIRK_40,4))) IS NULL OR LTRIM(RTRIM(SUBSTR(AIRK_40,4)))=' ' OR LTRIM(RTRIM(SUBSTR(AIRK_40,4))) = '' THEN
 (CASE WHEN LTRIM(RTRIM(SUBSTR(AIRK_31,4))) IS NULL OR LTRIM(RTRIM(SUBSTR(AIRK_31,4)))=' ' OR LTRIM(RTRIM(SUBSTR(AIRK_31,4))) = '' THEN LTRIM(RTRIM(SUBSTR(AIRK_28,4) ))
      ELSE LTRIM(RTRIM(SUBSTR(AIRK_31,4) )) END) ELSE LTRIM(RTRIM(SUBSTR(AIRK_40,4) )) END) AS PUB_FARE,
		(CASE WHEN LTRIM(RTRIM(SUBSTR(AIRK_40,1,3))) IS NULL OR LTRIM(RTRIM(SUBSTR(AIRK_40,1,3))) ='' OR LTRIM(RTRIM(SUBSTR(AIRK_40,1,3))) =' ' THEN(
      CASE WHEN LTRIM(RTRIM(SUBSTR(AIRK_31,1,3))) IS NULL OR LTRIM(RTRIM(SUBSTR(AIRK_31,1,3))) = ' ' OR LTRIM(RTRIM(SUBSTR(AIRK_31,1,3))) = '' THEN LTRIM(RTRIM(SUBSTR(AIRK_28,1,3) ))
      ELSE LTRIM(RTRIM(SUBSTR(AIRK_31,1,3) )) END)	ELSE LTRIM(RTRIM(SUBSTR(AIRK_40,1,3) )) END) AS TKT_CURR,
      CASE LTRIM(RTRIM(AIRK_10))  
		WHEN  '' THEN 'NBO'
	   WHEN  ' ' THEN 'NBO'
      WHEN NULL THEN 'NBO'
      ELSE LTRIM(RTRIM(AIRK_10))  END AS EMD_F_SEC,
      CASE LTRIM(RTRIM(AIRK_11))  
		WHEN  '' THEN 'NBO'
	   WHEN  ' ' THEN 'NBO'
      WHEN NULL THEN 'NBO'
      ELSE LTRIM(RTRIM(AIRK_11))  END AS EMD_T_SEC,
      LTRIM(RTRIM(AIRK_4)) REC_CR_DT
      FROM id_air_k
     WHERE AIRK_KEY = p_key AND LTRIM(RTRIM(AIRK_5)) = emd_tkt_ind
      AND (SUBSTR(AIRK_0,1,3) = 'EMD');

DECLARE excep_inv_ticket_chk_cursor CURSOR for
SELECT DISTINCT 'Y' FROM t_id_gds_loading_exception 
WHERE LE_REMARK_2 LIKE '%default%'
AND LE_CRS = 'AMADEUS'
AND LE_TICKET_NUMBER =P_TKT_NUMBER;
      
DECLARE ama_emd_fare_cursor_u CURSOR FOR
 SELECT DISTINCT CASE WHEN LTRIM(RTRIM(SUBSTR(AIRU_32,7))) IS NULL THEN LTRIM(RTRIM(SUBSTR(AIRU_29,4) ))
      ELSE LTRIM(RTRIM(SUBSTR(AIRU_32,7) )) END AS PUB_FARE,
      CASE WHEN LTRIM(RTRIM(SUBSTR(AIRU_32,1,3))) IS NULL THEN LTRIM(RTRIM(SUBSTR(AIRU_29,1,3) ))
      ELSE LTRIM(RTRIM(SUBSTR(AIRU_32,1,3) )) END AS TKT_CURR,
      CASE LTRIM(RTRIM(AIRU_11))  
		WHEN  '' THEN 'NBO'
	   WHEN  ' ' THEN 'NBO'
      WHEN NULL THEN 'NBO'
      ELSE LTRIM(RTRIM(AIRU_11))  END AS EMD_F_SEC,
      CASE LTRIM(RTRIM(AIRU_12))  
		WHEN  '' THEN 'NBO'
	   WHEN  ' ' THEN 'NBO'
      WHEN NULL THEN 'NBO'
      ELSE LTRIM(RTRIM(AIRU_12))  END AS EMD_T_SEC,
      LTRIM(RTRIM(AIRU_5)) REC_CR_DT
      FROM id_air_u
     WHERE AIRU_KEY = p_key AND LTRIM(RTRIM(AIRU_6)) = emd_tkt_ind
      AND (SUBSTR(AIRU_1,4,3) = 'EMD');
      
DECLARE ama_i_pax_cursor CURSOR FOR
  SELECT LTRIM(RTRIM(REPLACE(REPLACE(REPLACE(substr(airi_1,3),'(ADT)',''),'(CHD)',''),'(INF)',''))) pax_name
  FROM id_air_i
  WHERE airi_key = p_key
  AND ( LTRIM(RTRIM(SUBSTR(airi_1, 3) )) != '')
    AND airi_serial = p_air_Serial;
    
DECLARE ama_i_pax_emd_cursor CURSOR FOR
  SELECT LTRIM(RTRIM(REPLACE(REPLACE(REPLACE(substr(airi_1,3),'(ADT)',''),'(CHD)',''),'(INF)',''))) pax_name
  FROM id_air_i
  WHERE airi_key = p_key
  AND ( LTRIM(RTRIM(SUBSTR(airi_1, 3) )) != '')
    AND SUBSTR(airi_0,5,1) = p_air_Serial - 1;
    
DECLARE ama_i_pax_dkt_cursor CURSOR FOR
  SELECT LTRIM(RTRIM(REPLACE(REPLACE(REPLACE(substr(airi_1,3),'(ADT)',''),'(CHD)',''),'(INF)',''))) pax_dkt_name
  FROM id_air_i
  WHERE airi_key = p_key 
  AND ( LTRIM(RTRIM(SUBSTR(airi_1, 3) )) != '')
  ORDER BY airi_serial;    
    
 DECLARE vat_master_cursor_main CURSOR FOR
 SELECT applied_on_code,applied_on_value,tvs_inter_domestic,tvs_product_type,tvs_package_normal,tvs_output_input_type,
  tvs_percentage,tvs_applicable_from,tvs_applied_on,tcm_code,tcm_description,tvs_inclusive_exclsive,inclusive_exclsive_code,
  inclusive_exclsive_value,tvs_collection_type,collection_code,io_type_code,io_type_value
  FROM v_id_tvl_vat_setup 
  WHERE product_code = 'AIR' AND package_code = prcss_code AND INTER_DOMESTIC_CODE=inter_domestic AND tvs_applicable_from<=CURRENT_DATE 
  AND active_status='A' AND applied_on_code NOT IN ('T','S')
  ORDER BY tvs_applicable_from DESC;
  
DECLARE vat_master_cursor CURSOR FOR
 SELECT tcm_code,tcm_description,inclusive_exclsive_code,collection_code,io_type_code,applied_on_value,tvs_percentage
  FROM v_id_tvl_vat_setup 
  WHERE product_code = 'AIR' AND package_code = prcss_code AND INTER_DOMESTIC_CODE=inter_domestic AND tvs_applicable_from<=CURRENT_DATE 
  AND active_status='A' AND applied_on_code IN (vat_applied_on)
  ORDER BY tvs_applicable_from DESC;
  
DECLARE vat_exempt_cursor_main CURSOR FOR
 SELECT applied_on_code,applied_on_value,tvs_inter_domestic,tvs_product_type,tvs_package_normal,tvs_output_input_type,
  tvs_percentage,tvs_applicable_from,tvs_applied_on,tcm_code,tcm_description,tvs_inclusive_exclsive,inclusive_exclsive_code,
  inclusive_exclsive_value,tvs_collection_type,collection_code,io_type_code,io_type_value
  FROM t_id_tvl_vat_setup_exempt 
  WHERE product_code = 'AIR' AND package_code = prcss_code AND INTER_DOMESTIC_CODE=inter_domestic AND tvs_applicable_from<=CURRENT_DATE 
  AND active_status='A' AND applied_on_code NOT IN ('T','S')
  ORDER BY tvs_applicable_from DESC;
  
      DECLARE master_rsn_key_cursor CURSOR FOR
    SELECT pfad_key FROM t_id_et_private_fare_acc_details WHERE pfad_hap_name = rsn_code;
  
    DECLARE emd_issue_mode_cursor CURSOR FOR
     select DISTINCT 'Y' FROM id_air_t
    WHERE airt_key = p_key
      AND LTRIM(RTRIM(SUBSTR(airt_0, 1, 4))) IN  ('TMCM','TMCR','TMCS','TMCC','TMCP','TMCX','TMCB','TMCD','TMCO','TMCL')
		AND LENGTH(LTRIM(RTRIM(SUBSTR(airt_0, 9, 10)))) = 10;
		
  
DECLARE vat_exempt_cursor CURSOR FOR
 SELECT tcm_code,tcm_description,inclusive_exclsive_code,collection_code,io_type_code,applied_on_value,tvs_percentage
  FROM t_id_tvl_vat_setup_exempt 
  WHERE product_code = 'AIR' AND package_code = prcss_code AND INTER_DOMESTIC_CODE=inter_domestic AND tvs_applicable_from<=CURRENT_DATE 
  AND active_status='A' AND applied_on_code IN (vat_applied_on)
  ORDER BY tvs_applicable_from DESC;
  
DECLARE vat_in_out_cursor CURSOR FOR
 SELECT tvc_inoutput_code,SUM(tvc_amount) FROM t_id_tvl_vat_charge_details WHERE tvc_ticket_key=@TKT_KEY
 AND tvc_docket_key =  @dkt_key_no AND tvc_product_key = tkt_prd_key
 GROUP BY tvc_inoutput_code;
    
  DECLARE ticket_sectors CURSOR FOR  
    SELECT  airh_serial sec_serial, LTRIM(RTRIM(SUBSTR(airh_1,5,3))) sec_src_sector,
          LTRIM(RTRIM(airh_3)) sec_dest_sector, LTRIM(RTRIM(SUBSTR(airh_5,12,2))) sec_class,
          LTRIM(RTRIM(SUBSTR(airh_5,1,2))) sec_airline,
          CASE LENGTH(LTRIM(RTRIM(SUBSTR(airh_5,16,10)))) WHEN 10 THEN 'Y' ELSE 'N' END sec_year,
          CASE LENGTH(LTRIM(RTRIM(SUBSTR(airh_5,16,10)))) WHEN 10 THEN LTRIM(RTRIM(SUBSTR(airh_5,16,9))) ELSE LTRIM(RTRIM(SUBSTR(airh_5,16,5))) END dept_date,          
          CASE LENGTH(LTRIM(RTRIM(SUBSTR(airh_5,16,10)))) WHEN 10 THEN CONCAT(LTRIM(RTRIM(SUBSTR(airh_5,25,2))),':',LTRIM(RTRIM(SUBSTR(airh_5,26,2)))) ELSE CONCAT(LTRIM(RTRIM(SUBSTR(airh_5,21,2))),':',LTRIM(RTRIM(SUBSTR(airh_5,23,2)))) END dept_time,          
          CASE LENGTH(LTRIM(RTRIM(SUBSTR(airh_5,16,10)))) WHEN 10 THEN LTRIM(RTRIM(SUBSTR(airh_5,35,9))) ELSE LTRIM(RTRIM(SUBSTR(airh_5,31,5))) END arrv_date,          
          CASE LENGTH(LTRIM(RTRIM(SUBSTR(airh_5,16,10)))) WHEN 10 THEN CONCAT(LTRIM(RTRIM(SUBSTR(airh_5,30,2))),':',LTRIM(RTRIM(SUBSTR(airh_5,32,2)))) ELSE CONCAT(LTRIM(RTRIM(SUBSTR(airh_5,26,2))),':',LTRIM(RTRIM(SUBSTR(airh_5,28,2)))) END arrv_time,          
          20 sec_baggage, LTRIM(RTRIM(SUBSTR(airh_5,7,4))) sec_flight,RTRIM(LTRIM(airh_19)) miles,CAST(RPAD(RTRIM(LTRIM(airh_17)),6,0) AS TIME) flt_duration
     FROM id_air_h
     WHERE airh_key = p_key AND airh_5 NOT IN ('VOID')
  ORDER BY airh_serial; 
  
  
  DECLARE ticket_sectors_emd CURSOR FOR
       SELECT airu_serial sec_serial, LTRIM(RTRIM(SUBSTR(airu_1,5,3))) sec_src_sector,
        LTRIM(RTRIM(airu_3)) sec_dest_sector, LTRIM(RTRIM(SUBSTR(airu_5,12,2))) sec_class,
        LTRIM(RTRIM(SUBSTR(airu_5,1,2))) sec_airline, 
        CASE LENGTH(LTRIM(RTRIM(SUBSTR(airu_5,16,10)))) WHEN 10 THEN 'Y' ELSE 'N' END sec_year,
          CASE LENGTH(LTRIM(RTRIM(SUBSTR(airu_5,16,10)))) WHEN 10 THEN LTRIM(RTRIM(SUBSTR(airu_5,16,9))) ELSE LTRIM(RTRIM(SUBSTR(airu_5,16,5))) END dept_date,          
          CASE LENGTH(LTRIM(RTRIM(SUBSTR(airu_5,16,10)))) WHEN 10 THEN CONCAT(LTRIM(RTRIM(SUBSTR(airu_5,25,2))),':',LTRIM(RTRIM(SUBSTR(airu_5,26,2)))) ELSE CONCAT(LTRIM(RTRIM(SUBSTR(airu_5,21,2))),':',LTRIM(RTRIM(SUBSTR(airu_5,23,2)))) END dept_time,          
          CASE LENGTH(LTRIM(RTRIM(SUBSTR(airu_5,16,10)))) WHEN 10 THEN LTRIM(RTRIM(SUBSTR(airu_5,35,9))) ELSE LTRIM(RTRIM(SUBSTR(airu_5,31,5))) END arrv_date,          
          CASE LENGTH(LTRIM(RTRIM(SUBSTR(airu_5,16,10)))) WHEN 10 THEN CONCAT(LTRIM(RTRIM(SUBSTR(airu_5,30,2))),':',LTRIM(RTRIM(SUBSTR(airu_5,32,2)))) ELSE CONCAT(LTRIM(RTRIM(SUBSTR(airu_5,26,2))),':',LTRIM(RTRIM(SUBSTR(airu_5,28,2)))) END arrv_time,          
        20 sec_baggage, LTRIM(RTRIM(SUBSTR(airu_5,7,4))) sec_flight,CAST(RPAD(RTRIM(LTRIM(airu_17)),6,0) AS TIME) flt_duration
  FROM id_air_u
  WHERE airu_key = p_key AND CHAR_LENGTH(LTRIM(RTRIM(SUBSTR(airu_1,5,3))))>2 AND airu_5 NOT IN ('VOID')
  ORDER BY airu_serial;  
      
  DECLARE airport_src_key CURSOR FOR     
  SELECT airm_key FROM t_id_airport_master WHERE LTRIM(RTRIM(CODE)) =  LTRIM(RTRIM(t_sec_src));  
  
  DECLARE airport_dest_key CURSOR FOR     
  SELECT airm_key FROM t_id_airport_master WHERE LTRIM(RTRIM(CODE)) =  LTRIM(RTRIM(t_sec_dest));  
  
  DECLARE class_master_key CURSOR FOR
  SELECT clsm_key FROM t_id_tvl_class_master WHERE LTRIM(RTRIM(CODE)) = LTRIM(RTRIM(t_sec_class));
  
  DECLARE airline_master_key CURSOR FOR
  SELECT airline_key FROM t_id_tvl_airline_master WHERE LTRIM(RTRIM(airline_short_name)) = LTRIM(RTRIM(t_sec_airline));
  
  DECLARE tkt_air_release_key CURSOR FOR
  SELECT airline_key FROM t_id_tvl_airline_master WHERE LTRIM(RTRIM(CODE)) = LTRIM(RTRIM(tkt_air_release));
  
  DECLARE currency_key_cursor CURSOR FOR
  SELECT currency_key FROM t_id_currency_master WHERE LTRIM(RTRIM(CODE))=tkt_currency;
  
  DECLARE iata_agent_cursor CURSOR FOR
  SELECT VALUE FROM t_id_reference_codes_detail_view WHERE domain_name='IATA_AGENT' AND LTRIM(RTRIM(CODE))=tmp_iata_code;
  
  DECLARE iata_location_cursor CURSOR FOR
  SELECT VALUE FROM t_id_reference_codes_detail_view WHERE domain_name='IATA_LOCATION' AND LTRIM(RTRIM(CODE))=tmp_iata_code;
  
  DECLARE pax_category_cursor CURSOR FOR
  SELECT detail_key FROM t_id_reference_codes_detail_view WHERE domain_name='Pax Type' AND LTRIM(RTRIM(CODE))=passenger_age_type;
  
  DECLARE ama_i_pax_ty_cursor CURSOR FOR
  SELECT LTRIM(RTRIM(substr(airi_1,3))) pax_name
  FROM id_air_i
  WHERE airi_key = p_key
  AND ( LTRIM(RTRIM(SUBSTR(airi_1, 3) )) != '')
    AND airi_serial = p_air_Serial;	
  
  DECLARE location_issue_book CURSOR FOR
  SELECT VALUE FROM t_id_reference_codes_detail_view WHERE domain_name='LOC_ISSUE_BOOK';
  
  DECLARE default_agent_key CURSOR FOR
SELECT customer_key FROM t_id_cms_master WHERE CODE IN (
SELECT value FROM t_id_reference_codes_detail_view WHERE domain_name = 'GDS_File_Load'
AND CODE = 'DEFAULT_SUPPLIER');
 
  DECLARE source_agent_key CURSOR FOR
   SELECT B.CUSTOMER_KEY FROM t_id_cms_master B, t_id_reference_codes_detail_view C
    WHERE C.domain_name='AccountType' AND LTRIM(RTRIM(C.VALUE))='Supplier'
     AND LTRIM(RTRIM(B.CODE)) = 'AMADEUS' AND C.profile_key='4' AND B.profile_key='4'
	  AND C.profile_key = B.profile_key;
  
  DECLARE iata_agent_key CURSOR FOR
   SELECT B.CUSTOMER_KEY FROM t_id_reference_codes_detail_view A,t_id_cms_master B, t_id_reference_codes_detail_view C
    WHERE A.domain_name='IATA_AGENT' AND C.domain_name='AccountType' 
    AND LTRIM(RTRIM(A.CODE))=tmp_iata_code AND LTRIM(RTRIM(C.VALUE))='Supplier'
    AND LTRIM(RTRIM(A.VALUE)) = LTRIM(RTRIM(B.CODE)) AND C.profile_key='4' AND A.profile_key='4'
    AND C.profile_key = B.profile_key AND A.profile_key = B.profile_key AND A.profile_key = C.profile_key;
  
  DECLARE iata_location_key CURSOR FOR
    SELECT B.BM_KEY,B.code FROM t_id_reference_codes_detail_view A,t_id_tvl_branch_master B 
  WHERE A.domain_name='IATA_LOCATION' AND LTRIM(RTRIM(A.CODE))=tmp_iata_code
  AND LTRIM(RTRIM(A.VALUE)) = LTRIM(RTRIM(B.CODE)) AND A.profile_key = B.profile_key ;
  DECLARE pcc_location_key CURSOR FOR
    SELECT B.BM_KEY,B.CODE FROM t_id_reference_codes_detail_view A,t_id_tvl_branch_master B 
  WHERE A.domain_name='PCC_LOCATION' AND LTRIM(RTRIM(A.CODE)) = pcc_loc
  AND LTRIM(RTRIM(A.VALUE)) = LTRIM(RTRIM(B.CODE)) ;
  
  DECLARE brnch_location_key CURSOR FOR
  SELECT bm_key,CODE,NAME FROM t_id_tvl_branch_master WHERE CODE = v_brnch_code;
  
  DECLARE air_seg_map_cursor CURSOR for
SELECT CONCAT('S',LTRIM(RTRIM(REPLACE(SUBSTR(airh_1,1,3),0,'')))) FROM id_air_h WHERE airh_key = p_key;
  
  DECLARE tkt_clerk_location_key CURSOR FOR
  SELECT bm_key,CODE,NAME FROM t_id_tvl_branch_master WHERE bm_key = ticket_clerk_branch;
  
  DECLARE product_key_cursor CURSOR FOR
  SELECT eptm_key FROM t_id_tvl_product_type_master WHERE LTRIM(RTRIM(CODE))=prd_type;
  
  DECLARE fop_settlement_cursor CURSOR FOR
  SELECT tss_key FROM t_id_tvl_settlement_setup WHERE UPPER(LTRIM(RTRIM(CODE)))=(FOP_VALUE);
  
  DECLARE dkt_pnr_exist_cursor CURSOR FOR
  SELECT MAX(dkt_number) FROM t_id_tvl_docket_header WHERE LTRIM(RTRIM(dkt_transaction_reference))=pnr_number AND dkt_status = 'A';
  
  DECLARE ticket_check_cursor CURSOR FOR
    SELECT 'V' FROM t_id_tvl_air_ticket_details WHERE atd_ticket_number   = ticket_check_cursor_tkt;
  
 	DECLARE dkt_head_sumry_cursor CURSOR FOR  
 	SELECT dkts_key,dkt_account_status,dkt_air_count FROM t_id_tvl_docket_header_summary WHERE dkt_number = dkt_num; 
  
  DECLARE dkt_type_cursor CURSOR FOR
  SELECT VALUE FROM t_id_reference_codes_detail_view WHERE domain_name ='Branch_Doc_Type' AND CODE = t_location_code;
  
  DECLARE Docket_Type_Key CURSOR FOR
  
  SELECT DOC_KEY FROM T_ID_DOCUMENT_TYPE_MASTER WHERE DOC_TYPE_CODE = LTRIM(RTRIM(dkt_type_value));
    
  DECLARE VAT_EXMPT_CUST_CURSOR CURSOR FOR
  SELECT 'Y' FROM t_id_tvl_vat_setup_exempt WHERE tvse_customer_key =  cust_key ;
  
  DECLARE inter_domestic_key_cursor CURSOR FOR
  SELECT detail_key FROM t_id_reference_codes_detail_view WHERE domain_name ='InternationalDomestic' AND CODE = inter_domestic;
  
  DECLARE service_type_key_cursor CURSOR FOR 
  SELECT detail_key FROM t_id_reference_codes_detail_view WHERE domain_name ='TransactionType' AND CODE = 'I';
  
  DECLARE process_type_cursor CURSOR FOR
  SELECT detail_key FROM t_id_reference_codes_detail_view WHERE domain_name ='ProcessType' AND UPPER(VALUE) = procss_typ;
  
  DECLARE issue_mode_cursor CURSOR FOR
  SELECT detail_key FROM t_id_reference_codes_detail_view WHERE domain_name ='Issue Mode' AND UPPER(CODE) = v_issue_mode;
  
  DECLARE GDS_File_Service_Cursor CURSOR FOR
  SELECT VALUE srv_fee,CODE srv_code FROM t_id_reference_codes_detail_view WHERE domain_name ='GDS_FILE_SRV_FEE';
  
  DECLARE default_service_fee_cursor CURSOR FOR
  SELECT ascd_serv_chg_id service_id,asc_charge_key service_key,charge_code service_code,charge_name service_name,
  ascd_discount_amt discount_amount,ascd_serv_chrg_mode_code charge_mode,ascd_chrg_apply_on_code charge_on_amount,
  ascd_serv_chrg_book charge_amount,ascd_serv_chrg_adult charge_adult_amount,ascd_serv_chrg_child charge_child_amount,
  ascd_serv_chrg_infant charge_infant_amount
  FROM `v_id_tvl_cms_air_srv_chrg_detail_rule` WHERE 
  (tkt_type_code = 'ALL' OR tkt_type = inter_domestic_key) AND 
  (airmas_code = 'ALL' OR airline_code = air_rls_key) AND 
  (class_type_code = 'A' OR class_type = tmp_class) AND 
  (tkt_date BETWEEN IFNULL(effective_from,CURRENT_DATE) AND IFNULL(effective_to,CURRENT_DATE)) AND
  cms_code IS NULL AND active_status = 'A';
  
  DECLARE file_service_fee_cursor CURSOR FOR
  SELECT ascd_serv_chg_id service_id,asc_charge_key service_key,charge_code service_code,charge_name service_name,
  ascd_discount_amt discount_amount,ascd_serv_chrg_mode_code charge_mode,ascd_chrg_apply_on_code charge_on_amount,
  ascd_serv_chrg_book charge_amount,ascd_serv_chrg_adult charge_adult_amount,ascd_serv_chrg_child charge_child_amount,
  ascd_serv_chrg_infant charge_infant_amount
  FROM `v_id_tvl_cms_air_srv_chrg_detail_rule` 
  WHERE ascd_serv_chg_name = srv_fee_code
 
  AND active_status = 'A';
  DECLARE cust_service_fee_check CURSOR FOR
  SELECT 'Y' FROM `v_id_tvl_cms_air_srv_chrg_detail_rule` 
  WHERE cms_code = cust_code AND active_status = 'A';
  DECLARE cust_service_fee_cursor CURSOR FOR
  SELECT ascd_serv_chg_id service_id,asc_charge_key service_key,charge_code service_code,charge_name service_name,
  ascd_discount_amt discount_amount,ascd_serv_chrg_mode_code charge_mode,ascd_chrg_apply_on_code charge_on_amount,
  ascd_serv_chrg_adult charge_amount,ascd_serv_chrg_adult charge_adult_amount,ascd_serv_chrg_child charge_child_amount,
  ascd_serv_chrg_infant charge_infant_amount
  FROM `v_id_tvl_cms_air_srv_chrg_detail_rule` WHERE 
  (tkt_type_code = 'ALL' OR tkt_type = inter_domestic_key) AND 
  (airmas_code = 'ALL' OR airline_code = air_rls_key) AND 
  (class_type_code = 'A' OR class_type = tmp_class) AND 
  
  cms_code = cust_code AND active_status = 'A';
      
  DECLARE CONTINUE HANDLER FOR NOT FOUND SET DONE = TRUE;
  
  DECLARE EXIT HANDLER FOR SQLEXCEPTION
  BEGIN
    GET CURRENT DIAGNOSTICS CONDITION 1
      errno = MYSQL_ERRNO, msg = MESSAGE_TEXT;
      SET P_SUCCESS ='N';
                INSERT INTO t_id_gds_loading_exception (LE_COMPANY,LE_CRS,LE_AIRLINE,LE_TICKET_NUMBER,LE_LOAD_DATE,LE_LOAD_ERROR,
					    LE_LOAD_PLACE,LE_REMARK_1,LE_REMARK_2,LE_REMARK_3,LE_REMARK_4,lock_key,profile_key) 
				VALUES('1','AMADEUS',tkt_airline,excep_tkt_num,CURRENT_DATE,msg,p_cursor,CONCAT('Reference Key',p_key),NULL,NULL,IFNULL(pnr_number,'NULL'),0,4);
         
  END;
  
  DECLARE EXIT HANDLER FOR 1265
  BEGIN
    GET CURRENT DIAGNOSTICS CONDITION 1
      errno = MYSQL_ERRNO, msg = MESSAGE_TEXT;
      SET P_SUCCESS ='N';
                INSERT INTO t_id_gds_loading_exception (LE_COMPANY,LE_CRS,LE_AIRLINE,LE_TICKET_NUMBER,LE_LOAD_DATE,LE_LOAD_ERROR,
					    LE_LOAD_PLACE,LE_REMARK_1,LE_REMARK_2,LE_REMARK_3,LE_REMARK_4,lock_key,profile_key) 
				VALUES('1','AMADEUS',tkt_airline,excep_tkt_num,CURRENT_DATE,msg,p_cursor,CONCAT('Reference Key',p_key),NULL,NULL,IFNULL(pnr_number,'NULL'),0,4);
         
  END;
  
  SET P_SUCCESS ='N';
  SET BDF =0;
  
    
   OPEN EXCEP_TKT_NUM_CURSOR;
  FETCH EXCEP_TKT_NUM_CURSOR INTO excep_tkt_num;
  CLOSE EXCEP_TKT_NUM_CURSOR;
  
 
  OPEN air_void_cursor;
  FETCH air_void_cursor INTO air_void;
  CLOSE air_void_cursor;
  
  OPEN refund_exist_cursor;
  FETCH refund_exist_cursor INTO air_rfnd;
  CLOSE refund_exist_cursor;
 
 IF IFNULL(LTRIM(RTRIM(air_void)),'NORMAL') != 'VOID' AND IFNULL(LTRIM(RTRIM(air_rfnd)),'SL') !='RF' THEN
 
 
  OPEN ama_a_airline_cursor;
  FETCH ama_a_airline_cursor INTO tkt_airline;
  CLOSE ama_a_airline_cursor;
  IF LTRIM(RTRIM(tkt_airline)) IS NULL THEN
   OPEN ama_t_airline_cursor;
   FETCH ama_t_airline_cursor INTO tkt_airline;
   CLOSE ama_t_airline_cursor;
  END IF;
  SET tkt_air_release = tkt_airline;
 
 
  OPEN tkt_air_release_key;
  FETCH tkt_air_release_key INTO air_rls_key;
  CLOSE tkt_air_release_key;
     INSERT INTO ID_KK_TEST(COL1,COL2) VALUES ('1001',air_rls_key);
  OPEN find_iata_cursor;
  FETCH find_iata_cursor INTO tmp_iata_code,pnr_number,bk_pcc,iss_pcc;
  CLOSE find_iata_cursor;
  
 
 
    OPEN  REMARKS_DEATIL_CURSOR;
  FETCH REMARKS_DEATIL_CURSOR INTO arm_seg_key,arm_dtls,prx_nme;
  CLOSE REMARKS_DEATIL_CURSOR;
  
 
 
 
  
  OPEN booking_clerk_cursor;
  FETCH booking_clerk_cursor INTO book_clerk;
  CLOSE booking_clerk_cursor; 
  
  OPEN ticketing_clerk_cursor;
  FETCH ticketing_clerk_cursor INTO ticket_clerk;
  CLOSE ticketing_clerk_cursor; 
  
    INSERT INTO ID_KK_TEST(COL1,COL2) VALUES ('1002',book_clerk);
   INSERT INTO ID_KK_TEST(COL1,COL2) VALUES ('1003',ticket_clerk);	
  

 
  
   OPEN ticket_clerk_key_check_cursor;
  FETCH ticket_clerk_key_check_cursor INTO ticket_clerk_check;
  CLOSE ticket_clerk_key_check_cursor; 
  
  
   OPEN book_clerk_key_check_cursor;
  FETCH book_clerk_key_check_cursor INTO book_clerk_check;
  CLOSE book_clerk_key_check_cursor; 
  
  
  
 

 
  
  IF IFNULL(ticket_clerk_check,'N')= 'N' and IFNULL(book_clerk_check,'N')= 'Y'  THEN
  SET ticket_clerk = book_clerk;
  
 
  END IF ;
  
IF IFNULL(ticket_clerk_check,'N')= 'N' and IFNULL(book_clerk_check,'N')= 'N'  THEN
  OPEN ama_c_clerk_cursor;
  FETCH ama_c_clerk_cursor INTO book_clerk_code,ticket_clerk_code;
  CLOSE ama_c_clerk_cursor;
  
  
 

  
  
  IF ticket_clerk_code IS NULL AND book_clerk_code IS NOT NULL THEN 
  SET ticket_clerk_code = book_clerk_code;
  END IF;
  
  OPEN ama_tc_clerk_cursor;
  FETCH ama_tc_clerk_cursor INTO ticket_clerk;
  CLOSE ama_tc_clerk_cursor;
  
 
  END IF;
  
   OPEN book_clerk_key_cursor;
   FETCH book_clerk_key_cursor INTO book_clerk_key;
   CLOSE book_clerk_key_cursor;
  
   OPEN ticket_clerk_key_cursor;
   FETCH ticket_clerk_key_cursor INTO ticket_clerk_key,ticket_clerk_branch;
   CLOSE ticket_clerk_key_cursor;
  
  IF book_clerk_key IS NULL AND ticket_clerk_key IS NOT NULL THEN
     SET book_clerk_key = ticket_clerk_key;
  ELSEIF book_clerk_key IS NOT NULL AND ticket_clerk_key IS NULL THEN
     SET ticket_clerk_key = book_clerk_key;
  END IF;
  
 
  SET exp_tkt_clerk = ticket_clerk;
   IF IFNULL(ticket_clerk_key,'XXX') = 'XXX' THEN
  SET msg = 'Executive Master';
  SET p_cursor_1 = CONCAT('Ticketing Agent code (',exp_tkt_clerk,') missing in executive master' );
  SET default_msg = 'Ticket loaded with default Ticketing Agent code';
  SET P_SUCCESS = 'N';
   INSERT INTO t_id_gds_loading_exception (LE_COMPANY,LE_CRS,LE_AIRLINE,LE_TICKET_NUMBER,LE_LOAD_DATE,LE_LOAD_ERROR,
					    LE_LOAD_PLACE,LE_REMARK_1,LE_REMARK_2,LE_REMARK_3,LE_REMARK_4,lock_key,profile_key) 
				VALUES('1','AMADEUS',tkt_airline,excep_tkt_num,CURRENT_DATE,msg,p_cursor_1,CONCAT('Reference -',p_key),default_msg,NULL,IFNULL(pnr_number,'NULL'),0,4);

  OPEN  default_clerk_cursor;
  FETCH default_clerk_cursor INTO ticket_clerk;
  CLOSE default_clerk_cursor;
 
 
END IF;
  
  
 
  
  
  OPEN  pr_remarks_cursor;
  FETCH pr_remarks_cursor INTO pr_remarks;
  CLOSE pr_remarks_cursor; 
  
     INSERT INTO ID_KK_TEST(COL1,COL2) VALUES ('1004',pr_remarks);

  OPEN  location_issue_book;
  FETCH location_issue_book INTO t_iss_bk;
  CLOSE location_issue_book;
   
  IF t_iss_bk = 'I' THEN
    SET pcc_loc =  iss_pcc; 
  ELSE 
    SET pcc_loc =  bk_pcc;
  END IF;
  
 
 
  
  OPEN pcc_clerk_key_cursor;
  FETCH pcc_clerk_key_cursor INTO ticket_clerk_key,ticket_clerk_branch;
  CLOSE pcc_clerk_key_cursor;
  
  IF  ticket_clerk_branch IS NULL THEN
   OPEN book_clerk_key_cursor;
   FETCH book_clerk_key_cursor INTO book_clerk_key;
   CLOSE book_clerk_key_cursor;
  
   OPEN ticket_clerk_key_cursor;
   FETCH ticket_clerk_key_cursor INTO ticket_clerk_key,ticket_clerk_branch;
   CLOSE ticket_clerk_key_cursor;
  END IF; 
  
 
 
 
 
  
  IF book_clerk_key IS NULL AND ticket_clerk_key IS NOT NULL THEN
     SET book_clerk_key = ticket_clerk_key;
  ELSEIF book_clerk_key IS NOT NULL AND ticket_clerk_key IS NULL THEN
     SET ticket_clerk_key = book_clerk_key;
  END IF;
  
  OPEN user_comp_profile_cursor;
  FETCH user_comp_profile_cursor INTO user_comp_profile_key;
  CLOSE user_comp_profile_cursor;
  
  OPEN ticket_user_key_cursor;
  FETCH ticket_user_key_cursor INTO user_created_key,user_profile_key;
  CLOSE ticket_user_key_cursor;
  
  IF user_created_key IS NULL THEN
   OPEN user_created_cursor;
   FETCH user_created_cursor INTO user_created_key,user_profile_key;
   CLOSE user_created_cursor;
  END IF;  
  
  
  SET p_cursor = ' Ticket Date';    
  OPEN ama_d_date_cursor;
  FETCH ama_d_date_cursor INTO tkt_date;
  CLOSE ama_d_date_cursor;
       
  OPEN  LCC_CHECK_CURSOR;
  FETCH LCC_CHECK_CURSOR INTO lcc_chk;
  CLOSE LCC_CHECK_CURSOR;
  
  SET p_cursor = 'TRVL Date';     
  OPEN air_h_tvl_date_cursor;
  FETCH air_h_tvl_date_cursor INTO tvl_date,tkt_class;
  CLOSE air_h_tvl_date_cursor;
  
  SET p_cursor = ' EMD Trvl Date';    
  IF LTRIM(RTRIM(tvl_date)) IS NULL THEN
   OPEN air_u_tvl_date_cursor;
   FETCH air_u_tvl_date_cursor INTO tvl_date,tkt_class_emd;
   CLOSE air_u_tvl_date_cursor;
  END IF;
 
 SET p_cursor = ' Class Master';    
 IF IFNULL(LTRIM(RTRIM(tkt_class)),LTRIM(RTRIM(tkt_class_emd))) IS NOT NULL THEN
  OPEN class_cursor;
  FETCH class_cursor INTO tmp_class;
  CLOSE class_cursor;
  
  IF tmp_class IS NULL THEN
   INSERT INTO t_id_tvl_class_master(CODE,NAME,clsm_type,active_status,active_from,lock_key,profile_key)
   VALUES(IFNULL(LTRIM(RTRIM(tkt_class)),LTRIM(RTRIM(tkt_class_emd))),CONCAT(IFNULL(LTRIM(RTRIM(tkt_class)),LTRIM(RTRIM(tkt_class_emd))), 'Class'),'A','A',CURRENT_DATE,1,user_profile_key);  
   OPEN class_cursor;
   FETCH class_cursor INTO tmp_class;
   CLOSE class_cursor;    
  END IF;
 END IF; 
 
 SET p_cursor = concat(' tkt_date validate ', tvl_date);    
 
 
 
 
 IF tkt_date > tvl_date THEN
   SET tvl_date =  STR_TO_DATE(  CONCAT(IFNULL(DATE_FORMAT(tvl_date,'%d%b'), ''),IFNULL((DATE_FORMAT(tvl_date,'%Y') + 1), '')),'%d%b%Y');
 END IF;
 
 
 
  SET p_cursor = ' Error : iata_agent_code';    
  OPEN  iata_agent_cursor;
  FETCH iata_agent_cursor INTO t_iata_agent;
  CLOSE iata_agent_cursor;
  SET p_cursor = ' Error : iata_agent_key';

  
  OPEN  air_sec_serial_key;
  FETCH air_sec_serial_key INTO s_serial_key;
  CLOSE air_sec_serial_key;
  
  INSERT INTO ID_KK_TEST(COL1,COL2) VALUES ('1005',CONCAT('s_serial_key',s_serial_key));

  OPEN  vendor_key_cursor;
  FETCH vendor_key_cursor INTO vendor_key;
  CLOSE vendor_key_cursor; 
  
  SET vendor_key = LPAD(vendor_key,8,0);
  
  IF IFNULL(vendor_key,0) = 0 then
  OPEN  vendor_key_cursor_1;
  FETCH vendor_key_cursor_1 INTO vendor_key;
  CLOSE vendor_key_cursor_1; 
  SET vendor_key = LPAD(vendor_key,8,0);
  END IF;
  
  SET vendor_exp_key = vendor_key;
 
 
  OPEN  file_agent_key;
  FETCH file_agent_key INTO t_agent_key;
  CLOSE file_agent_key;
  
  
 
  
 
  IF t_agent_key IS NULL THEN 
  OPEN  iata_agent_key;
  FETCH iata_agent_key INTO t_agent_key;
  CLOSE iata_agent_key;
  
       INSERT INTO ID_KK_TEST(COL1,COL2) VALUES ('1006',t_agent_key);
 
 IF IFNULL(lcc_chk,'N') = 'Y'  then
 SET t_agent_key = 'NULL';
 END IF;
  END IF;
  
    
    IF IFNULL(t_agent_key,0) = 0 THEN
  
     SET msg = 'Business Partner';
   SET p_cursor_1 =  CONCAT('Supplier code (',vendor_exp_key,') missing in Business partner' );
   SET default_msg = 'Ticket loaded with default Supplier code';
   SET P_SUCCESS = 'N';
INSERT INTO t_id_gds_loading_exception (LE_COMPANY,LE_CRS,LE_AIRLINE,LE_TICKET_NUMBER,LE_LOAD_DATE,LE_LOAD_ERROR,
					    LE_LOAD_PLACE,LE_REMARK_1,LE_REMARK_2,LE_REMARK_3,LE_REMARK_4,lock_key,profile_key) 
				VALUES('1','AMADEUS',tkt_airline,excep_tkt_num,CURRENT_DATE,msg,p_cursor_1,CONCAT('Reference Key',p_key),default_msg,NULL,IFNULL(pnr_number,'NULL'),0,4);
  
  OPEN  default_agent_key;
  FETCH default_agent_key INTO t_agent_key;
  CLOSE default_agent_key; 
END IF;
    
 INSERT INTO ID_KK_TEST(COL1,COL2) VALUES ('1007',concat('final_t_agent_key','-',IFNULL(t_agent_key,'YYYY')));
  
  SET p_cursor = ' Error : source_agent_key';         
  OPEN  source_agent_key;
  FETCH source_agent_key INTO src_agent_key;
  CLOSE source_agent_key;
  
  IF ticket_clerk_branch IS NOT NULL THEN
	 OPEN tkt_clerk_location_key;
	 FETCH tkt_clerk_location_key INTO t_location_key,t_location_code,t_location_name;
	 CLOSE tkt_clerk_location_key;
  ELSE	
	IF LTRIM(RTRIM(t_location_key)) IS NULL THEN
    SET p_cursor = ' Error : iata_location_key';         
    OPEN  iata_location_key;
    FETCH iata_location_key INTO t_location_key,t_location_code;
    CLOSE iata_location_key;
   
    OPEN  pcc_location_key;
    FETCH pcc_location_key INTO t_location_key,t_location_code;
    CLOSE pcc_location_key;
   END IF;
  END IF;     

  OPEN exch_doc_cursor;
  FETCH exch_doc_cursor INTO tkt_exch_doc_number;
  CLOSE exch_doc_cursor;
  
  IF IFNULL(lcc_chk,'N') = 'Y' AND IFNULL(tkt_exch_doc_number,0) = 0 THEN 
   OPEN lcc_ex_rm_num;
  FETCH lcc_ex_rm_num INTO tkt_exch_doc_number;
  CLOSE lcc_ex_rm_num;
  END IF;
  
  SET p_cursor = ' Error : Fare Cursor';
  
  OPEN  air_r_pub_fare_cursor;
  FETCH air_r_pub_fare_cursor INTO pub_fare;
  CLOSE air_r_pub_fare_cursor;
  
  OPEN  ama_k_pub_fare_cursor;
  FETCH ama_k_pub_fare_cursor INTO fare_comm_amtt;
  CLOSE ama_k_pub_fare_cursor;

IF IFNULL(pub_fare,0) = 0 THEN 
SET pub_fare = fare_comm_amtt;
end if;


  OPEN  ama_k_fare_cursor;
  FETCH ama_k_fare_cursor INTO ex_rate, tkt_currency,tkt_fare_mode;
  CLOSE ama_k_fare_cursor;

  



 
  IF SUBSTR(tkt_exch_doc_number,1,4) <> 'FOID' AND tkt_exch_doc_number IS NOT NULL THEN
   OPEN reissue_fare_cursor;
   FETCH reissue_fare_cursor INTO v_pub_fare, v_ex_rate, v_tkt_currency,tkt_fare_mode;
   CLOSE reissue_fare_cursor;
  ELSE
   SET tkt_exch_doc_number = NULL;
  END IF;
  

  
  IF IFNULL(v_pub_fare,0) > 0 THEN
    SET pub_fare = IFNULL(v_pub_fare,0);
  ELSEIF (tkt_fare_mode = 'K-R') THEN
    IF IFNULL(v_pub_fare,0) > 0 THEN
     SET pub_fare = IFNULL(v_pub_fare,0);
    ELSE
     SET pub_fare = 0;
    END IF;
  END IF;
  

   
  IF v_tkt_currency IS NOT NULL THEN
    SET tkt_currency = v_tkt_currency;
    SET ex_rate = IFNULL(v_ex_rate,1);
  END IF;   
  
  SET p_cursor = ' Error : Currency Cursor';
  
  OPEN  base_currency_cursor;
  FETCH base_currency_cursor INTO company_code,base_curr_key,base_curr_code,base_decimal;
  CLOSE base_currency_cursor;
  
  OPEN  exchange_rate_cursor;
  FETCH exchange_rate_cursor INTO exch_rate;
  CLOSE exchange_rate_cursor;
    
 IF tkt_currency = base_curr_code THEN
    SET ex_rate      = 1;  
 ELSE
  IF tkt_currency != base_curr_code THEN
   SET ex_rate      = exch_rate;
  ELSE
   SET ex_rate      = ex_rate;  
  END IF; 
 END IF;
 
	SET p_cursor = 'Error : ATF Cursor_cnt';

  OPEN  ATF_TAX_CHK_CURSOR;
  FETCH ATF_TAX_CHK_CURSOR INTO atf_check_val;
  CLOSE ATF_TAX_CHK_CURSOR;
  
 IF IFNULL(atf_check_val,'N') = 'Y' THEN
  OPEN  ATF_TAX_CURSOR;
  FETCH ATF_TAX_CURSOR INTO atf_amt;
  CLOSE ATF_TAX_CURSOR;
  
  SET atf_amt = IFNULL(CAST(atf_amt AS DECIMAL(18,2)),0);
  
 
  
  OPEN  ATF_TAX_CODE_CURSOR;
  FETCH ATF_TAX_CODE_CURSOR INTO atf_tax_code;
  CLOSE ATF_TAX_CODE_CURSOR;
end if;	  

	SET p_cursor = ' Error : Tax Cursor_cnt';
	
	
  SET taxa45=0;
  OPEN  ama_k_tax_cursor;
  FETCH ama_k_tax_cursor INTO tax1, taxa1, tax2, taxa2, tax3, taxa3, tax4, taxa4, tax5, taxa5, tax6,taxa6,
                              tax7, taxa7, tax8, taxa8, tax9, taxa9, tax10, taxa10, tax11, taxa11, tax12,taxa12,
                              tax13, taxa13,tax14, taxa14,tax15, taxa15,tax16, taxa16,tax17, taxa17,tax18, taxa18,
                              tax19, taxa19,tax20, taxa20;
  CLOSE ama_k_tax_cursor;
  SET tax_d := taxa1;
  SET tax_1 := taxa2;
  SET tax_2 := taxa3 + taxa4 + taxa5 + taxa6 + taxa7 + taxa8 + taxa9 + taxa10 + taxa11 + taxa12 + taxa13 + taxa14 + taxa15 + taxa16 + taxa17 + taxa18 + taxa19 + taxa20 + taxa45+IFNULL(atf_amt,0);
  
 
 
 

   SET tot_tax = tax_d + tax_1 + tax_2;
   
 
      SET DONE = FALSE; 

  

 

   
  set tkt_destination_tax=tot_tax;
  SET v_issue_mode := 'N'; 

  set tkt_destination_tax = cast(tkt_destination_tax as decimal(18,4));
  
  IF IFNULL(tkt_exch_doc_number,'X') <> 'X' THEN
    SET pub_fare := IFNULL(pub_fare,0) - IFNULL(tkt_destination_tax,0);
    SET v_issue_mode := 'R';
    IF pub_fare < 0 THEN
      SET pub_fare := 0;
    END IF;
  END IF;
  
  set pub_fare = cast(pub_fare as decimal(18,4));

  
  SET sale_exec = NULL; SET lpo = NULL; SET cust_code = NULL; SET addi_selling = NULL; SET addi_collection = 0; SET disc_amt = 0;
  OPEN  air_r_sales_exec_cursor;
  FETCH air_r_sales_exec_cursor INTO sale_exec;
  CLOSE air_r_sales_exec_cursor;
  
  IF sale_exec IS NULL THEN
     SET sale_exec = book_clerk;
  END IF;
  
  OPEN air_r_lpo_cursor;
  FETCH air_r_lpo_cursor INTO lpo;
  CLOSE air_r_lpo_cursor;
  
  OPEN  air_r_customer_cursor;
  FETCH air_r_customer_cursor INTO cust_code;
  CLOSE air_r_customer_cursor;
  
  SET cust_code = LPAD(cust_code,10,0);
 
  
  
  IF INSTR(cust_code,'/') <> 0 THEN
   IF lpo IS NULL THEN
    SET lpo = SUBSTR(cust_code,INSTR(cust_code,'/')+1);
   END IF;
    SET cust_code = SUBSTR(cust_code, 1, INSTR(cust_code, '/')-1);
 END IF;
   
     OPEN  air_r_sell_fare_cursor;
  FETCH air_r_sell_fare_cursor INTO addi_selling;
  
  CLOSE air_r_sell_fare_cursor;
 

 

  OPEN  air_r_coll_fare_cursor;
  FETCH air_r_coll_fare_cursor INTO addi_collection;
  CLOSE air_r_coll_fare_cursor;
  
  OPEN  air_r_EC_code_cursor;
  FETCH air_r_EC_code_cursor INTO ec_code;
  CLOSE air_r_EC_code_cursor;
  
  OPEN  air_r_rsn_code_cursor;
  FETCH air_r_rsn_code_cursor INTO rsn_code;
  CLOSE air_r_rsn_code_cursor;
  
  
IF   IFNULL(rsn_code,'AMAM') != 'AMAM' THEN
  OPEN  master_rsn_key_cursor;
  FETCH master_rsn_key_cursor INTO rsn_code_key;
  CLOSE master_rsn_key_cursor;
  
  
  
  IF IFNULL(rsn_code_key,0) = 0  then
 INSERT INTO `t_id_et_private_fare_acc_details` (`pfad_supplier_key`, `pfad_hap_name`,
`pfad_pcc`, `pfad_cms_key`, `pfad_airline_key`, `pfad_deal_code_type`, `pfad_deal_code`, `pfad_valid_from`,
`pfad_valid_to`, `pfad_status`, `pfad_category_based_on`, `pfad_allocation_type`, `pfad_class_type`, 
`profile_key`, `lock_key`, `active_status`) VALUES (10108, rsn_code, NULL, NULL, air_rls_key, 300, NULL, 
CURRENT_TIMESTAMP, '2033-08-01 12:59:09', 'A', 1, 1, 167, 4, 0, 'A');
  OPEN  master_rsn_key_cursor;
  FETCH master_rsn_key_cursor INTO rsn_code_key;
  CLOSE master_rsn_key_cursor;
END IF;
END IF;
  
  SET p_cursor = 'LOW FARE CURSOR';
 
  

  OPEN  air_r_low_fare_cursor;
  FETCH air_r_low_fare_cursor INTO low_fare;
  CLOSE air_r_low_fare_cursor;
  
  

  SET p_cursor = 'LOW FARE CURSOR 1';
  
  IF IFNULL(low_fare,'XXXX') ='XXXX' THEN 
  OPEN  air_r_low_fare_cursor_1;
  FETCH air_r_low_fare_cursor_1 INTO low_fare;
  CLOSE air_r_low_fare_cursor_1;

  
  END IF;
  
	
  SET p_cursor = 'HIGH FARE CURSOR';
  
  OPEN  air_r_high_fare_cursor;
  FETCH air_r_high_fare_cursor INTO high_fare;
  CLOSE air_r_high_fare_cursor;  
  
  
	
  SET p_cursor = 'HIGH FARE CURSOR 1';
  
  IF IFNULL(high_fare,'YYY') = 'YYY' THEN   
  OPEN  air_r_high_fare_cursor_1;
  FETCH air_r_high_fare_cursor_1 INTO high_fare;
  CLOSE air_r_high_fare_cursor_1; 
  
   
END IF;  
 
  
  

IF IFNULL(v_pub_fare,0) = 0 THEN
  IF IFNULL(addi_selling,0) != 0 THEN
    SET sell_fare = IFNULL(addi_selling,0);
 ELSE
 SET sell_fare = fare_comm_amtt;
  END IF;
else
 SET sell_fare = pub_fare;
END IF; 
 
    IF sell_fare > pub_fare THEN
   SET pub_fare = sell_fare;
  END IF;
  
   
  SET p_cursor = 'set low fare';
    SET low_fare= IFNULL(low_fare,sell_fare); 
	 SET high_fare= IFNULL(high_fare,pub_fare);
  
  
  SET DONE = FALSE; 
  OPEN  ama_fm_comm_cursor;
  FETCH ama_fm_comm_cursor INTO tkt_comm;
  IF DONE THEN
     SET tkt_comm=0;
  END IF;
  CLOSE ama_fm_comm_cursor;
  
  IF tkt_comm > 0 THEN
   SET tkt_comm_amt = CONVERT( ((IFNULL(sell_fare,0) * tkt_comm ) / 100 ), DECIMAL(18,4));
  END IF;
     SET p_cursor = 'customer check cursor'; 
  IF cust_code IS NOT NULL THEN
   OPEN customer_check_cursor;
   FETCH customer_check_cursor INTO cust_key,cust_code;
   CLOSE customer_check_cursor;
  END IF; 
 
  
  IF cust_key IS NULL THEN
  	

  
	
   
    SET corporate = NULL;
    SET lpo_date = NULL;
    SET lpo = NULL;
  ELSE

    IF IFNULL(addi_collection ,0) != 0 THEN
      SET cust_amt    = addi_collection+IFNULL(servicefees,0);
      SET disc_amt    = IFNULL(addi_selling, sell_fare) + IFNULL(tkt_destination_tax, 0) - addi_collection;
      IF disc_amt < 0 THEN
         SET cust_amt = IFNULL(addi_selling, sell_fare) + IFNULL(tkt_destination_tax, 0)+IFNULL(servicefees,0);
         SET disc_amt = 0 ;
      END IF;
    ELSE
      SET cust_amt    = IFNULL(pub_fare, 0) + IFNULL(tkt_destination_tax, 0)+IFNULL(servicefees,0);
    END IF;
	
	
	
    SET lpo = IFNULL(lpo,'PENDING');
    SET lpo_date = tkt_date;
    SET sett_mode_1   = '2';
    SET corporate = cust_code;
  END IF;
  SET cust_exempt_status = 'N';
  
  IF cust_key IS NOT NULL THEN
   OPEN  vat_exmpt_cust_cursor;
   FETCH vat_exmpt_cust_cursor INTO cust_exempt_status;
   CLOSE vat_exmpt_cust_cursor;
  END IF;
   
   SET prd_type = 'AIR';    
   
        OPEN LDGE_CRD_FLAG_CURSOR;
  FETCH LDGE_CRD_FLAG_CURSOR INTO ldge_crd_flag;
  CLOSE LDGE_CRD_FLAG_CURSOR;

  SET p_cursor_1 = 'FOP_DTLS_CHK_CURSOR';

   OPEN  FOP_DTLS_CHK_CURSOR;
   FETCH FOP_DTLS_CHK_CURSOR INTO rm_mod_status;
   CLOSE FOP_DTLS_CHK_CURSOR;
   
   OPEN product_key_cursor;
   FETCH product_key_cursor INTO tkt_prd_key;
   CLOSE product_key_cursor;
   
   OPEN dkt_pnr_exist_cursor;
   FETCH dkt_pnr_exist_cursor INTO dkt_num;
   CLOSE dkt_pnr_exist_cursor;
        
	
   
   IF dkt_num is NULL then
   
  SELECT  FN_DKT_NUM(pnr_number) into dkt_num;
	end if;

  SET p_cursor_1 = 'CURSOR_A';
 SET DONE = FALSE;
OPEN CURSOR_A;
CURSOR_A: LOOP
FETCH CURSOR_A INTO P_TKT_NUMBER,P_CONJ_NUMBER,p_air_Serial;
 IF DONE THEN
  LEAVE CURSOR_A;
 END IF;
 
    OPEN  emd_issue_mode_cursor;
    FETCH emd_issue_mode_cursor INTO emd_mode_flage;
    CLOSE emd_issue_mode_cursor;
	
	OPEN  air_seg_map_cursor;
    FETCH air_seg_map_cursor INTO air_seg_map;
    CLOSE air_seg_map_cursor;
	
 
 SET v_issue_mode := 'N';  
 IF IFNULL(tkt_exch_doc_number,'X') <> 'X' THEN
   SET v_issue_mode := 'R';
  ELSE
  IF IFNULL(emd_mode_flage,'N') = 'Y' THEN
    SET v_issue_mode := 'E';
  END IF;	
  END IF;
 
    OPEN  issue_mode_cursor;
	FETCH issue_mode_cursor INTO issue_mode_key;
	CLOSE issue_mode_cursor; 
 
 	 SET tkt_void_status = NULL;
    OPEN ticket_status_details;
    FETCH ticket_status_details INTO tkt_void_status;
    CLOSE ticket_status_details;
    
 IF IFNULL(tkt_void_status,'N') = 'N' THEN
 
  SET ticket_check_cursor_tkt = P_TKT_NUMBER;
  SET p_cursor = 'ticket_check_cursor';
  SET DONE = FALSE;     
  SET v_tmp_tfind = NULL;     
  
  OPEN ticket_check_cursor;
  FETCH ticket_check_cursor INTO v_tmp_tfind;
  IF DONE AND IFNULL(v_tmp_tfind,'N') = 'N'  THEN
    CLOSE ticket_check_cursor;
 
 
  	SET f_vat		= 0;
	SET x_vat		= 0;
	SET c_vat		= 0;
	SET d_vat		= 0;
	SET o_vat		= 0;
  	SET t_vat		= 0;
 
  IF dkt_num IS NULL THEN   
  SET p_cursor_1 = 'dkt_type_cursor';
   OPEN  dkt_type_cursor;
   FETCH dkt_type_cursor INTO dkt_type_value;
   CLOSE dkt_type_cursor;
   
   OPEN  ama_i_pax_dkt_cursor;
   FETCH ama_i_pax_dkt_cursor INTO tkt_dkt_pax;
   CLOSE ama_i_pax_dkt_cursor;
   
   OPEN  Docket_Type_Key;
   FETCH Docket_Type_Key INTO dkt_type_key;
   CLOSE Docket_Type_Key;
INSERT INTO ID_KK_TEST(COL1,COL2) VALUES ('1008',dkt_type_value); 
INSERT INTO ID_KK_TEST(COL1,COL2) VALUES ('1009',tkt_date); 
INSERT INTO ID_KK_TEST(COL1,COL2) VALUES ('1010',user_comp_profile_key); 	 
   
   SET p_cursor = ' Error : PRC_HUB_NUMBER_GEN'; 
     
   SELECT num_gen INTO dkt_num FROM t_id_num_gen_table WHERE doc_code = dkt_type_value AND MONTH(doc_gen_date) = MONTH(tkt_date)  AND YEAR(doc_gen_date) = YEAR(tkt_date) 
	AND profile_key = user_comp_profile_key AND flag=0 ORDER BY num_gen ASC LIMIT 1; 
    
    
   
   SET p_cursor = ' Error : PRC_HUB_NUMBER_GEN 1';  
    IF dkt_num IS NULL THEN
   SET p_cursor = ' Error : PRC_HUB_NUMBER_GEN 2';  
    
     CALL PRC_DOC_NUMBER_GEN_REPEAT(DATE(tkt_date),dkt_type_value,user_comp_profile_key);
     
   SET p_cursor = ' Error : PRC_HUB_NUMBER_GEN 3';  
     
      SELECT num_gen INTO dkt_num FROM t_id_num_gen_table WHERE doc_code = dkt_type_value AND MONTH(doc_gen_date) = MONTH(tkt_date) 
		AND profile_key = user_comp_profile_key AND flag=0 ORDER BY num_gen ASC LIMIT 1; 
     
    END IF; 
   
 
 
 
   
   IF cust_key IS NOT NULL AND P_TKT_NUMBER IS NOT NULL AND t_agent_key IS NOT NULL AND air_rls_key IS NOT NULL AND t_location_key IS NOT NULL  THEN     
    INSERT INTO t_id_tvl_docket_header (dkt_number,dkt_date,dkt_partner_key,dkt_branch_key,dkt_doc_type_key,dkt_status,
	 dkt_lead_pax_name,dkt_client_reference,dkt_transaction_reference,dkt_lpo_number,dkt_lpo_date,dkt_created_by,dkt_created_on,lock_key,profile_key) 
    VALUES(dkt_num,tkt_date,cust_key,t_location_key,dkt_type_key,'A',
	 tkt_dkt_pax,NULL,pnr_number,lpo,lpo_date,user_created_key,CURRENT_TIMESTAMP,0,user_profile_key) ;  
 	  UPDATE t_id_num_gen_table SET flag = 1 WHERE num_gen = dkt_num;
 	  
 	   select dkt_key into dkt_num_key from t_id_tvl_docket_header where dkt_number = dkt_num;
     
     INSERT INTO t_id_tvl_docket_header_summary (dkt_key,dkt_number,dkt_date,dkt_partner_key,dkt_branch_key,dkt_doc_type_key,dkt_status,dkt_lead_pax_name,
dkt_transaction_reference,dkt_lpo_number,dkt_lpo_date,dkt_air_count,dkt_htl_count,
dkt_car_count,dkt_misc_count,dkt_awb_count,dkt_account_status,
dkt_created_by,dkt_created_on,lock_key,profile_key)
VALUES(dkt_num_key,dkt_num,tkt_date,cust_key,t_location_key,dkt_type_key,'A',tkt_dkt_pax,pnr_number,lpo,lpo_date,0,0,0,0,0,'Not Collected',user_created_key,CURRENT_TIMESTAMP,0,user_profile_key) ; 
 	  
   ELSEIF  P_TKT_NUMBER IS NOT NULL AND t_agent_key IS NOT NULL AND air_rls_key IS NOT NULL AND t_location_key IS NOT NULL  THEN 
     OPEN walk_brnch_cust_cursor;
     FETCH walk_brnch_cust_cursor INTO walk_cust_key,walk_cust_code;
     CLOSE walk_brnch_cust_cursor;
     IF walk_cust_key IS NULL THEN
      OPEN walk_customer_cursor;
      FETCH walk_customer_cursor INTO walk_cust_key,walk_cust_code;
      CLOSE walk_customer_cursor;    
     END IF;
		 
    INSERT INTO t_id_tvl_docket_header (dkt_number,dkt_date,dkt_partner_key,dkt_branch_key,dkt_doc_type_key,dkt_status,
	 dkt_lead_pax_name,dkt_client_reference,dkt_transaction_reference,dkt_lpo_number,dkt_lpo_date,dkt_created_by,dkt_created_on,lock_key,profile_key) 
    VALUES(dkt_num,tkt_date,walk_cust_key,t_location_key,dkt_type_key,'A',
	 tkt_dkt_pax,NULL,pnr_number,lpo,lpo_date,user_created_key,CURRENT_TIMESTAMP,0,user_profile_key) ;   
 	  UPDATE t_id_num_gen_table SET flag = 1 WHERE num_gen = dkt_num;
 	  
 	   select dkt_key into dkt_num_key from t_id_tvl_docket_header where dkt_number = dkt_num;
     
     INSERT INTO t_id_tvl_docket_header_summary (dkt_key,dkt_number,dkt_date,dkt_partner_key,dkt_branch_key,dkt_doc_type_key,dkt_status,dkt_lead_pax_name,
dkt_transaction_reference,dkt_lpo_number,dkt_lpo_date,dkt_air_count,dkt_htl_count,
dkt_car_count,dkt_misc_count,dkt_awb_count,dkt_account_status,
dkt_created_by,dkt_created_on,lock_key,profile_key)
VALUES(dkt_num_key,dkt_num,tkt_date,walk_cust_key,t_location_key,dkt_type_key,'A',tkt_dkt_pax,pnr_number,lpo,lpo_date,0,0,0,0,0,'Not Collected',user_created_key,CURRENT_TIMESTAMP,0,user_profile_key) ; 
 	  
   END IF;
   END IF;
   OPEN dkt_head_sumry_cursor;
    FETCH dkt_head_sumry_cursor INTO dkt_sum_key,dkt_acc_status,dkt_air_cnt;
    CLOSE dkt_head_sumry_cursor; 
 
	SET emd_flag 		= NULL; 
	SET emd_tkt_ind 	= NULL; 
 
   OPEN ama_t_number_cursor_emd;
   FETCH ama_t_number_cursor_emd INTO emd_flag,emd_tkt_ind;
   CLOSE ama_t_number_cursor_emd;
   
   OPEN  emd_sector_exist;
   FETCH emd_sector_exist INTO emd_sector_flag;
   CLOSE emd_sector_exist;
   
  IF IFNULL(emd_flag, 'N') = 'Y'  THEN
       SET pub_fare = 0;
      OPEN ama_emd_fare_cursor;
      FETCH ama_emd_fare_cursor INTO pub_fare,tkt_currency,e_f_sec,e_t_sec,rc_cr_dt;
      CLOSE ama_emd_fare_cursor;
      
      IF pub_fare = 0 OR pub_fare IS NULL THEN
      	OPEN ama_emd_fare_cursor_u;
      	FETCH ama_emd_fare_cursor_u INTO pub_fare,tkt_currency,e_f_sec,e_t_sec,rc_cr_dt;
      	CLOSE ama_emd_fare_cursor_u;
      END IF;
      
      IF tkt_currency = base_curr_code THEN
    		SET ex_rate      = 1;  
 		ELSE
  			IF tkt_currency != base_curr_code THEN
   			SET ex_rate      = exch_rate;
  			ELSE
   			SET ex_rate      = ex_rate;  
  			END IF; 
 		END IF;
 
		SET p_cursor = ' Error : Tax Cursor';
            
      SET e_f_sec  = IFNULL(e_f_sec,'NBO');
      SET e_t_sec  = IFNULL(e_t_sec,'NBO');      
    SET sell_fare = pub_fare;
      SET tax_d = 0;
      SET tax_1 = 0;
      SET tax_2 = 0;
      
      OPEN k7_file_emd_cursor;
      FETCH k7_file_emd_cursor INTO v_tax_k7_code,v_tax_k7_amt;
      CLOSE k7_file_emd_cursor;
 
    IF sett_mode = '1' THEN
         SET cash_amount = pub_fare + tax_d;
		END IF; 
      IF sett_mode_1 = '2' THEN
         SET cust_amt = pub_fare + tax_d - IFNULL(tkt_crd_amt,0);
		END IF; 
      IF sett_mode_2 = '3' THEN
         SET tkt_card_amount = ifnull(ifnull(tkt_crd_amt,(pub_fare + tax_d)),0);
      END IF;

    END IF;   
 
    SET f_dest 		=  NULL;
    SET t_dest		=  NULL;
    SET o_dest		=  NULL;
    SET src_dest	=  NULL;
    SET final_dest	=  NULL;
	SET inter_domestic	=  NULL;
	SET v_locint_f	=  NULL;
	SET v_locint_t	=  NULL;
    
    SET DONE = FALSE;    
    
	SET p_cursor = ' Error : ticket_sectors_emd_route';
    IF IFNULL(emd_flag, 'N') = 'Y' AND IFNULL(emd_sector_flag,'N') = 'Y' THEN
     OPEN ticket_sectors_emd_route;
     tkt_sector_emd_route: LOOP
     FETCH ticket_sectors_emd_route INTO s_serial,f_dest,t_dest;
      IF src_dest IS NULL THEN
		SET src_dest = f_dest;
      END IF;
	 
     IF inter_domestic IS NULL OR inter_domestic = 'D' THEN
	  SET v_locint_f = fn_check_i_l(f_dest);
      SET v_locint_t = fn_check_i_l(t_dest);
	   IF v_locint_f = 'I' OR v_locint_t = 'I' THEN
	    SET inter_domestic = 'I';
	   ELSE
	    SET inter_domestic = 'D';
	   END IF;
	 END IF; 
     IF DONE THEN
      IF final_dest IS NULL THEN
       SET final_dest = t_dest;
      END IF;
      LEAVE tkt_sector_emd_route;
     END IF;   
     IF f_dest = o_dest OR o_dest IS NULL THEN
      SET final_dest = f_dest;
     END IF;
     SET o_dest = t_dest;
 
     SET DONE = FALSE;
     END LOOP tkt_sector_emd_route;
     CLOSE ticket_sectors_emd_route;
    ELSE
     OPEN ticket_sectors_route;
     tkt_sector_route: LOOP
     FETCH ticket_sectors_route INTO s_serial,f_dest,t_dest;
      IF src_dest IS NULL THEN
			SET src_dest = f_dest;
      END IF;
	 
     IF inter_domestic IS NULL OR inter_domestic = 'D' THEN
	  SET v_locint_f = fn_check_i_l(f_dest);
      SET v_locint_t = fn_check_i_l(t_dest);
	   IF v_locint_f = 'I' OR v_locint_t = 'I' THEN
	    SET inter_domestic = 'I';
	   ELSE
	    SET inter_domestic = 'D';
	   END IF;
	 END IF; 
     IF DONE THEN
      IF final_dest IS NULL THEN
       SET final_dest = t_dest;
      END IF;
      LEAVE tkt_sector_route;
     END IF;   
     IF f_dest = o_dest OR o_dest IS NULL THEN
      SET final_dest = t_dest;
     END IF;
     SET o_dest = t_dest;
     SET DONE = FALSE;
     END LOOP tkt_sector_route;
     CLOSE ticket_sectors_route;
    END IF;
	     IF src_dest IS NULL THEN
     SET src_dest = e_f_sec;
    END IF;
    IF final_dest IS NULL THEN
     SET final_dest = e_t_sec;
    END IF;
	  
  
	SET p_cursor = ' Error : final_sector_key_cursor';
    OPEN final_sector_key_cursor;
    FETCH final_sector_key_cursor INTO final_key;
    CLOSE final_sector_key_cursor;
    
   
	SET p_cursor = ' Error : src_sector_key_cursor';
    OPEN src_sector_key_cursor;
    FETCH src_sector_key_cursor INTO src_key;
    CLOSE src_sector_key_cursor;
    
  
			SET p_cursor = ' Error : final_sector_key_cursor';
			
    OPEN  DEFAULT_SEC_CURSOR;
    FETCH DEFAULT_SEC_CURSOR INTO def_sec;
    CLOSE DEFAULT_SEC_CURSOR;

  
   IF src_key IS NULL THEN
     SET src_key = '9000';
    END IF;
    IF final_key IS NULL THEN
     SET final_key = '9000';
    END IF;

  
 

	 
	  OPEN  ama_i_pax_cursor;
     FETCH ama_i_pax_cursor INTO tkt_pax;
     CLOSE ama_i_pax_cursor;  
	 
	 IF tkt_pax IS NOT NULL THEN
	  SET tkt_pax_name = tkt_pax;
	 END IF; 
	 OPEN  ama_i_pax_ty_cursor;
     FETCH ama_i_pax_ty_cursor INTO tkt_ty_pax;
     CLOSE ama_i_pax_ty_cursor;		 
	  
    IF INSTR(tkt_ty_pax,'CHD') > 0 THEN
       SET passenger_age_type = 'C';
       SET passenger_age_code = 'CHD';
    ELSEIF INSTR(tkt_ty_pax,'INF') > 0 THEN
       SET passenger_age_type = 'I';
       SET passenger_age_code = 'INF';
    ELSE
	     SET passenger_age_type = 'A'; 
	     SET passenger_age_code = 'ADT';
    END IF;
    
    OPEN pax_category_cursor;
  	 FETCH pax_category_cursor INTO passenger_age_key;
  	 CLOSE pax_category_cursor;
    
  
    
    OPEN  currency_key_cursor;
    FETCH currency_key_cursor INTO tkt_curr_key;
    CLOSE currency_key_cursor;
    
    OPEN  inter_domestic_key_cursor;
    FETCH inter_domestic_key_cursor INTO inter_domestic_key;
    CLOSE inter_domestic_key_cursor; 
    
    OPEN  service_type_key_cursor;
    FETCH service_type_key_cursor INTO service_type_key;
    CLOSE service_type_key_cursor;
    
 
   OPEN process_type_cursor;
   FETCH process_type_cursor INTO procss_typ_key;
   CLOSE process_type_cursor; 
    
    SELECT dkt_key INTO @dkt_key_no FROM t_id_tvl_docket_header WHERE dkt_number=DKT_NUM;  
    
  SET p_cursor    = CONCAT(P_TKT_NUMBER,t_agent_key,air_rls_key,t_location_key,src_key,final_key);
     



	 SET p_cursor = 'AIRLINE_PNR';    
   OPEN  AIRLINE_PNR_CURSOR;
   FETCH AIRLINE_PNR_CURSOR INTO aln_pnr_num;
   CLOSE AIRLINE_PNR_CURSOR; 
    
  
IF P_TKT_NUMBER IS NOT NULL AND t_agent_key IS NOT NULL AND air_rls_key IS NOT NULL AND t_location_key IS NOT NULL 
   AND src_key IS NOT NULL AND final_key IS NOT NULL THEN  
  
SET p_cursor    =   't_id_tvl_air_ticket_details';
 
 IF IFNULL(lcc_chk,'N')= 'Y' THEN
 SET   bsp_flag = 0;
else
 SET  bsp_flag = 1;
 END IF;
 
 SET ex_rate = CAST(ex_rate AS DECIMAL(20,4));
 
 INSERT INTO t_id_tvl_air_ticket_details (
  atd_docket_key,atd_product_key,atd_pnr_number,atd_ticket_number,atd_ticket_status,atd_lpo_number,atd_lpo_date,
  atd_date,atd_trans_type,atd_account_status,atd_pay_agnt_cms_key,atd_src_agnt_cms_key,atd_exchange_doc_no,
  atd_airline_key,atd_stock_airline_key,atd_location_key,atd_branch_key,atd_passenger_type,atd_passenger_name,
  atd_origin_key,atd_destination_key,atd_inter_domestic,atd_class_key,atd_refundable,atd_trans_currency,
  atd_ex_rate,atd_hap_id,atd_pcc,atd_queue_key,atd_xo_number,atd_deal_code,atd_issue_type,atd_booking_user_key,
  atd_issuing_user_key,atd_sales_executive_key,atd_provider_key,atd_stock_category,atd_pax_key,atd_bsp_flag,
  atd_reissue_tickets,atd_booking_pcc,atd_booking_date,atd_issuing_pcc,atd_remarks,lock_key,
  profile_key,created_by,created_on,atd_flex_1) 
 VALUES
  (@dkt_key_no,tkt_prd_key,aln_pnr_num,P_TKT_NUMBER,'S',ifnull(lpo,'pending'),ifnull(lpo_date,tkt_date),tkt_date,service_type_key,
    'N',t_agent_key,IFNULL(src_agent_key,t_agent_key),tkt_exch_doc_number,air_rls_key,NULL,
    t_location_key,t_location_key,passenger_age_key,tkt_pax_name,src_key,final_key,
    inter_domestic_key,tmp_class,'Y',tkt_curr_key,ex_rate,NULL,NULL,
    NULL,NULL,NULL,issue_mode_key,book_clerk_key,ticket_clerk_key,
    ticket_clerk_key,NULL,'B',1,bsp_flag,NULL,NULL,
    tkt_date,NULL,pr_remarks,0,user_profile_key,user_created_key,CURRENT_TIMESTAMP,'AMADEUS') ;
    
    SET tot_tax = 0;
    SET tot_tax = tax_d + tax_1 + tax_2;
        
    SELECT atd_key INTO @tkt_key FROM t_id_tvl_air_ticket_details  WHERE  atd_ticket_number = P_TKT_NUMBER AND atd_ticket_status = 'S'
    AND atd_airline_key = air_rls_key ORDER BY atd_key  LIMIT 1;
    
   
    IF P_TKT_KEY IS NULL THEN
      SET P_TKT_KEY = @tkt_key;
    ELSE
      SET P_TKT_KEY = CONCAT(P_TKT_KEY,':',@tkt_key);
    END IF;   
    
   IF IFNULL(emd_flag, 'N') = 'N'  THEN 
          
   SET p_cursor    =   'default_service_fee_cursor';    
   SET total_serv_amount = 0;   
	SET DONE = FALSE; 
      
   IF cust_code IS NOT NULL THEN
    OPEN cust_service_fee_check;
    FETCH cust_service_fee_check INTO cust_serv;
    CLOSE cust_service_fee_check;
   END IF; 
   
   IF IFNULL(cust_serv,'N') = 'Y' THEN  
    OPEN cust_service_fee_cursor;
    cust_service_fee_cursor: LOOP
    FETCH cust_service_fee_cursor INTO service_id,service_key,service_code,service_name,discount_amount,charge_mode,charge_on,charge_amount,charge_adult_amount,
	charge_child_amount,charge_infant_amount;
      IF DONE THEN
       LEAVE cust_service_fee_cursor;
      END IF; 
      
      IF charge_mode = 'Fixed' THEN
       SET serv_amount = charge_amount;
      ELSE
       IF passenger_age_type = 'A' THEN
        IF charge_on = 'BaseFare' THEN
         SET serv_amount = (pub_fare * charge_adult_amount)/100;
        ELSEIF charge_on = 'BaseFare+Tax' THEN 
		   SET serv_amount = (( pub_fare + tot_tax) * charge_adult_amount)/100;
        END IF;
       ELSE
        IF charge_on = 'BaseFare' THEN
         SET serv_amount = (pub_fare * charge_amount)/100;
        ELSEIF charge_on = 'BaseFare+Tax' THEN 
		   SET serv_amount = (( pub_fare + tot_tax) * charge_amount)/100;
        END IF;
       END IF;
      END IF;
      
	SET p_cursor    =   'cust_service_charges_details';       
      
       INSERT INTO t_id_tvl_service_charges_details (
  tsc_docket_key,tsc_product_key,tsc_ticket_key,tsc_service_charge_id,tsc_charge_key,tsc_parent_key,
  tsc_currency_key,tsc_ex_rate,tsc_base_amount,tsc_local_amount,tsc_type,tsc_payback_parner_key,tsc_payback_on,
  tsc_payback_percent,tsc_tax_code,tsc_tax_percentage,tsc_tax_on_amount,tsc_tax_on_component,lock_key,profile_key) 
 VALUES
  ( @dkt_key_no,tkt_prd_key,@tkt_key,service_id,service_key,NULL,
    '1',1,serv_amount,serv_amount,'C',NULL,0,
    NULL,NULL,NULL,NULL,NULL,0,user_profile_key) ;
     SET total_serv_amount = IFNULL(total_serv_amount,0) + IFNULL(serv_amount,0);
     
     SELECT tsc_key INTO @tkt_srv_key FROM t_id_tvl_service_charges_details WHERE tsc_ticket_key = @tkt_key AND 
     tsc_charge_key = service_key AND tsc_service_charge_id = service_id AND tsc_docket_key = @dkt_key_no  ORDER BY tsc_key DESC LIMIT 1;
     
     
     
    SET vat_applied_on = 'S';
         
    IF cust_exempt_status = 'Y' THEN
	  OPEN vat_exempt_cursor;
      FETCH vat_exempt_cursor INTO srv_vat_code,srv_vat_description,srv_inclusive_exclusive_code,srv_collection_code,srv_io_type_code,srv_appliedon_value,srv_vat_percentage;
      CLOSE vat_exempt_cursor;
    ELSE
      OPEN vat_master_cursor;
      FETCH vat_master_cursor INTO srv_vat_code,srv_vat_description,srv_inclusive_exclusive_code,srv_collection_code,srv_io_type_code,srv_appliedon_value,srv_vat_percentage;
      CLOSE vat_master_cursor;
    END IF;
         
    SET srv_vat_amt = (IFNULL(serv_amount,0) * srv_vat_percentage)/100;
    SET p_cursor    =   'cust_vat_srv_charges_details';         
   IF  srv_vat_amt <> 0 THEN                          
    INSERT INTO t_id_tvl_vat_charge_details (
	 tvc_docket_key,  tvc_product_key,  tvc_ticket_key,  tvc_parent_key,  tvc_vat_code,  tvc_appliedon_value,
	 tvc_inclusive_exclsive_code,  tvc_collection_code,  tvc_inoutput_code,  tvc_percentage,  tvc_amount,  tvc_on_amount,tvc_sys_amount,
	 lock_key,  profile_key ) 
	 VALUES(
	 @dkt_key_no,tkt_prd_key,@tkt_key,@tkt_srv_key,srv_vat_code,srv_appliedon_value,
	 srv_inclusive_exclusive_code,srv_collection_code,srv_io_type_code,srv_vat_percentage,srv_vat_amt,IFNULL(serv_amount,0),IFNULL(serv_amount,0),
	 0,user_profile_key) ;  
   END IF;     
     
    SET DONE = FALSE;
    END LOOP cust_service_fee_cursor;
   CLOSE cust_service_fee_cursor;  
   ELSE 
    OPEN default_service_fee_cursor;
    default_service_fee_cursor: LOOP
    FETCH default_service_fee_cursor INTO service_id,service_key,service_code,service_name,discount_amount,charge_mode,charge_on,charge_amount,charge_adult_amount,
      charge_child_amount,charge_infant_amount;
      IF DONE THEN
       LEAVE default_service_fee_cursor;
      END IF; 
      
      IF charge_mode = 'Fixed' THEN
       SET serv_amount = charge_amount;
      ELSE
       IF passenger_age_type = 'A' THEN
        IF charge_on = 'BaseFare' THEN
         SET serv_amount = (pub_fare * charge_adult_amount)/100;
        ELSEIF charge_on = 'BaseFare+Tax' THEN 
	 		SET serv_amount = (( pub_fare + tot_tax) * charge_adult_amount)/100;
        END IF;
       ELSE
        IF charge_on = 'BaseFare' THEN
         SET serv_amount = (pub_fare * charge_amount)/100;
        ELSEIF charge_on = 'BaseFare+Tax' THEN 
			SET serv_amount = (( pub_fare + tot_tax) * charge_amount)/100;
        END IF;
       END IF;
      END IF;
      
	SET p_cursor    =   'default_service_charges_details';       
   IF  serv_amount > 0 THEN   
       INSERT INTO t_id_tvl_service_charges_details (
  tsc_docket_key,tsc_product_key,tsc_ticket_key,tsc_service_charge_id,tsc_charge_key,tsc_parent_key,
  tsc_currency_key,tsc_ex_rate,tsc_base_amount,tsc_local_amount,tsc_type,tsc_payback_parner_key,tsc_payback_on,
  tsc_payback_percent,tsc_tax_code,tsc_tax_percentage,tsc_tax_on_amount,tsc_tax_on_component,lock_key,profile_key) 
 VALUES
  ( @dkt_key_no,tkt_prd_key,@tkt_key,service_id,service_key,NULL,
    '1',1,serv_amount,serv_amount,'C',NULL,0,
    NULL,NULL,NULL,NULL,NULL,0,user_profile_key) ;
     SET total_serv_amount = IFNULL(total_serv_amount,0) + IFNULL(serv_amount,0);
     
     SELECT tsc_key INTO @tkt_srv_key FROM t_id_tvl_service_charges_details WHERE tsc_ticket_key = @tkt_key AND 
     tsc_charge_key = service_key AND tsc_service_charge_id = service_id AND tsc_docket_key = @dkt_key_no  ORDER BY tsc_key DESC LIMIT 1;
     
    SET vat_applied_on = 'S';
         
         IF cust_exempt_status = 'Y' THEN
	       OPEN vat_exempt_cursor;
           FETCH vat_exempt_cursor INTO srv_vat_code,srv_vat_description,srv_inclusive_exclusive_code,srv_collection_code,srv_io_type_code,srv_appliedon_value,srv_vat_percentage;
          CLOSE vat_exempt_cursor;
         ELSE
          OPEN vat_master_cursor;
          FETCH vat_master_cursor INTO srv_vat_code,srv_vat_description,srv_inclusive_exclusive_code,srv_collection_code,srv_io_type_code,srv_appliedon_value,srv_vat_percentage;
          CLOSE vat_master_cursor;
         END IF;
         
         SET srv_vat_amt = (IFNULL(serv_amount,0) * srv_vat_percentage)/100;
         SET p_cursor    =   'default_vat_srv_charges_details';  
         IF  srv_vat_amt <> 0 THEN                          
         INSERT INTO t_id_tvl_vat_charge_details (
	 tvc_docket_key,  tvc_product_key,  tvc_ticket_key,  tvc_parent_key,  tvc_vat_code,  tvc_appliedon_value,
	 tvc_inclusive_exclsive_code,  tvc_collection_code,  tvc_inoutput_code,  tvc_percentage,  tvc_amount,  tvc_on_amount,tvc_sys_amount,
	 lock_key,  profile_key ) 
	 VALUES(
	 @dkt_key_no,tkt_prd_key,@tkt_key,@tkt_srv_key,srv_vat_code,srv_appliedon_value,
	 srv_inclusive_exclusive_code,srv_collection_code,srv_io_type_code,srv_vat_percentage,srv_vat_amt,IFNULL(serv_amount,0),IFNULL(serv_amount,0),
	 0,user_profile_key) ;  
         END IF;     
     END IF;
      SET DONE = FALSE;
    END LOOP default_service_fee_cursor;
   CLOSE default_service_fee_cursor;  
   END IF;
   
   
   
   SET DONE = FALSE;
   OPEN GDS_File_Service_Cursor;
   GDS_File_Service_Cursor: LOOP
   FETCH GDS_File_Service_Cursor INTO srv_fee_code,srv_file_code;
    IF DONE THEN
      LEAVE GDS_File_Service_Cursor;
    END IF; 
	
	
	
  
  
   
   SET p_cursor    =  'file_service_fee_cursor';   
   SET service_id = NULL;
   SET p_udid_code = NULL;
   SET file_serv_amount = 0;
   SET file_serv_amnt = NULL;
   SET p_udid_code = srv_file_code;
   
        OPEN  SRV_FEE_CHECK_CURSOR;
  	 FETCH SRV_FEE_CHECK_CURSOR INTO srv_fee_chk;
  	 CLOSE SRV_FEE_CHECK_CURSOR;
   
   IF IFNULL(srv_fee_chk,'N')= 'Y' THEN 
   
   IF p_udid_code IS NOT NULL THEN
   	  OPEN air_udid_values_21;
  	 FETCH air_udid_values_21 INTO file_serv_amnt;
  	 CLOSE air_udid_values_21;
  	
   END IF;
   SET file_serv_amnt=LTRIM(RTRIM(REPLACE(file_serv_amnt,'/','')));
   
   SET file_serv_amnt=LTRIM(RTRIM(REPLACE(file_serv_amnt,'-','')));
   SET file_serv_amount = CAST(file_serv_amnt AS DECIMAL(18,4));
   
  
  
   
   OPEN file_service_fee_cursor;
   FETCH file_service_fee_cursor INTO service_id,service_key,service_code,service_name,discount_amount,charge_mode,charge_on,charge_amount,charge_adult_amount,
      charge_child_amount,charge_infant_amount;
   CLOSE file_service_fee_cursor;
   
   if service_id IS NULL then
     SELECT ascd_serv_chg_id into service_id
  FROM `v_id_tvl_cms_air_srv_chrg_detail_rule` 
  WHERE ascd_serv_chg_name = srv_fee_code
  AND (tkt_date BETWEEN IFNULL(effective_from,CURRENT_DATE) AND IFNULL(effective_to,CURRENT_DATE)) 
  AND active_status = 'A';
  END IF;
   
   IF service_id IS NOT NULL AND file_serv_amount > 0 THEN
    
	 SET p_cursor    =   't_id_tvl_service_charges_details';       
      
      INSERT INTO t_id_tvl_service_charges_details (
  		tsc_docket_key,tsc_product_key,tsc_ticket_key,tsc_service_charge_id,tsc_charge_key,tsc_parent_key,
  		tsc_currency_key,tsc_ex_rate,tsc_base_amount,tsc_local_amount,tsc_type,tsc_payback_parner_key,tsc_payback_on,
  		tsc_payback_percent,tsc_tax_code,tsc_tax_percentage,tsc_tax_on_amount,tsc_tax_on_component,lock_key,profile_key) 
 		VALUES
  		( @dkt_key_no,tkt_prd_key,@tkt_key,service_id,service_key,NULL,
    	'1',1,file_serv_amount,file_serv_amount,'C',NULL,0,
    	NULL,NULL,NULL,NULL,NULL,0,user_profile_key) ;
     	SET total_serv_amount = IFNULL(total_serv_amount,0) + IFNULL(file_serv_amount,0);
     
     	SELECT tsc_key INTO @tkt_srv_key FROM t_id_tvl_service_charges_details WHERE tsc_ticket_key = @tkt_key AND 
     	tsc_charge_key = service_key AND tsc_service_charge_id = service_id AND tsc_docket_key = @dkt_key_no  ORDER BY tsc_key DESC LIMIT 1;
     
    	SET vat_applied_on = 'S';
         
      IF cust_exempt_status = 'Y' THEN
	  	 OPEN vat_exempt_cursor;
         FETCH vat_exempt_cursor INTO srv_vat_code,srv_vat_description,srv_inclusive_exclusive_code,srv_collection_code,srv_io_type_code,srv_appliedon_value,srv_vat_percentage;
         CLOSE vat_exempt_cursor;
      ELSE
         OPEN vat_master_cursor;
         FETCH vat_master_cursor INTO srv_vat_code,srv_vat_description,srv_inclusive_exclusive_code,srv_collection_code,srv_io_type_code,srv_appliedon_value,srv_vat_percentage;
         CLOSE vat_master_cursor;
       END IF;
         
       SET srv_vat_amt = (IFNULL(file_serv_amount,0) * srv_vat_percentage)/100;
           
       IF  srv_vat_amt <> 0 THEN                          
         INSERT INTO t_id_tvl_vat_charge_details (
	 		tvc_docket_key,  tvc_product_key,  tvc_ticket_key,  tvc_parent_key,  tvc_vat_code,  tvc_appliedon_value,
	 		tvc_inclusive_exclsive_code,  tvc_collection_code,  tvc_inoutput_code,  tvc_percentage,  tvc_amount,  tvc_on_amount,tvc_sys_amount,
	 		lock_key,  profile_key ) 
	 		VALUES(
			@dkt_key_no,tkt_prd_key,@tkt_key,@tkt_srv_key,srv_vat_code,srv_appliedon_value,
		   srv_inclusive_exclusive_code,srv_collection_code,srv_io_type_code,srv_vat_percentage,srv_vat_amt,IFNULL(file_serv_amount,0),
	 		IFNULL(file_serv_amount,0),0,user_profile_key) ;  
        END IF; 
END IF;		
   END IF;
    SET DONE = FALSE;
    END LOOP GDS_File_Service_Cursor;
   CLOSE GDS_File_Service_Cursor; 
   END IF;
        
   SET canc_amt = 0;
	SET comm_amt = 0;
        
     
       
    SET p_cursor    =   'Tax Cursor';
    SET tax_cnt = 0;
   
     WHILE tax_cnt <= 22 DO
      IF tax_cnt = 1 THEN
        SET tax_code = tax1; SET tax_amount = taxa1;
      ELSEIF tax_cnt = 2 THEN
        SET tax_code = tax2; SET tax_amount = taxa2;
      ELSEIF tax_cnt = 3 THEN
        SET tax_code = tax3; SET tax_amount = taxa3;
      ELSEIF tax_cnt = 4 THEN
        SET tax_code = tax4; SET tax_amount = taxa4;
      ELSEIF tax_cnt = 5 THEN
        SET tax_code = tax5; SET tax_amount = taxa5;
      ELSEIF tax_cnt = 6 THEN
        SET tax_code = tax6; SET tax_amount = taxa6;
      ELSEIF tax_cnt = 7 THEN
        SET tax_code = tax7; SET tax_amount = taxa7;
      ELSEIF tax_cnt = 8 THEN
        SET tax_code = tax8; SET tax_amount = taxa8;
      ELSEIF tax_cnt = 9 THEN
        SET tax_code = tax9; SET tax_amount = taxa9;
      ELSEIF tax_cnt = 10 THEN
        SET tax_code = tax10; SET tax_amount = taxa10;
      ELSEIF tax_cnt = 11 THEN
        SET tax_code = tax11; SET tax_amount = taxa11;
      ELSEIF tax_cnt = 12 THEN
        SET tax_code = tax12; SET tax_amount = taxa12;
      ELSEIF tax_cnt = 13 THEN
        SET tax_code = tax13; SET tax_amount = taxa13;
      ELSEIF tax_cnt = 14 THEN
        SET tax_code = tax14; SET tax_amount = taxa14;
      ELSEIF tax_cnt = 15 THEN
        SET tax_code = tax15; SET tax_amount = taxa15;
      ELSEIF tax_cnt = 16 THEN
        SET tax_code = tax16; SET tax_amount = taxa16;
      ELSEIF tax_cnt = 17 THEN
        SET tax_code = tax17; SET tax_amount = taxa17;
      ELSEIF tax_cnt = 18 THEN
        SET tax_code = tax18; SET tax_amount = taxa18;
      ELSEIF tax_cnt = 19 THEN
        SET tax_code = tax19; SET tax_amount = taxa19;
      ELSEIF tax_cnt = 20 THEN
        SET tax_code = tax20; SET tax_amount = taxa20;
      ELSEIF tax_cnt = 21 THEN
        SET tax_code = tax45; SET tax_amount = taxa45; 
      ELSEIF tax_cnt = 22 THEN
        SET tax_code = atf_tax_code; SET tax_amount = atf_amt;
      END IF;
	  
	  
     
      IF IFNULL(tax_code,'ZZZ') <> 'ZZZ' THEN
         SET tax_find = NULL;              
         OPEN tax_code_key;
         FETCH tax_code_key INTO tax_key;
         CLOSE tax_code_key; 
         SET p_cursor    =   't_id_tvl_tax_master';
         IF IFNULL(tax_key,'XZZ') = 'XZZ'  THEN
          INSERT INTO t_id_tvl_tax_master(ttax_code,ttax_description,ttax_type,ttax_category,ttax_remarks,ttax_created_by,active_status,active_from,lock_key,profile_key)
	  VALUES (tax_code,tax_code,141,144,'AMADEUS',0,'A',CURRENT_DATE,1,user_profile_key);               
          OPEN tax_code_key;
          FETCH tax_code_key INTO tax_key;
          CLOSE tax_code_key;                                
         END IF;  
         
         SET p_cursor    =   't_id_tvl_air_taxes';
         
         IF IFNULL(tax_key,'XZZ') <> 'XZZ' THEN
         INSERT INTO t_id_tvl_air_taxes(at_docket_key,at_product_key,at_ticket_key,at_code,at_amount,at_amount_new,lock_key,profile_key)
         VALUES( @dkt_key_no,tkt_prd_key,@tkt_key,tax_key, IFNULL(tax_amount,0),IFNULL(tax_amount,0),0,user_profile_key);
         
         SELECT MAX(at_key) INTO @tkt_tax_key FROM t_id_tvl_air_taxes 
         WHERE AT_TICKET_KEY = @tkt_key AND at_docket_key = @dkt_key_no  
         ORDER BY at_key DESC;          
         
        
         SET DONE = FALSE;
         SET vat_applied_on = 'T';
		 SET t_vat = 0;
         SET p_cursor    =   'tax_cust_exempt_status';
       IF cust_exempt_status = 'Y' THEN
          OPEN vat_exempt_cursor;
	  vat_exempt_cursor: LOOP
          FETCH vat_exempt_cursor INTO tax_vat_code,tax_vat_description,tax_inclusive_exclusive_code,tax_collection_code,tax_io_type_code,tax_appliedon_value,tax_vat_percentage;	
	  IF DONE THEN
	     LEAVE vat_exempt_cursor;
	  END IF;
      IF t_vat <=1 THEN
        SET tax_vat_amt = (IFNULL(tax_amount,0) * tax_vat_percentage)/100;
        SET t_vat = t_vat + 1;  
        SET p_cursor    =   't_id_tvl_vat_charge_details';         
           
       IF  tax_vat_amt <> 0 THEN                          
           INSERT INTO t_id_tvl_vat_charge_details (
	   tvc_docket_key,  tvc_product_key,  tvc_ticket_key,  tvc_parent_key,  tvc_vat_code,  tvc_appliedon_value,
	   tvc_inclusive_exclsive_code,  tvc_collection_code,  tvc_inoutput_code,  tvc_percentage,  tvc_amount,  tvc_on_amount,tvc_sys_amount,
	   lock_key,  profile_key ) 
	   VALUES(
	   @dkt_key_no,tkt_prd_key,@tkt_key,@tkt_tax_key,tax_vat_code,tax_appliedon_value,
	   tax_inclusive_exclusive_code,tax_collection_code,tax_io_type_code,tax_vat_percentage,tax_vat_amt,IFNULL(tax_amount,0),IFNULL(tax_amount,0),
	   0,user_profile_key) ;  
          END IF;
	   END IF;	  
	  SET DONE = FALSE; 
          END LOOP vat_exempt_cursor;
	  CLOSE vat_exempt_cursor;
       ELSE
          OPEN vat_master_cursor;
	  vat_master_cursor: LOOP
          FETCH vat_master_cursor INTO tax_vat_code,tax_vat_description,tax_inclusive_exclusive_code,tax_collection_code,tax_io_type_code,tax_appliedon_value,tax_vat_percentage;	
	  IF DONE THEN
	     LEAVE vat_master_cursor;
	  END IF;
		IF t_vat <=1 THEN
          SET tax_vat_amt = (IFNULL(tax_amount,0) * tax_vat_percentage)/100;
          SET t_vat = t_vat + 1;  
          SET p_cursor    =   't_id_tvl_vat_charge_details';         
          IF  tax_vat_amt <> 0 THEN                          
           INSERT INTO t_id_tvl_vat_charge_details (
	   tvc_docket_key,  tvc_product_key,  tvc_ticket_key,  tvc_parent_key,  tvc_vat_code,  tvc_appliedon_value,
	   tvc_inclusive_exclsive_code,  tvc_collection_code,  tvc_inoutput_code,  tvc_percentage,  tvc_amount,  tvc_on_amount,tvc_sys_amount,
	   lock_key,  profile_key ) 
	   VALUES(
	   @dkt_key_no,tkt_prd_key,@tkt_key,@tkt_tax_key,tax_vat_code,tax_appliedon_value,
	   tax_inclusive_exclusive_code,tax_collection_code,tax_io_type_code,tax_vat_percentage,tax_vat_amt,IFNULL(tax_amount,0),IFNULL(tax_amount,0),
	   0,user_profile_key) ;  
          END IF;
		 END IF; 
	  SET DONE = FALSE; 
          END LOOP vat_master_cursor;
	  CLOSE vat_master_cursor;
         END IF;         
        END IF;
  
      END IF;
            
      SET tax_code	= NULL;
      SET tax_amount	= 0;
      SET tax_key	= NULL;  
      SET tax_cnt 	= tax_cnt + 1;   
     
     END WHILE;
     
      IF procss_typ = 'UCCF' THEN   
         SET tax_code = v_tax_k7_code; SET tax_amount = IFNULL(v_k7_tax_amt,0);
         IF tax_code IS NOT NULL AND IFNULL(tax_amount,0) <> 0 THEN 
           OPEN tax_code_key;
           FETCH tax_code_key INTO tax_key;
           CLOSE tax_code_key; 
         
           INSERT INTO t_id_tvl_air_taxes( at_docket_key,at_product_key,at_TICKET_key, at_CODE, at_AMOUNT,at_AMOUNT_NEW, LOCK_key,PROFILE_key)
		     VALUES( @dkt_key_no,tkt_prd_key,@tkt_key,tax_key, IFNULL(tax_amount,0),IFNULL(tax_amount,0),1,user_profile_key);
         END IF;
	    END IF;
     

	

     SET collect_amount = CONVERT((IFNULL(tkt_card_amount,0) + IFNULL(cust_amt,0) + IFNULL(cash_amount,0) + IFNULL(total_serv_amount,0) +
	IFNULL(@tot_vat_amt,0)) , DECIMAL(18,4));

   IF IFNULL(ldge_crd_flag,'N') = 'Y' THEN
	  set l_card_key = 1;
END IF;

IF procss_typ = 'UCCF' THEN 
    SET collect_amount = CONVERT((IFNULL(collect_amount,0) - IFNULL(cust_amt,0)), DECIMAL(18,4));
 END IF;
	
	
  
    SET p_cursor    =   't_id_tvl_fare_details_air';   
    
    SET pub_fare = ROUND(pub_fare,4);
    SET sell_fare = ROUND(sell_fare,4);
 

  
   
    INSERT INTO t_id_tvl_fare_details (
	tfd_docket_key,tfd_product_key,tfd_ticket_key,tfd_process_type,tfd_own_lodge_card_key,tfd_base_fare,tfd_deal_fare,tfd_total_tax,tfd_total_service_charge,
	tfd_comm_key1,tfd_comm_percent_1,tfd_comm_on_1,tfd_comm_amount_1,tfd_comm_key2,tfd_comm_percent_2,tfd_comm_on_2,tfd_comm_amount_2,
	tfd_disc_key1,tfd_disc_percent_1,tfd_disc_on_1,tfd_disc_amount_1,tfd_disc_percent_2,tfd_disc_on_2,tfd_disc_amount_2,
	tfd_cash_disc,tfd_settle_amount,tfd_tour_code,tfd_nego_fare,tfd_priv_fare,
	tfd_prom_fare,tfd_trans_currency_key,tfd_ex_rate,tfd_deal_code,tfd_incentive_paid,
	tfd_high_fare,tfd_low_fare,tfd_reason_code,tfd_base_fare_new,tfd_deal_fare_new,
	tfd_comm_percent_1_new,tfd_comm_on_1_new,tfd_comm_amount_1_new,
	tfd_comm_percent_2_new,tfd_comm_on_2_new,tfd_comm_amount_2_new,
	lock_key,profile_key) 
	VALUES
	(
    @dkt_key_no,tkt_prd_key,@tkt_key,procss_typ_key,l_card_key,pub_fare,sell_fare,ROUND(tot_tax,4),total_serv_amount,
    0,tkt_comm,sell_fare,tkt_comm_amt,0,0,
    sell_fare,0,0,0,pub_fare,0,
    0,pub_fare,0,
    0,ROUND(collect_amount,4),NULL,0,0,0,
    tkt_curr_key,ex_rate,rsn_code_key,0,high_fare,
    low_fare,ec_code,pub_fare,sell_fare,
    tkt_comm,sell_fare,tkt_comm_amt,
    0,sell_fare,0,
    0,user_profile_key) ; 
    
     SELECT   tfd_key INTO @tkt_fare_key FROM t_id_tvl_fare_details 
     WHERE tfd_docket_key = @dkt_key_no AND tfd_product_key = tkt_prd_key AND tfd_ticket_key = @tkt_key ORDER BY tfd_key  LIMIT 1; 
    
	 
    SET DONE = FALSE; 
    SET p_cursor    =   'vat_cursor_main';
  
   IF cust_exempt_status = 'Y' THEN
   SET p_cursor    =   'vat_exempt_cursor_main';
     OPEN vat_exempt_cursor_main;
      vat_exempt_cursor_main: LOOP
     FETCH vat_exempt_cursor_main INTO v_applied_on_code,v_applied_on_value,v_inter_domestic_key,v_product_type,v_package_normal_key,
	v_output_input_type_key,v_percentage,v_applicable_on,v_applied_on_key,v_vat_code,v_vat_description,v_inclusive_exclusive_key,v_inclusive_exclusive_code,
	v_inclusive_exclusive_value,v_collection_type_key,v_collection_code,v_io_type_code,v_io_type_value;
      IF DONE THEN
       LEAVE vat_exempt_cursor_main;
      END IF;   
	  
	
 
      
	 IF v_applied_on_code = 'F' AND f_vat<=1 THEN 
		SET vat_on_amt = sell_fare;
		SET vat_amt = (sell_fare * v_percentage)/100;
		SET f_vat = f_vat + 1;
     ELSEIF v_applied_on_code = 'X' AND x_vat<=1  THEN
		SET vat_on_amt = canc_amt;
		SET vat_amt = (canc_amt * v_percentage)/100;
		SET x_vat = x_vat + 1;
     ELSEIF v_applied_on_code = 'C' AND c_vat<1  THEN
		SET vat_on_amt = comm_amt;
		SET vat_amt = (comm_amt * v_percentage)/100;
		SET c_vat = c_vat + 1;
     ELSEIF v_applied_on_code = 'D' AND d_vat<1  THEN
		SET vat_on_amt = disc_amt;
		SET vat_amt = (disc_amt * v_percentage)/100;
		SET d_vat = d_vat + 1;
     END IF;
	 
	
	
	
      
      IF vat_amt <> 0 THEN 
       INSERT INTO t_id_tvl_vat_charge_details (
        tvc_docket_key,  tvc_product_key,  tvc_ticket_key,  tvc_parent_key,  tvc_vat_code,  tvc_appliedon_value,
        tvc_inclusive_exclsive_code,  tvc_collection_code,  tvc_inoutput_code,  tvc_percentage,  tvc_amount,  tvc_on_amount,tvc_sys_amount,
        lock_key,  profile_key ) 
       VALUES
        (@dkt_key_no,tkt_prd_key,@tkt_key,@tkt_fare_key,v_vat_code,v_applied_on_value,
	v_inclusive_exclusive_code,v_collection_code,v_io_type_code,v_percentage,vat_amt,vat_on_amt,vat_amt,
	0,user_profile_key) ;
	END IF;
      
      	SET vat_on_amt = 0;
	SET vat_amt = 0;
     END LOOP vat_exempt_cursor_main;
     CLOSE vat_exempt_cursor_main;
   ELSE
	
	
   SET p_cursor    =   'vat_master_cursor_main';
     OPEN vat_master_cursor_main;
      vat_master_cursor_main: LOOP
     FETCH vat_master_cursor_main INTO v_applied_on_code,v_applied_on_value,v_inter_domestic_key,v_product_type,v_package_normal_key,
	v_output_input_type_key,v_percentage,v_applicable_on,v_applied_on_key,v_vat_code,v_vat_description,v_inclusive_exclusive_key,v_inclusive_exclusive_code,
	v_inclusive_exclusive_value,v_collection_type_key,v_collection_code,v_io_type_code,v_io_type_value;
      IF DONE THEN
       LEAVE vat_master_cursor_main;
      END IF;
	
	  
      IF v_applied_on_code = 'F' AND f_vat<=1 THEN 
      SET vat_on_amt = sell_fare;
		SET vat_amt = (sell_fare * v_percentage)/100;
		SET f_vat = f_vat + 1;
     ELSEIF v_applied_on_code = 'X' AND x_vat<=1  THEN
		SET vat_on_amt = canc_amt;
		SET vat_amt = (canc_amt * v_percentage)/100;
		SET x_vat = x_vat + 1;
     ELSEIF v_applied_on_code = 'C' AND c_vat<1  THEN
		SET vat_on_amt = comm_amt;
		SET vat_amt = (comm_amt * v_percentage)/100;
		SET c_vat = c_vat + 1;
     ELSEIF v_applied_on_code = 'D' AND d_vat<1  THEN
		SET vat_on_amt = disc_amt;
		SET vat_amt = (disc_amt * v_percentage)/100;
		SET d_vat = d_vat + 1;
     END IF;
	 
	 
      IF vat_amt <> 0 THEN 
       INSERT INTO t_id_tvl_vat_charge_details (
        tvc_docket_key,  tvc_product_key,  tvc_ticket_key,  tvc_parent_key,  tvc_vat_code,  tvc_appliedon_value,
        tvc_inclusive_exclsive_code,  tvc_collection_code,  tvc_inoutput_code,  tvc_percentage,  tvc_amount,  tvc_on_amount,tvc_sys_amount,
        lock_key,  profile_key ) 
       VALUES
        (@dkt_key_no,tkt_prd_key,@tkt_key,@tkt_fare_key,v_vat_code,v_applied_on_value,
	v_inclusive_exclusive_code,v_collection_code,v_io_type_code,v_percentage,vat_amt,vat_on_amt,vat_amt,
	0,user_profile_key) ;
	END IF;
      
      	SET vat_on_amt = 0;
	SET vat_amt = 0;
     END LOOP vat_master_cursor_main;
     CLOSE vat_master_cursor_main;
   END IF;
 
  SET DONE = FALSE;
  SET p_cursor    =   't_id_tvl_service_charges_details'; 
 SET tot_vat_amt = 0 ;
 IF v_tax_k7_amt > 0 THEN
 
  SELECT SUM(IFNULL(tvc_amount,0)) INTO @v_k7_srv_amt FROM t_id_tvl_vat_charge_details 
  WHERE tvc_appliedon_value='Service Fee' AND  tvc_ticket_key=@TKT_KEY AND tvc_docket_key =  @dkt_key_no 
  AND tvc_ticket_key = tkt_prd_key;
 
  INSERT INTO t_id_tvl_service_charges_details (
  tsc_docket_key,tsc_product_key,tsc_ticket_key,tsc_service_charge_id,tsc_charge_key,tsc_parent_key,
  tsc_currency_key,tsc_ex_rate,tsc_base_amount,tsc_local_amount,tsc_type,tsc_payback_parner_key,tsc_payback_on,
  tsc_payback_percent,tsc_tax_code,tsc_tax_percentage,tsc_tax_on_amount,tsc_tax_on_component,lock_key,profile_key) 
  VALUES
  ( @dkt_key_no,tkt_prd_key,@tkt_key,NULL,NULL,NULL,
    '1',1,IFNULL(v_tax_k7_amt,0) + IFNULL(v_k7_srv_amt,0) ,IFNULL(v_tax_k7_amt,0) + IFNULL(v_k7_srv_amt,0),'C',NULL,0,
    NULL,NULL,NULL,NULL,NULL,0,user_profile_key) ;
   
  INSERT INTO t_id_tvl_service_charges_details (
  tsc_docket_key,tsc_product_key,tsc_ticket_key,tsc_service_charge_id,tsc_charge_key,tsc_parent_key,
  tsc_currency_key,tsc_ex_rate,tsc_base_amount,tsc_local_amount,tsc_type,tsc_payback_parner_key,tsc_payback_on,
  tsc_payback_percent,tsc_tax_code,tsc_tax_percentage,tsc_tax_on_amount,tsc_tax_on_component,lock_key,profile_key) 
  VALUES
  ( @dkt_key_no,tkt_prd_key,@tkt_key,NULL,NULL,NULL,
    '1',1,IFNULL(v_tax_k7_amt,0),IFNULL(v_tax_k7_amt,0),'S',NULL,0,
    NULL,NULL,NULL,NULL,NULL,0,user_profile_key) ; 
 SET tot_vat_amt = IFNULL(v_tax_k7_amt,0) + IFNULL(v_k7_srv_amt,0);
 ELSE
 
 OPEN vat_in_out_cursor;
 vat_in_out_cursor : LOOP 
 FETCH vat_in_out_cursor INTO vat_in_out,vat_tot_amount;
  IF DONE THEN
    LEAVE vat_in_out_cursor;
  END IF;
 INSERT INTO `t_id_tvl_service_charges_details` (
  tsc_docket_key,tsc_product_key,tsc_ticket_key,tsc_service_charge_id,tsc_charge_key,tsc_parent_key,
  tsc_currency_key,tsc_ex_rate,tsc_base_amount,tsc_local_amount,tsc_type,tsc_payback_parner_key,tsc_payback_on,
  tsc_payback_percent,tsc_tax_code,tsc_tax_percentage,tsc_tax_on_amount,tsc_tax_on_component,lock_key,profile_key) 
 VALUES
  ( @dkt_key_no,tkt_prd_key,@tkt_key,NULL,NULL,NULL,
    '1',1,vat_tot_amount,vat_tot_amount,(CASE vat_in_out WHEN 'I' THEN 'C' ELSE 'S' END),NULL,0,
    NULL,NULL,NULL,NULL,NULL,0,user_profile_key) ;
    SET DONE = FALSE;
    END LOOP vat_in_out_cursor;
    CLOSE vat_in_out_cursor;
  END IF;  
     SELECT SUM(IFNULL(tvc_amount,0)) INTO @tot_vat_amt FROM t_id_tvl_vat_charge_details 
     WHERE tvc_docket_key = @dkt_key_no AND tvc_ticket_key = @tkt_key AND tvc_product_key = tkt_prd_key AND tvc_collection_code = 'C';
     
    SET collect_amount = CONVERT((IFNULL(tkt_card_amount,0) + IFNULL(cust_amt,0) + IFNULL(cash_amount,0) + IFNULL(total_serv_amount,0) + IFNULL(@tot_vat_amt,0)) , DECIMAL(18,4));
	
	IF procss_typ = 'UCCF' THEN 
    SET collect_amount = CONVERT((IFNULL(collect_amount,0) - IFNULL(cust_amt,0)), DECIMAL(18,4));
 END IF;
         
    UPDATE t_id_tvl_fare_details SET tfd_settle_amount = collect_amount,tfd_total_service_charge = IFNULL(total_serv_amount,0)
     WHERE tfd_docket_key = @dkt_key_no AND tfd_product_key = tkt_prd_key AND tfd_ticket_key = @tkt_key;
  
    	
     SET p_cursor    =   't_id_tvl_fop_details'; 
     SET trans_amount = 0;
     SET fd_local_amt = 0;
     SET FOP_VALUE = NULL;
     SET fop_settle_key = NULL;
	
	
   
 

   
   
    IF  IFNULL(cash_amount,0) != 0 THEN
      SET trans_amount = IFNULL(cash_amount,0) + IFNULL(total_serv_amount,0) + IFNULL(@tot_vat_amt,0);
	  SET cash_trans_amount = trans_amount;
      SET fd_local_amt  = trans_amount * ex_rate;
      SET FOP_VALUE = 'CASH';
      OPEN fop_settlement_cursor;
      FETCH fop_settlement_cursor INTO fop_settle_key;
      CLOSE fop_settlement_cursor;
  
  
   
 
		
 
 IF trans_amount !=0 then
   INSERT INTO t_id_tvl_fop_details (
	fopd_docket_key,fopd_produt_key,fopd_ticket_key,fopd_settle_key,fopd_currency_key,fopd_ex_rate,fopd_trans_amount,
	fopd_local_amount,fopd_remarks,fopd_voucher_key,lock_key,profile_key) 
       VALUES  (
        @dkt_key_no,tkt_prd_key,@tkt_key,fop_settle_key,tkt_curr_key,ex_rate,ROUND(trans_amount,4),
        ROUND(fd_local_amt,4),NULL,0,0,user_profile_key) ;   
   
         SELECT fopd_key INTO @tkt_fopd_key FROM `t_id_tvl_fop_details` WHERE fopd_ticket_key = @tkt_key AND
    fopd_produt_key = tkt_prd_key AND fopd_docket_key = @dkt_key_no AND fopd_settle_key = 1;
      
      SET  definition_code = 'fbbranch';
      OPEN fop_more_details_cursor;
      FETCH fop_more_details_cursor INTO fop_def_key;
      CLOSE fop_more_details_cursor;    
    
      INSERT INTO t_id_tvl_fop_more_details(fopmd_fopd_key,fopmd_order,fopmd_definition_key,fopmd_value_key,fopmd_value_code,fopmd_value_description,fopmd_value_date,lock_key,profile_key)
  VALUES(@tkt_fopd_key,1,fop_def_key,t_location_key,pcc_loc,NULL,NULL,0,user_profile_key);        
        
     END IF;
   END IF; 


 
 
 
  
 
  set tkt_destination_tax=tot_tax;
  
 
  
 
  
IF  IFNULL(rm_mod_status,'N') = 'Y' THEN 
SET p_cursor = 'FOP_DTLS_CURSOR';
 SET DONE =FALSE;
   OPEN  FOP_DTLS_CURSOR;
      FOP_DTLS_CURSOR: LOOP
   FETCH FOP_DTLS_CURSOR INTO tkt_card_find,FOP_VALUE,tkt_crd_amt,tkt_card_type,tkt_card_number,APP_NUM,expiry_date;
IF DONE THEN
LEAVE  FOP_DTLS_CURSOR;
END IF;

SET  tkt_card_amount = tkt_crd_amt;
 SET p_cursor = 'card_type_cursor';
	IF tkt_card_find > 0 THEN
     OPEN card_type_cursor;
     FETCH card_type_cursor INTO card_key,card_type,card_name,card_an_key,card_an_code,card_an_name,card_srv_fee,card_lodge_status,card_lodge_num,fop_cust_link_code;
     CLOSE card_type_cursor;     
END IF;

   IF card_an_code IN ('Airline Card') THEN
     SET procss_typ = 'UCCF';
     SET prcss_code = 'U';
    ELSE
     SET procss_typ = 'NORMAL'; 
	  SET prcss_code = 'N';  
    END IF;
	
	 IF tkt_card_find = 0 OR LTRIM(RTRIM(card_type)) IS NULL  THEN
    SET tkt_card_type   = NULL;
    SET tkt_card_number = NULL;
    SET card_exp_dt = NULL;
	  ELSE
    
   
    SET lpo = IFNULL(lpo,'PENDING');
    SET lpo_date = tkt_date;
    SET sett_mode_2      = '3';
    SET card_exp_dt = STR_TO_DATE(CONCAT('01',expiry_date), "%d%c%y");
  END IF;

	
	 	
	
   SET trans_amount = 0;
     SET fd_local_amt = 0;
     SET FOP_VALUE = NULL;
     SET fop_settle_key = NULL;
	
	 
	 
     
     IF IFNULL(tkt_card_amount,0) != 0  THEN
       SET trans_amount = IFNULL(tkt_card_amount,0);
       SET fd_local_amt  = trans_amount * ex_rate;
	   SET crd_trans_amount = trans_amount;
	   IF IFNULL(procss_typ,'XXX')= 'UCCF' THEN 
	   SET FOP_VALUE = 'UCCF';
	   ELSE	   
       SET FOP_VALUE = 'CARD';
	   END IF;
       
 SET p_cursor = 'fop_settlement_cursor';     
       OPEN fop_settlement_cursor;
       FETCH fop_settlement_cursor INTO fop_settle_key;
       CLOSE fop_settlement_cursor;
     
      
	   

     IF trans_amount !=0 then
       INSERT INTO t_id_tvl_fop_details (
	 fopd_docket_key,fopd_produt_key,fopd_ticket_key,fopd_settle_key,fopd_currency_key,fopd_ex_rate,fopd_trans_amount,
	 fopd_local_amount,fopd_remarks,fopd_voucher_key,fopd_customer_key,lock_key,profile_key) 
       VALUES  (
         @dkt_key_no,tkt_prd_key,@tkt_key,fop_settle_key,tkt_curr_key,ex_rate,ROUND(trans_amount,4),
         ROUND(fd_local_amt,4),NULL,0,fop_cust_link_code,0,user_profile_key) ;     
	 
 SET p_cursor = 'after loading';
         SELECT fopd_key INTO @tkt_fopd_key FROM `t_id_tvl_fop_details` WHERE fopd_ticket_key = @tkt_key AND
    fopd_produt_key = tkt_prd_key AND fopd_docket_key = @dkt_key_no AND fopd_settle_key = fop_settle_key order by fopd_key desc limit 1;
      
        IF IFNULL(procss_typ,'XXX')= 'UCCF' THEN 
	   SET definition_code = 'ucardtype';
	   ELSE	   
       SET definition_code = 'fcardtype';
	   END IF;
	
 SET p_cursor = 'fop_more_details_cursor';
     OPEN fop_more_details_cursor;
     FETCH fop_more_details_cursor INTO fop_def_key;
     CLOSE fop_more_details_cursor;    
    
      INSERT INTO t_id_tvl_fop_more_details(fopmd_fopd_key,fopmd_order,fopmd_definition_key,fopmd_value_key,fopmd_value_code,fopmd_value_description,
	  fopmd_value_date,lock_key,profile_key)
		VALUES(@tkt_fopd_key,1,fop_def_key,card_key,card_type,card_name,NULL,0,user_profile_key); 
  
     SET  definition_code = 'fcardnum';
     OPEN fop_more_details_cursor;
     FETCH fop_more_details_cursor INTO fop_def_key;
     CLOSE fop_more_details_cursor;   
	  
	  SET tkt_card_number = LTRIM(RTRIM(tkt_card_number));
     
	  IF LENGTH(tkt_card_number) = 15 THEN
	   SET tkt_card_num_x =  CONCAT(SUBSTR(tkt_card_number,1,4),'XXXXXXX',SUBSTR(tkt_card_number,-4));
	  ELSEIF LENGTH(tkt_card_number) = 16 THEN
	   SET tkt_card_num_x =  CONCAT(SUBSTR(tkt_card_number,1,4),'XXXXXXXX',SUBSTR(tkt_card_number,-4));
	  ELSEIF LENGTH(tkt_card_number) = 14 THEN
	   SET tkt_card_num_x =  CONCAT(SUBSTR(tkt_card_number,1,4),'XXXXXX',SUBSTR(tkt_card_number,-4)); 
	  END IF;  
	  
	  IF IFNULL(tkt_card_num_x,0) = 0 then
	  SET tkt_card_num_x = tkt_card_number;
	  END IF;
    
      INSERT INTO t_id_tvl_fop_more_details(fopmd_fopd_key,fopmd_order,fopmd_definition_key,fopmd_value_key,fopmd_value_code,fopmd_value_description,fopmd_value_date,lock_key,profile_key)
		VALUES(@tkt_fopd_key,2,fop_def_key,NULL,NULL,tkt_card_num_x,NULL,0,user_profile_key); 
  
     SET  definition_code = 'fcardDate';
     OPEN fop_more_details_cursor;
     FETCH fop_more_details_cursor INTO fop_def_key;
     CLOSE fop_more_details_cursor;  
    
  INSERT INTO t_id_tvl_fop_more_details(fopmd_fopd_key,fopmd_order,fopmd_definition_key,fopmd_value_key,fopmd_value_code,fopmd_value_description,
  fopmd_value_date,lock_key,profile_key)
  VALUES(@tkt_fopd_key,3,fop_def_key,NULL,NULL,card_exp_dt,NULL,0,user_profile_key); 
  
     SET  definition_code = 'fApprovenum';
     OPEN fop_more_details_cursor;
     FETCH fop_more_details_cursor INTO fop_def_key;
     CLOSE fop_more_details_cursor; 

  INSERT INTO t_id_tvl_fop_more_details(fopmd_fopd_key,fopmd_order,fopmd_definition_key,fopmd_value_key,fopmd_value_code,fopmd_value_description,fopmd_value_date,lock_key,profile_key)
  VALUES(@tkt_fopd_key,4,fop_def_key,NULL,NULL,APP_NUM,NULL,0,user_profile_key); 	 
  
 END IF;
END IF;
SET DONE = FALSE;
END LOOP FOP_DTLS_CURSOR;
CLOSE FOP_DTLS_CURSOR;
END IF; 

         SELECT sum(fopd_trans_amount) INTO tot_rm_crd_amt FROM `t_id_tvl_fop_details` WHERE fopd_ticket_key = @tkt_key AND
    fopd_produt_key = tkt_prd_key AND fopd_docket_key = @dkt_key_no AND fopd_settle_key IN ('3','13');
	
 
      IF DONE THEN
      SET tkt_card_find = 0;
      SET tkt_card_type = NULL;
      SET tkt_card_number=NULL;
    END IF;
 SET 	p_cursor = 'ama_fp_pay_type_cursor';
 IF IFNULL(ldge_crd_flag,'N') ='N' THEN

OPEN ama_fp_pay_type_cursor;
FETCH ama_fp_pay_type_cursor INTO tkt_card_find, tkt_card_type, tkt_card_number,expiry_date,APP_NUM,crd_fp,crd_csh,crd_fpo;
CLOSE ama_fp_pay_type_cursor;

IF   IFNULL(crd_fp,0) = 'FP' AND crd_fpo <> 'FPO' AND crd_csh <> 'FPCASH' THEN 
  SET tkt_fp_crd_amt = IFNULL(sell_fare, 0) + IFNULL(tkt_destination_tax, 0);
  	IF tkt_card_find > 0 THEN
     OPEN card_type_cursor;
     FETCH card_type_cursor INTO card_key,card_type,card_name,card_an_key,card_an_code,card_an_name,card_srv_fee,card_lodge_status,card_lodge_num,fop_cust_link_code;
     CLOSE card_type_cursor;     
  END IF;
  


   IF card_an_code IN ('Airline Card') THEN
     SET procss_typ = 'UCCF';
     SET prcss_code = 'U';
    ELSE
     SET procss_typ = 'NORMAL'; 
	  SET prcss_code = 'N';  
    END IF;
	
	 IF tkt_card_find = 0 OR LTRIM(RTRIM(card_type)) IS NULL  THEN
    SET tkt_card_type   = NULL;
    SET tkt_card_number = NULL;
    SET card_exp_dt = NULL;
  ELSE 
  SET tkt_fp_crd_amt = IFNULL(sell_fare, 0) + IFNULL(tkt_destination_tax, 0);
 
    SET tkt_fp_card_amount = ifnull(tkt_fp_crd_amt,0);
    
   
    SET lpo = IFNULL(lpo,'PENDING');
    SET lpo_date = tkt_date;
    SET sett_mode_2      = '3';
    SET card_exp_dt = STR_TO_DATE(CONCAT('01',expiry_date), "%d%c%y");
  END IF;
	 
	
   SET trans_amount = 0;
     SET fd_local_amt = 0;
     SET FOP_VALUE = NULL;
     SET fop_settle_key = NULL;
 


     
     IF IFNULL(tkt_fp_card_amount,0) != 0  THEN
       SET trans_amount = IFNULL(tkt_fp_card_amount,0) + IFNULL(total_serv_amount,0) + IFNULL(@tot_vat_amt,0)-IFNULL(tot_rm_crd_amt,0)/*+ifnull(tot_tax,0)*/;
       SET fd_local_amt  = trans_amount * ex_rate;
	    SET crd_fp_trans_amount = trans_amount;
	   IF IFNULL(procss_typ,'XXX')= 'UCCF' THEN
	   SET FOP_VALUE = 'UCCF';
	   ELSE	   
       SET FOP_VALUE = 'CARD';
	   END IF;    
            
       OPEN fop_settlement_cursor;
       FETCH fop_settlement_cursor INTO fop_settle_key;
       CLOSE fop_settlement_cursor;
     
     
     IF trans_amount !=0 then
       INSERT INTO t_id_tvl_fop_details (
	 fopd_docket_key,fopd_produt_key,fopd_ticket_key,fopd_settle_key,fopd_currency_key,fopd_ex_rate,fopd_trans_amount,
	 fopd_local_amount,fopd_remarks,fopd_voucher_key,fopd_customer_key,lock_key,profile_key) 
       VALUES  (
         @dkt_key_no,tkt_prd_key,@tkt_key,fop_settle_key,tkt_curr_key,ex_rate,ROUND(trans_amount,4),
         ROUND(fd_local_amt,4),NULL,0,fop_cust_link_code,0,user_profile_key) ;    
   
	 
         SELECT fopd_key INTO @tkt_fopd_key FROM `t_id_tvl_fop_details` WHERE fopd_ticket_key = @tkt_key AND
    fopd_produt_key = tkt_prd_key AND fopd_docket_key = @dkt_key_no AND fopd_settle_key = fop_settle_key;
      
        IF IFNULL(procss_typ,'XXX')= 'UCCF' THEN 
	   SET definition_code = 'ucardtype';
	   ELSE	   
       SET definition_code = 'fcardtype';
	   END IF;
	   
     OPEN fop_more_details_cursor;
     FETCH fop_more_details_cursor INTO fop_def_key;
     CLOSE fop_more_details_cursor;    
    
      INSERT INTO t_id_tvl_fop_more_details(fopmd_fopd_key,fopmd_order,fopmd_definition_key,fopmd_value_key,fopmd_value_code,fopmd_value_description,
	  fopmd_value_date,lock_key,profile_key)
		VALUES(@tkt_fopd_key,1,fop_def_key,card_key,card_type,card_name,NULL,0,user_profile_key); 
  
     SET  definition_code = 'fcardnum';
     OPEN fop_more_details_cursor;
     FETCH fop_more_details_cursor INTO fop_def_key;
     CLOSE fop_more_details_cursor;   
	  
	  SET tkt_card_number = LTRIM(RTRIM(tkt_card_number));
     
	  IF LENGTH(tkt_card_number) = 15 THEN
	   SET tkt_card_num_x =  CONCAT(SUBSTR(tkt_card_number,1,4),'XXXXXXX',SUBSTR(tkt_card_number,-4));
	  ELSEIF LENGTH(tkt_card_number) = 16 THEN
	   SET tkt_card_num_x =  CONCAT(SUBSTR(tkt_card_number,1,4),'XXXXXXXX',SUBSTR(tkt_card_number,-4));
	  ELSEIF LENGTH(tkt_card_number) = 14 THEN
	   SET tkt_card_num_x =  CONCAT(SUBSTR(tkt_card_number,1,4),'XXXXXX',SUBSTR(tkt_card_number,-4)); 
	  END IF;  
	  	  IF IFNULL(tkt_card_num_x,0) = 0 then
	  SET tkt_card_num_x = tkt_card_number;
	  END IF;
    
      INSERT INTO t_id_tvl_fop_more_details(fopmd_fopd_key,fopmd_order,fopmd_definition_key,fopmd_value_key,fopmd_value_code,fopmd_value_description,fopmd_value_date,lock_key,profile_key)
		VALUES(@tkt_fopd_key,2,fop_def_key,NULL,NULL,tkt_card_num_x,NULL,0,user_profile_key); 
  
     SET  definition_code = 'fcardDate';
     OPEN fop_more_details_cursor;
     FETCH fop_more_details_cursor INTO fop_def_key;
     CLOSE fop_more_details_cursor;  
    
  INSERT INTO t_id_tvl_fop_more_details(fopmd_fopd_key,fopmd_order,fopmd_definition_key,fopmd_value_key,fopmd_value_code,fopmd_value_description,
  fopmd_value_date,lock_key,profile_key)
  VALUES(@tkt_fopd_key,3,fop_def_key,NULL,NULL,card_exp_dt,NULL,0,user_profile_key); 
  
     SET  definition_code = 'fApprovenum';
     OPEN fop_more_details_cursor;
     FETCH fop_more_details_cursor INTO fop_def_key;
     CLOSE fop_more_details_cursor; 

  INSERT INTO t_id_tvl_fop_more_details(fopmd_fopd_key,fopmd_order,fopmd_definition_key,fopmd_value_key,fopmd_value_code,fopmd_value_description,fopmd_value_date,lock_key,profile_key)
  VALUES(@tkt_fopd_key,4,fop_def_key,NULL,NULL,APP_NUM,NULL,0,user_profile_key); 	 
END IF;  
END IF;
END IF;
END IF;

         SELECT sum(fopd_trans_amount) INTO tot_tkt_crd_amt FROM `t_id_tvl_fop_details` WHERE fopd_ticket_key = @tkt_key AND
    fopd_produt_key = tkt_prd_key AND fopd_docket_key = @dkt_key_no AND fopd_settle_key IN ('3','13');
	
     SET trans_amount = 0;
     SET fd_local_amt = 0;
     SET FOP_VALUE = NULL;
     SET fop_settle_key = NULL;
      
      
  

	
	IF IFNULL(cust_amt,0) != 0 THEN
       SET trans_amount = IFNULL(cust_amt,0) + IFNULL(total_serv_amount,0) + IFNULL(@tot_vat_amt,0) - IFNULL(tot_tkt_crd_amt,0);
     SET cr_trans_amount = trans_amount;
       SET fd_local_amt  = trans_amount * ex_rate;
       SET FOP_VALUE = 'CREDIT';
     
      OPEN fop_settlement_cursor;
      FETCH fop_settlement_cursor INTO fop_settle_key;
      CLOSE fop_settlement_cursor;
      
 
  
  
  
IF trans_amount !=0 then
      INSERT INTO t_id_tvl_fop_details (
	fopd_docket_key,fopd_produt_key,fopd_ticket_key,fopd_settle_key,fopd_customer_key,fopd_currency_key,fopd_ex_rate,fopd_trans_amount,
	fopd_local_amount,fopd_remarks,fopd_voucher_key,lock_key,profile_key) 
      VALUES  (
       @dkt_key_no,tkt_prd_key,@tkt_key,fop_settle_key,cust_key,tkt_curr_key,ex_rate,ROUND(trans_amount,4),
       ROUND(fd_local_amt,4),NULL,0,0,user_profile_key) ;     
      
      SELECT fopd_key INTO @tkt_fopd_key FROM `t_id_tvl_fop_details` WHERE fopd_ticket_key = @tkt_key AND
    fopd_produt_key = tkt_prd_key AND fopd_docket_key = @dkt_key_no AND fopd_settle_key = 2;       
      

  
      
      
      SET  definition_code = 'fbpcode';
     OPEN fop_more_details_cursor;
     FETCH fop_more_details_cursor INTO fop_def_key;
     CLOSE fop_more_details_cursor;    
    
      INSERT INTO t_id_tvl_fop_more_details(fopmd_fopd_key,fopmd_order,fopmd_definition_key,fopmd_value_key,fopmd_value_code,fopmd_value_description,fopmd_value_date,lock_key,profile_key)
		VALUES(@tkt_fopd_key,1,fop_def_key,cust_key,cust_code,NULL,NULL,0,user_profile_key); 
  
     SET  definition_code = 'flpnum';
     OPEN fop_more_details_cursor;
     FETCH fop_more_details_cursor INTO fop_def_key;
     CLOSE fop_more_details_cursor;    
    
      INSERT INTO t_id_tvl_fop_more_details(fopmd_fopd_key,fopmd_order,fopmd_definition_key,fopmd_value_key,fopmd_value_code,fopmd_value_description,fopmd_value_date,lock_key,profile_key)
  VALUES(@tkt_fopd_key,2,fop_def_key,NULL,NULL,IFNULL(lpo,'PENDING'),NULL,0,user_profile_key); 
  
     SET  definition_code = 'flpdate';
     OPEN fop_more_details_cursor;
     FETCH fop_more_details_cursor INTO fop_def_key;
     CLOSE fop_more_details_cursor;    
    
      INSERT INTO t_id_tvl_fop_more_details(fopmd_fopd_key,fopmd_order,fopmd_definition_key,fopmd_value_key,fopmd_value_code,fopmd_value_description,fopmd_value_date,lock_key,profile_key)
		VALUES(@tkt_fopd_key,3,fop_def_key,NULL,NULL,null,lpo_date,0,user_profile_key);  
     END IF;
END IF;   
 

 set tot_trans_amount = IFNULL(cash_trans_amount,0) + IFNULL(cr_trans_amount,0) +  IFNULL(tot_tkt_crd_amt,0);
 SET tot_trans_amount=CAST(tot_trans_amount AS DECIMAL(18,4));
 UPDATE t_id_tvl_fare_details SET tfd_settle_amount = tot_trans_amount
  WHERE tfd_docket_key = @dkt_key_no AND tfd_product_key = tkt_prd_key AND tfd_ticket_key = @tkt_key;
  
    
  
     

       
    
     
       IF P_FOP_KEY IS NULL AND fop_settle_key IN (3,13) THEN
       SET P_FOP_KEY = @tkt_fopd_key;
       ELSE
       SET P_FOP_KEY = CONCAT(P_FOP_KEY,':',@tkt_fopd_key);
       END IF;

    
     OPEN auto_inv_file_check;
      FETCH auto_inv_file_check INTO v_inv_chk_f;
      CLOSE auto_inv_file_check;		 
      
     
     
      IF ifnull(v_inv_chk_f,'N')='Y' then
      SET P_FLEX_DTL='I'; 
      ELSE
      SET P_FLEX_DTL='C';
      END IF;    	   
	  
     

	 
     SET DONE = FALSE;
     
     OPEN tvl_udid_amadeus;
      tvl_udid_amadeus: LOOP
      FETCH tvl_udid_amadeus INTO am_udid_value,am_udid_abbreviation;
      IF DONE THEN
       LEAVE tvl_udid_amadeus;
      END IF;   
	  
 
 
      
     SET p_udid_code = am_udid_abbreviation; 
     SET p_udid_value	= NULL;
     SET ud_def_key	= NULL;
     SET ud_mode_key	= NULL;
     SET ud_order	= NULL;
     SET dynamic_udid_key = NULL;  
     
     OPEN tvl_dynamic_def_key;
     FETCH tvl_dynamic_def_key INTO dynamic_udid_key;
     CLOSE tvl_dynamic_def_key;  
	 
	 
 
     
     OPEN air_udid_values_1;
     FETCH air_udid_values_1 INTO p_udid_value;
     CLOSE air_udid_values_1;
     
 
	 IF IFNULL(p_udid_value,'KKK') = 'KKK' THEN 
	 OPEN  air_udid_values_4;
     FETCH air_udid_values_4 INTO p_udid_value;
     CLOSE air_udid_values_4;
	 END IF;
	 
	 SET p_udid_value = LTRIM(RTRIM(REPLACE(p_udid_value,'/','')));
	 
	
	  
 

	 
     IF IFNULL(p_udid_value,0) != 0 IS NOT NULL AND p_udid_value != '' THEN 
     
      OPEN tvl_ama_udid_def_key;
      FETCH tvl_ama_udid_def_key INTO ud_def_key,ud_mode_key,ud_order;
      CLOSE tvl_ama_udid_def_key;

  OPEN udid_value_code_cursor;
  FETCH udid_value_code_cursor INTO value_key,value_code;
  CLOSE udid_value_code_cursor;
      
      IF ud_def_key IS NOT NULL AND ud_def_key != '' THEN
       INSERT INTO t_id_tvl_udid_details(tud_docket_key,tud_mode_key,tud_product_key,tud_ticket_key,tud_defintion_key,tud_order,
		tud_value_value_key,tud_value_code,tud_value_description,tud_value_date,lock_key,profile_key)
       VALUES(@dkt_key_no,ud_mode_key,tkt_prd_key,@tkt_key,ud_def_key,ud_order,IFNULL(value_key,NULL),IFNULL(value_code,NULL),p_udid_value,NULL,0,user_profile_key);
      END IF;
     END IF;
      
      SET DONE = FALSE;
     END LOOP tvl_udid_amadeus;
     CLOSE tvl_udid_amadeus; 
    
     
     SET t_sec_serial	= NULL;
     SET t_sec_src		= NULL;
     SET t_sec_dest		= NULL;
     SET t_sec_class		= NULL;
     SET t_sec_airline	= NULL;
     SET t_sec_year		= NULL;
     SET t_sec_dept_dt	= NULL;
     SET t_sec_dept_tm	= NULL;
     SET t_sec_arrv_dt 	= NULL;
     SET t_sec_arrv_tm	= NULL;
     SET t_sec_baggage	= NULL;
     SET t_sec_flight 	= NULL;
     SET s_arr_key		= NULL;
     SET s_dst_key		= NULL;
     SET s_cls_key		= NULL;
     SET s_air_key		= NULL;
     SET s_coupon 		= 0;  
     SET conj_flg 		= NULL;    
     
     
     SET DONE = FALSE;
     
     SET p_cursor    =   'Ticket Sectors'; 
      
     IF IFNULL(emd_flag, 'N') = 'Y' AND IFNULL(emd_sector_flag,'N') = 'Y' THEN
      OPEN ticket_sectors_emd;
      ticket_sectors_emd: LOOP
     FETCH ticket_sectors_emd INTO t_sec_serial,t_sec_src,t_sec_dest,t_sec_class,t_sec_airline,t_sec_year,t_sec_dept_dt,
     t_sec_dept_tm,t_sec_arrv_dt,t_sec_arrv_tm,t_sec_baggage,t_sec_flight,trvl_duration;
      IF DONE THEN
       LEAVE ticket_sectors_emd;
      END IF;   
      
      IF t_sec_src IS NOT NULL THEN
       OPEN airport_src_key;
       FETCH airport_src_key INTO s_arr_key;
       CLOSE airport_src_key;
      END IF;
      
      IF t_sec_dest IS NOT NULL THEN
       OPEN airport_dest_key;
       FETCH airport_dest_key INTO s_dst_key;
       CLOSE airport_dest_key;
      END IF;
      
      IF t_sec_class IS NOT NULL THEN
       OPEN class_master_key;
       FETCH class_master_key INTO s_cls_key;
       CLOSE class_master_key;
      END IF;
      
      IF t_sec_airline IS NOT NULL THEN
       OPEN airline_master_key;
       FETCH airline_master_key INTO s_air_key;
       CLOSE airline_master_key;
      END IF;
     
    
    IF t_sec_year = 'Y' THEN      
      SET  tkt_dept_date := STR_TO_DATE(LTRIM(RTRIM(t_sec_dept_dt)), '%d %b %Y');
      SET  tkt_arr_date := STR_TO_DATE(LTRIM(RTRIM(t_sec_arrv_dt)), '%d %b %Y');
    ELSE
      SET  tkt_dept_date := STR_TO_DATE(CONCAT(LTRIM(RTRIM(t_sec_dept_dt)),YEAR(CURRENT_DATE)), '%d %b %Y');
      SET  tkt_arr_date := STR_TO_DATE(CONCAT(LTRIM(RTRIM(t_sec_arrv_dt)),YEAR(CURRENT_DATE)), '%d %b %Y');
      
      IF tkt_dept_date < tkt_date THEN
        SET tkt_dept_date := DATE_ADD(tkt_dept_date, INTERVAL 1 YEAR) ;
        SET  tkt_arr_date := DATE_ADD(tkt_arr_date, INTERVAL 1 YEAR) ;       
      END IF;
    END IF;
           
     SET s_coupon =  s_coupon + 1;
     SET sec_tkt_number = p_tkt_number;
     IF t_sec_serial = 5 OR t_sec_serial = 9 THEN
      IF p_conj_number IS NOT NULL THEN
      
     SET conj_flg = 0;	  
       SET sec_tkt_number = CONCAT(SUBSTR(p_tkt_number,1,8),SUBSTR(p_conj_number,1,2));
      END IF;
     END IF;
	 
	
     
      INSERT INTO t_id_tvl_air_segment_details(aseg_ticket_key,aseg_ticket_number,aseg_coupon_number,aseg_conjunction_flag,aseg_origin_key,aseg_destination_key,aseg_airline_key,
	aseg_class_key,aseg_dep_date,aseg_dep_time,aseg_arr_date,aseg_arr_time,aseg_fare_basis,aseg_duration,aseg_baggage_allowed,aseg_flight_no,aseg_coupon_status,lock_key,profile_key)
	VALUES(@tkt_key,sec_tkt_number,s_coupon,0,s_arr_key,s_dst_key,s_air_key,s_cls_key,tkt_dept_date,t_sec_dept_tm,tkt_arr_date,t_sec_arrv_tm,NULL,trvl_duration,t_sec_baggage,t_sec_flight,'A',0,user_profile_key);
     SET t_sec_serial	= NULL;
     SET t_sec_src	= NULL;
     SET t_sec_dest	= NULL;
     SET t_sec_class	= NULL;
     SET t_sec_airline	= NULL;
     SET t_sec_year	= NULL;
     SET t_sec_dept_dt	= NULL;
     SET t_sec_dept_tm	= NULL;
     SET t_sec_arrv_dt 	= NULL;
     SET t_sec_arrv_tm	= NULL;
     SET t_sec_baggage	= NULL;
     SET t_sec_flight 	= NULL;
	 SET trvl_duration = NULL;
     SET s_arr_key	= NULL;
     SET s_dst_key	= NULL;
     SET s_cls_key	= NULL;
     SET s_air_key	= NULL;
     SET DONE = FALSE;
     END LOOP ticket_sectors_emd;
     CLOSE ticket_sectors_emd;
     ELSE
      OPEN ticket_sectors;
      ticket_sectors: LOOP
     FETCH ticket_sectors INTO t_sec_serial,t_sec_src,t_sec_dest,t_sec_class,t_sec_airline,t_sec_year,t_sec_dept_dt,
     t_sec_dept_tm,t_sec_arrv_dt,t_sec_arrv_tm,t_sec_baggage,t_sec_flight,miles,trvl_duration;
      IF DONE THEN
       LEAVE ticket_sectors;
      END IF;   
	  
  
      IF t_sec_src IS NOT NULL THEN
       OPEN airport_src_key;
       FETCH airport_src_key INTO s_arr_key;
       CLOSE airport_src_key;
      END IF;
	  
	  IF s_arr_key is null then
	  SET s_arr_key = '9000';
	  end if;
	  
  
	    OPEN fare_basis_cursor;
       FETCH fare_basis_cursor INTO fare_basis;
       CLOSE fare_basis_cursor;
	  
  
      IF t_sec_dest IS NOT NULL THEN
       OPEN airport_dest_key;
       FETCH airport_dest_key INTO s_dst_key;
       CLOSE airport_dest_key;
	  	
      END IF;
      
	  IF s_dst_key is null then 
	  SET s_dst_key = '9000';
	  end if;
	  
  
      IF t_sec_class IS NOT NULL THEN
       OPEN class_master_key;
       FETCH class_master_key INTO s_cls_key;
       CLOSE class_master_key;
      END IF;
      
      IF t_sec_airline IS NOT NULL THEN
       OPEN airline_master_key;
       FETCH airline_master_key INTO s_air_key;
       CLOSE airline_master_key;
      END IF;
      
    IF t_sec_year = 'Y' THEN      
      SET  tkt_dept_date := STR_TO_DATE(LTRIM(RTRIM(t_sec_dept_dt)), '%d %b %Y');
      SET  tkt_arr_date := STR_TO_DATE(LTRIM(RTRIM(t_sec_arrv_dt)), '%d %b %Y');
    ELSE
      SET  tkt_dept_date := STR_TO_DATE(CONCAT(LTRIM(RTRIM(t_sec_dept_dt)),YEAR(CURRENT_DATE)), '%d %b %Y');
      SET  tkt_arr_date := STR_TO_DATE(CONCAT(LTRIM(RTRIM(t_sec_arrv_dt)),YEAR(CURRENT_DATE)), '%d %b %Y');
      
      IF tkt_dept_date < tkt_date THEN
        SET tkt_dept_date := DATE_ADD(tkt_dept_date, INTERVAL 1 YEAR) ;
        SET  tkt_arr_date := DATE_ADD(tkt_arr_date, INTERVAL 1 YEAR) ;       
      END IF;
    END IF;
     
     SET s_coupon =  s_coupon + 1; 
     SET sec_tkt_number = p_tkt_number;
     IF t_sec_serial = 5 OR t_sec_serial = 9 THEN
      IF p_conj_number IS NOT NULL THEN
       
	   SET conj_flg = 0;
       SET sec_tkt_number = CONCAT(SUBSTR(p_tkt_number,1,8),SUBSTR(p_conj_number,1,2));
      END IF;
     END IF;
 
	
     
      INSERT INTO t_id_tvl_air_segment_details(aseg_ticket_key,aseg_ticket_number,aseg_coupon_number,aseg_conjunction_flag,aseg_sector_miles,aseg_origin_key,aseg_destination_key,aseg_airline_key,
	aseg_class_key,aseg_dep_date,aseg_dep_time,aseg_arr_date,aseg_arr_time,aseg_fare_basis,aseg_duration,aseg_baggage_allowed,aseg_flight_no,aseg_coupon_status,lock_key,profile_key)
	VALUES(@tkt_key,sec_tkt_number,s_coupon,0,miles,s_arr_key,s_dst_key,s_air_key,s_cls_key,tkt_dept_date,t_sec_dept_tm,tkt_arr_date,t_sec_arrv_tm,fare_basis,trvl_duration,t_sec_baggage,t_sec_flight,'A',0,user_profile_key);
     SET t_sec_serial	= NULL;
     SET t_sec_src	= NULL;
     SET t_sec_dest	= NULL;
     SET t_sec_class	= NULL;
     SET t_sec_airline	= NULL;
     SET t_sec_year	= NULL;
     SET t_sec_dept_dt	= NULL;
     SET t_sec_dept_tm	= NULL;
     SET t_sec_arrv_dt 	= NULL;
     SET t_sec_arrv_tm	= NULL;
     SET t_sec_baggage	= NULL;
     SET t_sec_flight 	= NULL;
	 SET trvl_duration = NULL;
	 SET miles = NULL;
	 set fare_basis = NULL;
     SET s_arr_key	= NULL;
     SET s_dst_key	= NULL;
     SET s_cls_key	= NULL;
     SET s_air_key	= NULL;
     SET DONE = FALSE;
     END LOOP ticket_sectors;
     CLOSE ticket_sectors;		 
     END IF;
	 
       OPEN  excep_inv_ticket_chk_cursor;
       FETCH excep_inv_ticket_chk_cursor INTO excep_tkt_chk;
       CLOSE excep_inv_ticket_chk_cursor;
	   
 
 
 
IF IFNULL(excep_tkt_chk,'N') = 'Y' then
 set P_SUCCESS ='N';
ELSE 
	 set P_SUCCESS ='Y';
END IF;	 



	 
	OPEN  AIR_TKT_NO_CHK;
    FETCH AIR_TKT_NO_CHK INTO v_conf_tkt_number_chk;
    CLOSE AIR_TKT_NO_CHK;

IF IFNULL(v_conf_tkt_number_chk,'N') = 'Y' THEN 
     update t_id_tvl_docket_header_summary 
	  set dkt_air_count = ifnull(dkt_air_cnt,0) + 1,dkt_account_status = (case dkt_acc_status when 'Not Collected' then 'Not Collected' else 'Partially Collected' end),dkt_modified_by = user_created_key ,dkt_modified_on = CURRENT_DATE where dkt_number = dkt_num; 	  
 
 
	  END IF;	
 
   ELSE
    SET msg = 'File Data Missing';
    SET p_cursor_1 = 'Values';
    
    IF P_TKT_NUMBER IS NULL THEN
     SET p_cursor_1 = CONCAT(p_cursor_1,' Ticket Number');
    END IF;
    IF t_agent_key IS NULL THEN 
     SET p_cursor_1 = CONCAT(p_cursor_1,' Agent');
    END IF;
    IF air_rls_key IS NULL THEN
     SET p_cursor_1 = CONCAT(p_cursor_1,' Airline');
    END IF;
    IF t_location_key IS NULL THEN
     SET p_cursor_1 = CONCAT(p_cursor_1,' Location');
    END IF;
    IF src_key IS NULL THEN
     SET p_cursor_1 = CONCAT(p_cursor_1,' Source Key');
    END IF;
    IF final_key IS NULL THEN     
     SET p_cursor_1 = CONCAT(p_cursor_1,' Destination Key');
    END IF;
    
    SET p_cursor = CONCAT(p_cursor_1,' Details Missing');
    
   
    set P_SUCCESS ='N';
    INSERT INTO t_id_gds_loading_exception (LE_COMPANY,LE_CRS,LE_AIRLINE,LE_TICKET_NUMBER,LE_LOAD_DATE,LE_LOAD_ERROR,
					    LE_LOAD_PLACE,LE_REMARK_1,LE_REMARK_2,LE_REMARK_3,LE_REMARK_4,lock_key,profile_key) 
				VALUES('1','AMADEUS',tkt_airline,P_TKT_NUMBER,CURRENT_DATE,msg,p_cursor_1,CONCAT('Reference Key',p_key),NULL,NULL,IFNULL(pnr_number,'NULL'),0,4);
    
   END IF;
   ELSE
    CLOSE ticket_check_cursor;
   END IF;  
  END IF;  
SET DONE = FALSE;
END LOOP CURSOR_A;
CLOSE CURSOR_A;
SET BDF =0;

IF P_SUCCESS = 'Y' THEN
    UPDATE t_id_gds_details
    SET tigd_status = 'C'
    WHERE tigd_gds_key = P_KEY
    AND tigd_gds_type = 'AMADEUS';
  ELSEIF P_SUCCESS = 'N' THEN
    UPDATE t_id_gds_details
    SET tigd_status = 'E',
        tigd_flex_2 = p_cursor
    WHERE tigd_gds_key = P_KEY
    AND tigd_gds_type = 'AMADEUS';
  ELSE
    UPDATE t_id_gds_details
    SET tigd_status = 'N'
    WHERE tigd_gds_key = P_KEY
    AND tigd_gds_type = 'AMADEUS';
  END IF;
END IF;
END;
END IF;

 IF IFNULL(prd_code,'xxx') NOT IN('HHL','HTL','CCR') AND IFNULL(void_fnd,'xyz') <> 'VOID'  and IFNULL(air_rfnd,'xyz') = 'RF' THEN
BEGIN
CALL amadeus_refund_load(p_key,@a,@b,@c,@d);
  END;
  ELSEIF IFNULL(prd_code,'xxx') NOT IN('HHL','HTL','CCR') AND IFNULL(void_fnd,'xyz') = 'VOID'  and IFNULL(air_rfnd,'xyz') <> 'RF' THEN
  BEGIN 
 DECLARE air_rls_key			BIGINT;
 DECLARE tkt_key				BIGINT;
 DECLARE dkt_key				BIGINT;
 DECLARE prd_key				BIGINT;
 DECLARE DONE 					BOOLEAN DEFAULT FALSE;
 DECLARE tkt_air_release	VARCHAR(10);
 DECLARE tkt_number			VARCHAR(50);	
 DECLARE tkt_status			VARCHAR(5);	
 DECLARE cur_find				VARCHAR(10);
 DECLARE tmp_void_date		VARCHAR(10);
 DECLARE bk_clerk				VARCHAR(10);
 DECLARE errcount 			BIGINT;
 DECLARE errno 				BIGINT;
 DECLARE msg 					TEXT;
 DECLARE p_cursor       	VARCHAR(240);
 DECLARE p_cursor_1     	VARCHAR(240);
 DECLARE tkt_accounting   	VARCHAR(5);
 
 DECLARE amadeus_void_check_cursor CURSOR FOR  
   SELECT SUBSTR(air_2, 1, 4) void_status, LTRIM(RTRIM(SUBSTR(air_2, 5, 5))) void_date,
          SUBSTR(air_3, 1, 2) bkclerk
     FROM id_air_amadeus
    WHERE air_key = p_key;


 DECLARE ama_t_airline_ticket_cursor CURSOR FOR  
  select SUBSTR(airt_0, 5,3) air_release,  SUBSTR(airt_0, 9, 10) tkt_number
    FROM id_air_t
    WHERE airt_key = p_key
     and SUBSTR(airt_0, 1,4) = 'TMCD'
   union all
  SELECT SUBSTR(airt_0, 4,3) air_release,  SUBSTR(airt_0, 8, 10) tkt_number
     FROM id_air_t
    WHERE airt_key = p_key;
    
 DECLARE tkt_air_release_key CURSOR FOR
  SELECT airline_key FROM t_id_tvl_airline_master 
   WHERE LTRIM(RTRIM(CODE)) = LTRIM(RTRIM(tkt_air_release));   

 DECLARE ticket_details_accounting CURSOR FOR  
  SELECT atd_key,atd_docket_key,atd_product_key,atd_account_status FROM t_id_tvl_air_ticket_details 
   WHERE atd_ticket_number = tkt_number and atd_ticket_status = 'S'
    and atd_airline_key = air_rls_key;
    
   DECLARE CONTINUE HANDLER FOR NOT FOUND SET DONE = TRUE;
  
  DECLARE EXIT HANDLER FOR SQLEXCEPTION
  BEGIN
    GET CURRENT DIAGNOSTICS CONDITION 1
      errno = MYSQL_ERRNO, msg = MESSAGE_TEXT;
                INSERT INTO t_id_gds_loading_exception (LE_COMPANY,LE_CRS,LE_AIRLINE,LE_TICKET_NUMBER,LE_LOAD_DATE,LE_LOAD_ERROR,
					    LE_LOAD_PLACE,LE_REMARK_1,LE_REMARK_2,LE_REMARK_3,LE_REMARK_4,lock_key,profile_key) 
				VALUES('1','AMADEUS_VOID',tkt_air_release,tkt_number,CURRENT_DATE,msg,p_cursor,CONCAT('Reference Key',p_key),NULL,NULL,IFNULL(pnr_number,'NULL'),0,4);
         
  END;
  
  DECLARE EXIT HANDLER FOR 1265
  BEGIN
    GET CURRENT DIAGNOSTICS CONDITION 1
      errno = MYSQL_ERRNO, msg = MESSAGE_TEXT;
                INSERT INTO t_id_gds_loading_exception (LE_COMPANY,LE_CRS,LE_AIRLINE,LE_TICKET_NUMBER,LE_LOAD_DATE,LE_LOAD_ERROR,
					    LE_LOAD_PLACE,LE_REMARK_1,LE_REMARK_2,LE_REMARK_3,LE_REMARK_4,lock_key,profile_key) 
				VALUES('1','AMADEUS_VOID',tkt_air_release,tkt_number,CURRENT_DATE,msg,p_cursor,CONCAT('Reference Key',p_key),NULL,NULL,IFNULL(pnr_number,'NULL'),0,4);
         
  END;


  OPEN amadeus_void_check_cursor;
  FETCH amadeus_void_check_cursor INTO cur_find, tmp_void_date, bk_clerk;
  CLOSE amadeus_void_check_cursor;
    
  IF IFNULL(cur_find,NULL) = 'VOID' THEN  
    OPEN ama_t_airline_ticket_cursor;
    FETCH ama_t_airline_ticket_cursor INTO tkt_air_release, tkt_number;
    CLOSE ama_t_airline_ticket_cursor;
    
    OPEN tkt_air_release_key;
	 FETCH tkt_air_release_key INTO air_rls_key;
	 CLOSE tkt_air_release_key; 
    
 
         OPEN ticket_details_accounting;
         FETCH ticket_details_accounting INTO tkt_key,dkt_key,prd_key,tkt_accounting;
         CLOSE ticket_details_accounting;
       IF tkt_accounting = 'N' THEN
              
        
         UPDATE t_id_tvl_air_ticket_details SET atd_ticket_status='V', atd_account_status = 'C', atd_net_collection = 0,atd_payable_collection = 0,modified_on= current_timestamp WHERE atd_account_status = 'N' AND `atd_key` = tkt_key;
         

         UPDATE t_id_tvl_fare_details SET
         tfd_base_fare = 0,tfd_deal_fare = 0,tfd_total_tax = 0,tfd_total_service_charge = 0,
		   tfd_comm_key1 = null,tfd_comm_percent_1 = 0,tfd_comm_on_1 = 0,tfd_comm_amount_1 = 0,
         tfd_comm_key2 = null,tfd_comm_percent_2 = 0,tfd_comm_on_2 = 0,tfd_comm_amount_2 = 0,
			tfd_disc_key1 = null,tfd_disc_percent_1 = 0,tfd_disc_on_1 = 0,tfd_disc_amount_1 = 0,
		   tfd_disc_percent_2 = 0,tfd_disc_on_2 = 0,tfd_disc_amount_2 = 0,
		   tfd_cash_disc = 0,tfd_settle_amount = 0,tfd_nego_fare = 0,tfd_priv_fare = 0,
		   tfd_prom_fare = 0,tfd_deal_code = null,tfd_reason_code = null,tfd_incentive_paid = 0,
		   tfd_high_fare = 0,tfd_low_fare = 0,tfd_base_fare_new = 0,tfd_deal_fare_new = 0,
		   tfd_comm_percent_1_new = 0,tfd_comm_on_1_new = 0,tfd_comm_amount_1_new = 0,
		   tfd_comm_percent_2_new = 0,tfd_comm_on_2_new = 0,tfd_comm_amount_2_new = 0
		   WHERE tfd_docket_key = dkt_key AND tfd_product_key = prd_key AND tfd_ticket_key = tkt_key;
         
         DELETE FROM t_id_tvl_fop_more_details WHERE fopmd_fopd_key in
         (SELECT fopd_key FROM t_id_tvl_fop_details WHERE fopd_docket_key = dkt_key AND fopd_produt_key= prd_key AND fopd_ticket_key= tkt_key);
         
         UPDATE t_id_tvl_fop_details SET fopd_settle_key=1,fopd_trans_amount = 0 ,fopd_local_amount = 0 ,fopd_customer_key = null,fopd_invoice_flag = 0
         WHERE fopd_docket_key = dkt_key AND fopd_produt_key= prd_key AND fopd_ticket_key = tkt_key;
         DELETE FROM t_id_tvl_service_charges_details WHERE tsc_docket_key = dkt_key AND tsc_product_key = prd_key AND tsc_ticket_key =  tkt_key;
         DELETE FROM t_id_tvl_air_taxes WHERE at_docket_key = dkt_key AND at_product_key = prd_key AND at_ticket_key =  tkt_key;
         DELETE FROM t_id_tvl_vat_charge_details WHERE tvc_docket_key = dkt_key AND tvc_product_key = prd_key AND tvc_ticket_key =  tkt_key;
         DELETE FROM t_id_tvl_udid_details WHERE tud_docket_key = dkt_key AND tud_product_key = prd_key AND tud_ticket_key =  tkt_key;
         DELETE FROM t_id_tvl_void_charges WHERE void_docket_key = dkt_key AND void_product_key = prd_key AND void_ticket_key =  tkt_key;
       
       END IF;
   
  END IF;  
 END; 
END IF;

 END $$
  DELIMITER;